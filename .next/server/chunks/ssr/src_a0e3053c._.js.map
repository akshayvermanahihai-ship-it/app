{"version":3,"sources":["turbopack:///[project]/src/components/LastEnrolledPatient.tsx","turbopack:///[project]/src/app/reception/patient-category/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { User, ChevronRight } from 'lucide-react';\n\ninterface LastPatient {\n  cro: string;\n  patient_name: string;\n}\n\nexport default function LastEnrolledPatient() {\n  const [lastPatient, setLastPatient] = useState<LastPatient | null>(null);\n\n  useEffect(() => {\n    fetchLastPatient();\n  }, []);\n\n  const fetchLastPatient = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/patients/last-enrolled');\n      if (response.ok) {\n        const data = await response.json();\n        setLastPatient(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching last patient:', error);\n    }\n  };\n\n  if (!lastPatient) return null;\n\n  return (\n    <div className=\"bg-blue-600 bg-opacity-20 rounded-lg p-4 border border-blue-200\">\n      <div className=\"flex items-center space-x-2 text-white\">\n        <User className=\"h-4 w-4\" />\n        <span className=\"text-sm font-medium text-white\">Last Enrolled Patient</span>\n        <ChevronRight className=\"h-3 w-3 text-white\" />\n        <span className=\"text-sm font-bold text-white\">{lastPatient.cro}</span>\n        <ChevronRight className=\"h-3 w-3 text-white\" />\n        <span className=\"text-sm font-medium text-white\">{lastPatient.patient_name}</span>\n      </div>\n    </div>\n  );\n}","'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Tag, Plus, Edit, Search, X } from 'lucide-react';\nimport { useToastContext } from '@/context/ToastContext';\nimport LastEnrolledPatient from '@/components/LastEnrolledPatient';\n\ninterface Category {\n  cat_id: number;\n  cat_name: string;\n  cat_type: string;\n}\n\nexport default function PatientCategory() {\n  const toast = useToastContext();\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [showModal, setShowModal] = useState(false);\n  const [editingCategory, setEditingCategory] = useState<Category | null>(null);\n  const [formData, setFormData] = useState({ cat_name: '', cat_type: '' });\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('/api/categories');\n      if (response.ok) {\n        const data = await response.json();\n        setCategories(data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAdd = () => {\n    setEditingCategory(null);\n    setFormData({ cat_name: '', cat_type: '' });\n    setShowModal(true);\n  };\n\n  const handleEdit = (category: Category) => {\n    setEditingCategory(category);\n    setFormData({ cat_name: category.cat_name, cat_type: category.cat_type });\n    setShowModal(true);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const url = editingCategory ? `https://varahasdc.co.in/api/admin/categories/${editingCategory.cat_id}` : 'https://varahasdc.co.in/api/admin/categories';\n      const method = editingCategory ? 'PUT' : 'POST';\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        toast.error(`Category ${editingCategory ? 'updated' : 'created'} successfully!`);\n        setShowModal(false);\n        fetchCategories();\n      }\n    } catch (error) {\n      toast.error('Error saving category');\n    }\n  };\n\n  const filteredCategories = categories.filter(category =>\n    category.cat_name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const totalPages = Math.ceil(filteredCategories.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const paginatedCategories = filteredCategories.slice(startIndex, startIndex + itemsPerPage);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 p-6 space-y-6\">\n      <div className=\"bg-gradient-to-r from-blue-500 to-indigo-600 text-white p-6 rounded-xl shadow-lg\">\n        <div className=\"flex justify-between items-start\"><div><h1 className=\"text-3xl font-bold mb-2\">Patient Category</h1>\n        <p className=\"text-blue-100 text-lg\">Manage patient categories and types</p></div><div className=\"ml-6\"><LastEnrolledPatient /></div></div>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search categories...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n          <button onClick={handleAdd} className=\"bg-gradient-to-r from-green-500 to-emerald-600 text-white px-4 py-2 rounded-lg hover:from-green-600 hover:to-emerald-700 transition-all duration-200 flex items-center space-x-2 shadow-md font-medium\">\n            <Plus className=\"h-5 w-5\" />\n            <span>Add Category</span>\n          </button>\n        </div>\n\n        {loading ? (\n          <div className=\"text-center py-8\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n            <p className=\"mt-4 text-gray-600\">Loading categories...</p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">S.No</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Category Name</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Category Type</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {paginatedCategories.map((category, index) => (\n                  <tr key={category.cat_id} className=\"hover:bg-gray-50 transition-colors\">\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black font-medium\">{startIndex + index + 1}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-black\">{category.cat_name}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-black\">\n                        {category.cat_type}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <button onClick={() => handleEdit(category)} className=\"inline-flex items-center px-3 py-1 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-lg hover:from-blue-600 hover:to-indigo-700 transition-all duration-200 text-xs font-medium shadow-md\">\n                        <Edit className=\"h-3 w-3 mr-1\" />\n                        Edit\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n\n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"px-6 py-4 border-t border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"text-sm text-gray-700\">\n                    Page {currentPage} of {totalPages} | Total: {filteredCategories.length} records\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    {currentPage > 1 && (\n                      <>\n                        <button\n                          onClick={() => setCurrentPage(1)}\n                          className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50\"\n                        >\n                          First\n                        </button>\n                        <button\n                          onClick={() => setCurrentPage(currentPage - 1)}\n                          className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50\"\n                        >\n                          Previous\n                        </button>\n                      </>\n                    )}\n                    \n                    <div className=\"flex items-center space-x-1\">\n                      {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                        const startPage = Math.max(1, currentPage - 2);\n                        const page = startPage + i;\n                        if (page > totalPages) return null;\n                        \n                        return (\n                          <button\n                            key={page}\n                            onClick={() => setCurrentPage(page)}\n                            className={`px-3 py-2 text-sm font-medium rounded-lg ${\n                              currentPage === page\n                                ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white'\n                                : 'bg-gradient-to-r from-gray-400 to-gray-500 text-white hover:from-gray-500 hover:to-gray-600'\n                            }`}\n                          >\n                            {page}\n                          </button>\n                        );\n                      })}\n                    </div>\n                    \n                    {currentPage < totalPages && (\n                      <>\n                        <button\n                          onClick={() => setCurrentPage(currentPage + 1)}\n                          className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50\"\n                        >\n                          Next\n                        </button>\n                        <button\n                          onClick={() => setCurrentPage(totalPages)}\n                          className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50\"\n                        >\n                          Last\n                        </button>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold\">{editingCategory ? 'Edit Category' : 'Add Category'}</h3>\n              <button onClick={() => setShowModal(false)} className=\"text-gray-500 hover:text-gray-700\">\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Category Name\"\n                value={formData.cat_name}\n                onChange={(e) => setFormData({...formData, cat_name: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg\"\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Category Type\"\n                value={formData.cat_type}\n                onChange={(e) => setFormData({...formData, cat_type: e.target.value})}\n                className=\"w-full px-3 py-2 border rounded-lg\"\n                required\n              />\n              <div className=\"flex space-x-2\">\n                <button type=\"submit\" className=\"flex-1 bg-gradient-to-r from-blue-500 to-indigo-600 text-white py-2 rounded-lg hover:from-blue-600 hover:to-indigo-700 transition-all duration-200 shadow-md font-medium\">\n                  {editingCategory ? 'Update' : 'Create'}\n                </button>\n                <button type=\"button\" onClick={() => setShowModal(false)} className=\"flex-1 bg-gradient-to-r from-gray-500 to-gray-600 text-white py-2 rounded-lg hover:from-gray-600 hover:to-gray-700 transition-all duration-200 shadow-md font-medium\">\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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"}