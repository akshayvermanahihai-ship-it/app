{"version":3,"sources":["turbopack:///[project]/src/app/console/patient/[cro]/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Clock, User, Calendar, Phone, ArrowLeft } from 'lucide-react';\nimport { useToastContext } from '@/context/ToastContext';\nimport { useRouter } from 'next/navigation';\n\ninterface PatientData {\n  patient: {\n    cro: string;\n    patient_name: string;\n    pre: string;\n    age: number;\n    contact_number: string;\n    allot_date: string;\n    category: string;\n    doctor_name: string;\n    date: string;\n    time_slot?: string;\n  };\n  scans: Array<{\n    scan_id: number;\n    s_id?: number;\n    s_name: string;\n    status: string;\n  }>;\n  console: {\n    stop_time: string;\n  } | null;\n}\n\nexport default function ConsolePatient({ params }: { params: Promise<{ cro: string }> }) {\n  const toast = useToastContext();\n  const router = useRouter();\n  const [patientData, setPatientData] = useState<PatientData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [startTime, setStartTime] = useState('');\n  const [stopTime, setStopTime] = useState('');\n  const [currentTime, setCurrentTime] = useState(\n    new Date().toLocaleTimeString('en-IN', { timeZone: 'Asia/Calcutta' })\n  );\n  const [cro, setCro] = useState('');\n  const [formData, setFormData] = useState({\n    examination_id: '',\n    number_scan: '',\n    number_film: '',\n    number_contrast: '',\n    technician_name: '',\n    nursing_name: '',\n    issue_cd: 'NO',\n    remark: '',\n    console_date: new Date().toLocaleDateString('en-CA'),\n    console_time: new Date().toLocaleTimeString('en-IN', { timeZone: 'Asia/Calcutta', hour12: false })\n  });\n\n  useEffect(() => {\n    params.then(p => setCro(decodeURIComponent(p.cro)));\n  }, [params]);\n\n  useEffect(() => {\n    if (cro) {\n      fetchPatientData();\n    }\n    const timer = setInterval(() => {\n      setCurrentTime(new Date().toLocaleTimeString('en-IN', { timeZone: 'Asia/Calcutta' }));\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [cro]);\n\n  const fetchPatientData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/console/patient/${encodeURIComponent(cro)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPatientData(data.data);\n        \n        // Bind console data to form if it exists\n        if (data.data.console) {\n          const console = data.data.console;\n          setFormData({\n            examination_id: console.examination_id || '',\n            number_scan: console.number_scan || '',\n            number_film: console.number_films || '',\n            number_contrast: console.number_contrast || '',\n            technician_name: console.technician_name || '',\n            nursing_name: console.nursing_name || '',\n            issue_cd: console.issue_cd || 'NO',\n            remark: console.remark || '',\n            console_date: new Date().toLocaleDateString('en-CA'),\n            console_time: new Date().toLocaleTimeString('en-IN', { timeZone: 'Asia/Calcutta', hour12: false })\n          });\n          setStartTime(console.start_time || '');\n          setStopTime(console.stop_time || '');\n        }\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('Console patient API error:', errorData);\n        toast.error(`API Error: ${errorData.error || 'Failed to fetch patient data'}. Details: ${errorData.details || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error fetching patient data:', error);\n      toast.error('Error loading patient data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleScanStatusChange = async (scanId: number, status: string) => {\n    try {\n      const response = await fetch('/api/console/update-scan-status', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          scan_id: scanId,\n          patient_id: cro,\n          status: status\n        })\n      });\n\n      if (response.ok) {\n        fetchPatientData(); // Refresh data\n        toast.success('Scan status updated');\n      } else {\n        toast.error('Failed to update scan status');\n      }\n    } catch (error) {\n      console.error('Error updating scan status:', error);\n      toast.error('Error updating scan status');\n    }\n  };\n\n  const handleStartTimer = () => {\n    setStartTime(currentTime);\n  };\n\n  const handleStopTimer = () => {\n    setStopTime(currentTime);\n  };\n\n  const handleSubmit = async (action: string) => {\n    try {\n      // Validate required fields\n      if (!formData.examination_id) {\n        toast.error('Please enter Examination ID');\n        return;\n      }\n\n\n\n      // Map action to status\n      let status = action;\n      if (action === 'Complete') status = 'Complete';\n      \n      const response = await fetch('https://varahasdc.co.in/api/console/save-console', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          cro,\n          start_time: startTime,\n          stop_time: stopTime,\n          status,\n          ...formData\n        })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        \n        if (action === 'Complete') {\n          toast.success('Console completed successfully!');\n          router.push('/console');\n        } else if (action === 'Pending') {\n          toast.success('Console marked as pending');\n          router.push('/console');\n        }\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        toast.error(`Failed to save console data: ${errorData.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error saving console data:', error);\n      toast.error('Error saving console data');\n    }\n  };\n\n  const generateFinalReceipt = () => {\n    if (!patientData) return;\n    \n    const receiptContent = `\n      <html>\n        <head>\n          <title>Console Final Receipt - ${cro}</title>\n          <style>\n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .header { text-align: center; margin-bottom: 20px; border-bottom: 2px solid #000; padding-bottom: 10px; }\n            .patient-info { margin-bottom: 15px; }\n            .console-details { margin: 15px 0; }\n            .scan-table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n            .scan-table th, .scan-table td { border: 1px solid #000; padding: 8px; text-align: left; }\n            .footer { text-align: center; margin-top: 20px; font-size: 12px; }\n            @media print { body { margin: 0; } }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h2>VARAHA SDC</h2>\n            <h3>Console Completion Receipt</h3>\n            <p>Date: ${new Date().toLocaleDateString('en-GB')}</p>\n          </div>\n          \n          <div class=\"patient-info\">\n            <h4>Patient Information:</h4>\n            <p><strong>CRO:</strong> ${cro}</p>\n            <p><strong>Patient Name:</strong> ${patientData.patient.pre} ${patientData.patient.patient_name}</p>\n            <p><strong>Age:</strong> ${patientData.patient.age}</p>\n            <p><strong>Doctor:</strong> ${patientData.patient.doctor_name}</p>\n            <p><strong>Category:</strong> ${patientData.patient.category}</p>\n            <p><strong>Contact:</strong> ${patientData.patient.contact_number}</p>\n          </div>\n          \n          <div class=\"console-details\">\n            <h4>Console Details:</h4>\n            <p><strong>Examination ID:</strong> ${formData.examination_id}</p>\n            <p><strong>Start Time:</strong> ${startTime}</p>\n            <p><strong>Stop Time:</strong> ${stopTime}</p>\n            <p><strong>Technician:</strong> ${formData.technician_name}</p>\n            <p><strong>Nursing:</strong> ${formData.nursing_name}</p>\n            <p><strong>Number of Scans:</strong> ${formData.number_scan}</p>\n            <p><strong>Number of Films:</strong> ${formData.number_film}</p>\n            <p><strong>Number of Contrast:</strong> ${formData.number_contrast}</p>\n            <p><strong>Issue CD/DVD:</strong> ${formData.issue_cd}</p>\n            ${formData.remark ? `<p><strong>Remark:</strong> ${formData.remark}</p>` : ''}\n          </div>\n          \n          <table class=\"scan-table\">\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Scan Name</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${patientData.scans.map((scan, index) => `\n                <tr>\n                  <td>${index + 1}</td>\n                  <td>${scan.s_name}</td>\n                  <td>${scan.status}</td>\n                </tr>\n              `).join('')}\n            </tbody>\n          </table>\n          \n          <div class=\"footer\">\n            <p>Console completed successfully</p>\n            <p>Thank you for choosing VARAHA SDC</p>\n          </div>\n        </body>\n      </html>\n    `;\n    \n    // Open print window\n    const printWindow = window.open('', '_blank');\n    if (printWindow) {\n      printWindow.document.write(receiptContent);\n      printWindow.document.close();\n      printWindow.focus();\n      setTimeout(() => {\n        printWindow.print();\n        printWindow.close();\n      }, 500);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-sky-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading patient data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!patientData) {\n    return (\n      <div className=\"p-6 text-center\">\n        <p className=\"text-red-600\">Patient not found</p>\n        <button\n          onClick={() => router.push('/console')}\n          className=\"mt-4 px-4 py-2 bg-sky-600 text-white rounded-lg hover:bg-sky-700\"\n        >\n          Back to Queue\n        </button>\n      </div>\n    );\n  }\n\n  const allScansComplete = patientData.scans.every(scan => scan.status === 'complete');\n  const pendingScans = patientData.scans.filter(scan => scan.status === 'pending').length;\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-sky-500 to-sky-600 text-white p-6 rounded-xl shadow-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={() => router.push('/console')}\n              className=\"p-2 bg-sky-500 hover:bg-sky-400 rounded-lg transition-colors\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n            </button>\n            <div>\n              <h1 className=\"text-3xl font-bold mb-2\">Console - {cro}</h1>\n              <p className=\"text-sky-100\">Patient examination console</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Patient Details */}\n      <div className=\"bg-white rounded-xl shadow-lg border border-gray-100 p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Patient History</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Console Date Of Examination</label>\n            <input\n              type=\"text\"\n              value={new Date().toLocaleDateString('en-GB').replace(/\\//g, '-')}\n              readOnly\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Console Time</label>\n            <input\n              type=\"text\"\n              value={new Date().toLocaleTimeString('en-IN', { timeZone: 'Asia/Calcutta', hour12: false })}\n              readOnly\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">CRO Number</label>\n            <input\n              type=\"text\"\n              value={patientData.patient.cro}\n              readOnly\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Patient Name</label>\n            <input\n              type=\"text\"\n              value={`${patientData.patient.pre} ${patientData.patient.patient_name}`}\n              readOnly\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age</label>\n            <input\n              type=\"text\"\n              value={patientData.patient.age}\n              readOnly\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Doctor</label>\n            <input\n              type=\"text\"\n              value={patientData.patient.doctor_name}\n              readOnly\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\n            <input\n              type=\"text\"\n              value={patientData.patient.category}\n              readOnly\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contact</label>\n            <input\n              type=\"text\"\n              value={patientData.patient.contact_number}\n              readOnly\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Console Date and Time */}\n      \n\n      {/* Timer */}\n      <div className=\"bg-white rounded-xl shadow-lg border border-gray-100 p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Timer</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Start Time</label>\n            <button\n              onClick={handleStartTimer}\n              className=\"w-full px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-lg font-mono\"\n            >\n              {startTime || currentTime}\n            </button>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Stop Time</label>\n            <button\n              onClick={handleStopTimer}\n              className=\"w-full px-4 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-lg font-mono\"\n            >\n              {stopTime || currentTime}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* MRI Details */}\n      <div className=\"bg-white rounded-xl shadow-lg border border-gray-100 p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">MRI Details</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500\">S.No</th>\n                <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500\">MRI NAME</th>\n                <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500\">Action</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200\">\n              {patientData.scans.map((scan, index) => (\n                <tr key={scan.s_id || scan.scan_id || index}>\n                  <td className=\"px-4 py-4 text-sm text-black font-medium\">{index + 1}</td>\n                  <td className=\"px-4 py-4 text-sm font-medium text-black\">{scan.s_name}</td>\n                  <td className=\"px-4 py-4\">\n                    <div className=\"flex space-x-4\">\n                      <label className=\"flex items-center\">\n                        <input\n                          type=\"radio\"\n                          name={`scan_${scan.s_id || scan.scan_id || index}`}\n                          checked={scan.status === 'pending'}\n                          onChange={() => handleScanStatusChange(scan.scan_id, 'pending')}\n                          className=\"mr-2\"\n                        />\n                        <span className=\"text-sm text-gray-700\">Pending</span>\n                      </label>\n                      <label className=\"flex items-center\">\n                        <input\n                          type=\"radio\"\n                          name={`scan_${scan.s_id || scan.scan_id || index}`}\n                          checked={scan.status === 'complete'}\n                          onChange={() => handleScanStatusChange(scan.scan_id, 'complete')}\n                          className=\"mr-2\"\n                        />\n                        <span className=\"text-sm text-gray-700\">Complete</span>\n                      </label>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Console Form */}\n      <div className=\"bg-white rounded-xl shadow-lg border border-gray-100 p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Console Details</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Examination ID <span className=\"text-red-500\">*</span></label>\n            <input\n              type=\"number\"\n              value={formData.examination_id}\n              onChange={(e) => setFormData({...formData, examination_id: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent\"\n              required\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Number of Scans</label>\n            <input\n              type=\"number\"\n              value={formData.number_scan}\n              onChange={(e) => setFormData({...formData, number_scan: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Number of Films</label>\n            <input\n              type=\"number\"\n              value={formData.number_film}\n              onChange={(e) => setFormData({...formData, number_film: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Number of Contrast</label>\n            <input\n              type=\"number\"\n              value={formData.number_contrast}\n              onChange={(e) => setFormData({...formData, number_contrast: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Technician Name</label>\n            <input\n              type=\"text\"\n              value={formData.technician_name}\n              onChange={(e) => setFormData({...formData, technician_name: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nursing Name</label>\n            <input\n              type=\"text\"\n              value={formData.nursing_name}\n              onChange={(e) => setFormData({...formData, nursing_name: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Issue CD/DVD</label>\n            <select\n              value={formData.issue_cd}\n              onChange={(e) => setFormData({...formData, issue_cd: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent\"\n            >\n              <option value=\"NO\">NO</option>\n              <option value=\"YES\">YES</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Remark</label>\n            <textarea\n              value={formData.remark}\n              onChange={(e) => setFormData({...formData, remark: e.target.value})}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-center space-x-4\">\n        {allScansComplete ? (\n          <button\n            onClick={() => handleSubmit('Complete')}\n            className=\"px-8 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium shadow-lg\"\n          >\n            Complete\n          </button>\n        ) : (\n          <button\n            onClick={() => handleSubmit('Pending')}\n            className=\"px-8 py-3 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 transition-colors font-medium shadow-lg\"\n          >\n            Pending\n          </button>\n        )}\n        <button\n          onClick={() => {\n            if (window.confirm('You Click On Recall Button, Patient Data Is Not Save And Patient Is Sent On Reception Table')) {\n              toast.info('Patient recalled to reception');\n              router.push('/console');\n            }\n          }}\n          className=\"px-8 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium shadow-lg\"\n        >\n          Recall\n        </button>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}