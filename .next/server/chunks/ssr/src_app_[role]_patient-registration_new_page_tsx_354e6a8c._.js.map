{"version":3,"sources":["turbopack:///[project]/src/app/[role]/patient-registration/new/page.tsx","turbopack:///[project]/src/components/ui/PatientRegistrationForm.tsx"],"sourcesContent":["'use client';\n\nimport Layout from '@/components/layout/Layout';\nimport PatientRegistrationForm from '@/components/ui/PatientRegistrationForm';\nimport { Toast, useToast } from '@/components/ui/Toast';\nimport { useState, useEffect } from 'react';\nimport { Search, Plus, UserPlus, Calendar, Clock, FileText, Printer, Eye } from 'lucide-react';\nimport { useParams } from 'next/navigation';\n\nexport default function PatientRegistrationNew() {\n  const params = useParams();\n  const role = params.role as string;\n  const [patients, setPatients] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const { toast, showToast, hideToast } = useToast();\n  const itemsPerPage = 10;\n\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n\n  const fetchPatients = async () => {\n    try {\n      const response = await fetch('/api/patients');\n      const data = await response.json();\n      setPatients(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n      setPatients([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePatientSubmit = (patientData: any) => {\n    setPatients(prev => Array.isArray(prev) ? [patientData, ...prev] : [patientData]);\n    showToast('Patient registered successfully with receipt printed!', 'success');\n  };\n\n  const filteredPatients = patients.filter((patient: any) =>\n    patient.patient_name?.toLowerCase().includes(search.toLowerCase()) ||\n    patient.cro?.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const totalPages = Math.ceil(filteredPatients.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const paginatedPatients = filteredPatients.slice(startIndex, startIndex + itemsPerPage);\n\n  const todayStats = {\n    totalRegistered: patients.length,\n    todayRegistered: patients.filter((p: any) => {\n      const today = new Date().toISOString().split('T')[0];\n      return p.date === today;\n    }).length,\n    pendingScans: patients.filter((p: any) => p.scan_status === 'Pending').length,\n    completedScans: patients.filter((p: any) => p.scan_status === 'Complete').length\n  };\n\n  return (\n    <Layout>\n      <div className=\"space-y-6\">\n        <div className=\"bg-white rounded-xl shadow-lg p-6\">\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-2xl font-bold text-gray-900\">New Patient Registration - {role}</h1>\n            <div className=\"text-sm text-gray-600\">\n              <span className=\"font-medium\">Today:</span> {new Date().toLocaleDateString('en-GB')}\n            </div>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Registered</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{todayStats.totalRegistered}</p>\n              </div>\n              <div className=\"p-3 bg-sky-100 rounded-full\">\n                <UserPlus className=\"h-6 w-6 text-sky-500\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Today Registered</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{todayStats.todayRegistered}</p>\n              </div>\n              <div className=\"p-3 bg-green-100 rounded-full\">\n                <Calendar className=\"h-6 w-6 text-green-500\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Pending Scans</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{todayStats.pendingScans}</p>\n              </div>\n              <div className=\"p-3 bg-yellow-100 rounded-full\">\n                <Clock className=\"h-6 w-6 text-yellow-500\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Completed Scans</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{todayStats.completedScans}</p>\n              </div>\n              <div className=\"p-3 bg-blue-100 rounded-full\">\n                <FileText className=\"h-6 w-6 text-blue-500\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-xl p-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-sm text-gray-600\">Show</span>\n              <select className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm text-gray-700\">\n                <option>10</option>\n                <option>25</option>\n                <option>50</option>\n              </select>\n              <span className=\"text-sm text-gray-600\">entries</span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search:\"\n                  value={search}\n                  onChange={(e) => setSearch(e.target.value)}\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm text-gray-700 focus:ring-2 focus:ring-sky-500 focus:border-sky-500\"\n                />\n              </div>\n              <button\n                onClick={() => setIsFormOpen(true)}\n                className=\"px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors flex items-center space-x-2\"\n              >\n                <Plus className=\"h-4 w-4\" />\n                <span>Register New Patient</span>\n              </button>\n            </div>\n          </div>\n\n          {loading ? (\n            <div className=\"text-center py-12\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto\"></div>\n              <p className=\"mt-4 text-gray-600\">Loading patients...</p>\n            </div>\n          ) : (\n            <>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full border-collapse\">\n                  <thead>\n                    <tr className=\"bg-gray-50\">\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b\">S.No.</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b\">CRO</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b\">Patient Name</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b\">Age</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b\">Gender</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b\">Category</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b\">Contact</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b\">Status</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {paginatedPatients.map((patient: any, index) => (\n                      <tr key={patient.patient_id || `patient-${index}`} className=\"hover:bg-gray-50 transition-colors\">\n                        <td className=\"px-4 py-3 text-sm text-gray-700 border-b\">{startIndex + index + 1}</td>\n                        <td className=\"px-4 py-3 text-sm text-gray-700 border-b font-medium\">{patient.cro || 'N/A'}</td>\n                        <td className=\"px-4 py-3 text-sm text-gray-700 border-b font-medium\">{patient.patientName || patient.patient_name || 'N/A'}</td>\n                        <td className=\"px-4 py-3 text-sm text-gray-700 border-b\">{patient.age || 'N/A'}</td>\n                        <td className=\"px-4 py-3 text-sm text-gray-700 border-b\">{patient.gender || 'N/A'}</td>\n                        <td className=\"px-4 py-3 text-sm text-gray-700 border-b\">{patient.category || 'N/A'}</td>\n                        <td className=\"px-4 py-3 text-sm text-gray-700 border-b\">{patient.contactNumber || patient.contact_number || 'N/A'}</td>\n                        <td className=\"px-4 py-3 text-sm border-b\">\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                            patient.scan_status === 'Complete' \n                              ? 'bg-green-100 text-green-800' \n                              : patient.scan_status === 'Pending'\n                              ? 'bg-yellow-100 text-yellow-800'\n                              : 'bg-gray-100 text-gray-800'\n                          }`}>\n                            {patient.scan_status || 'Registered'}\n                          </span>\n                        </td>\n                        <td className=\"px-4 py-3 text-sm border-b\">\n                          <div className=\"flex space-x-2\">\n                            <button \n                              onClick={() => showToast('Patient details viewed', 'success')}\n                              className=\"p-1 text-blue-600 hover:bg-blue-50 rounded\"\n                              title=\"View Details\"\n                            >\n                              <Eye className=\"h-4 w-4\" />\n                            </button>\n                            <button \n                              onClick={() => showToast('Receipt reprinted successfully', 'success')}\n                              className=\"p-1 text-green-600 hover:bg-green-50 rounded\"\n                              title=\"Reprint Receipt\"\n                            >\n                              <Printer className=\"h-4 w-4\" />\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n\n              <div className=\"flex justify-between items-center mt-6\">\n                <p className=\"text-sm text-gray-600\">\n                  Showing {startIndex + 1}-{Math.min(startIndex + itemsPerPage, filteredPatients.length)} of {filteredPatients.length}\n                </p>\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                    disabled={currentPage === 1}\n                    className=\"px-3 py-1 border border-gray-300 rounded text-sm text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Previous\n                  </button>\n                  {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                    const page = i + 1;\n                    return (\n                      <button\n                        key={page}\n                        onClick={() => setCurrentPage(page)}\n                        className={`px-3 py-1 border rounded text-sm ${\n                          currentPage === page\n                            ? 'bg-sky-500 text-white border-sky-500'\n                            : 'border-gray-300 text-gray-700 hover:bg-gray-50'\n                        }`}\n                      >\n                        {page}\n                      </button>\n                    );\n                  })}\n                  {totalPages > 5 && <span className=\"px-2 text-gray-500\">...</span>}\n                  <button\n                    onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                    disabled={currentPage === totalPages}\n                    className=\"px-3 py-1 border border-gray-300 rounded text-sm text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Next\n                  </button>\n                </div>\n              </div>\n            </>\n          )}\n\n          {!loading && filteredPatients.length === 0 && (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500 text-lg\">No patients registered yet</p>\n              <p className=\"text-gray-400 text-sm mt-2\">Click \"Register New Patient\" to start patient registration</p>\n            </div>\n          )}\n        </div>\n\n        <PatientRegistrationForm\n          isOpen={isFormOpen}\n          onClose={() => setIsFormOpen(false)}\n          onSubmit={handlePatientSubmit}\n        />\n\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          isVisible={toast.isVisible}\n          onClose={hideToast}\n        />\n      </div>\n    </Layout>\n  );\n}","'use client';\n\nimport { useState, useEffect } from 'react';\nimport { X } from 'lucide-react';\nimport { FormInput } from './FormComponents';\nimport ReceiptPrint from './ReceiptPrint';\n\ninterface PatientRegistrationFormProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (data: any) => void;\n}\n\nexport default function PatientRegistrationForm({ isOpen, onClose, onSubmit }: PatientRegistrationFormProps) {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [showReceipt, setShowReceipt] = useState(false);\n  const [receiptData, setReceiptData] = useState<any>(null);\n  const [formData, setFormData] = useState({\n    // Patient Details\n    prefix: 'Mr.',\n    patientName: '',\n    age: '',\n    ageType: 'Year',\n    gender: 'Male',\n    category: 'GEN / Paid',\n    address: '',\n    city: '',\n    contactNumber: '',\n    \n    // Hospital & Doctor\n    hospitalId: '',\n    doctorId: '',\n    \n    // Scan Details\n    selectedScans: [] as number[],\n    appointmentDate: new Date().toISOString().split('T')[0],\n    timeSlot: '',\n    \n    // Payment\n    scanAmount: 0,\n    totalAmount: 0,\n    discount: 0,\n    receivedAmount: 0,\n    dueAmount: 0\n  });\n\n  const [hospitals] = useState([\n    { id: 1, name: 'M.D.M Hospital', short: 'MDM' },\n    { id: 2, name: 'S.N. Medical College', short: 'SNMC' },\n    { id: 3, name: 'AIIMS Jodhpur', short: 'AIIMS' }\n  ]);\n\n  const [doctors] = useState([\n    { id: 1, name: 'Dr. Rajesh Kumar', specialization: 'Radiology' },\n    { id: 2, name: 'Dr. Priya Sharma', specialization: 'Internal Medicine' },\n    { id: 3, name: 'Dr. Amit Singh', specialization: 'Orthopedics' }\n  ]);\n\n  const [scanTypes] = useState([\n    { id: 1, name: 'CT Scan Head', charges: 2500, estimatedTime: 30 },\n    { id: 2, name: 'CT Scan Chest', charges: 3000, estimatedTime: 45 },\n    { id: 3, name: 'CT Scan Abdomen', charges: 3500, estimatedTime: 60 },\n    { id: 4, name: 'CT Angiography', charges: 5000, estimatedTime: 90 },\n    { id: 5, name: 'CT Whole Body', charges: 8000, estimatedTime: 120 }\n  ]);\n\n  const [timeSlots] = useState([\n    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\n    '12:00 PM', '12:30 PM', '02:00 PM', '02:30 PM', '03:00 PM', '03:30 PM',\n    '04:00 PM', '04:30 PM', '05:00 PM'\n  ]);\n\n  const freeCategories = ['IPD FREE', 'OPD FREE', 'RTA', 'RGHS', 'Chiranjeevi', 'Destitute', 'PRISONER', 'Sn. CITIZEN', 'Aayushmaan'];\n\n  useEffect(() => {\n    calculateAmounts();\n  }, [formData.selectedScans, formData.discount, formData.receivedAmount, formData.category, scanTypes, freeCategories]);\n\n  const calculateAmounts = () => {\n    const totalScanAmount = formData.selectedScans.reduce((sum, scanId) => {\n      const scan = scanTypes.find(s => s.id === scanId);\n      return sum + (scan ? scan.charges : 0);\n    }, 0);\n\n    const isFreeCategory = freeCategories.includes(formData.category);\n    const finalAmount = isFreeCategory ? 0 : totalScanAmount;\n    const dueAmount = finalAmount - formData.discount - formData.receivedAmount;\n\n    setFormData(prev => ({\n      ...prev,\n      scanAmount: totalScanAmount,\n      totalAmount: finalAmount,\n      dueAmount: Math.max(0, dueAmount)\n    }));\n  };\n\n  const handleScanSelection = (scanId: number) => {\n    setFormData(prev => ({\n      ...prev,\n      selectedScans: prev.selectedScans.includes(scanId)\n        ? prev.selectedScans.filter(id => id !== scanId)\n        : [...prev.selectedScans, scanId]\n    }));\n  };\n\n  const generateCRO = () => {\n    const today = new Date();\n    const dateStr = today.toLocaleDateString('en-GB').replace(/\\//g, '-');\n    const randomNum = Math.floor(Math.random() * 1000) + 1;\n    return `VDC/${dateStr}/${randomNum}`;\n  };\n\n  const handleSubmit = (printReceipt = false) => {\n    const cro = generateCRO();\n    const selectedScanNames = formData.selectedScans.map(scanId => {\n      const scan = scanTypes.find(s => s.id === scanId);\n      return scan ? scan.name : '';\n    }).join(', ');\n\n    const hospitalName = hospitals.find(h => h.id === parseInt(formData.hospitalId))?.name || '';\n    const doctorName = doctors.find(d => d.id === parseInt(formData.doctorId))?.name || '';\n\n    const submissionData = {\n      ...formData,\n      cro,\n      hospitalName,\n      doctorName,\n      investigations: selectedScanNames,\n      date: new Date().toLocaleDateString('en-GB')\n    };\n\n    if (printReceipt) {\n      setReceiptData({\n        cro,\n        name: `${formData.prefix} ${formData.patientName}`,\n        age: `${formData.age} ${formData.ageType}`,\n        gender: formData.gender,\n        address: `${formData.address}, ${formData.city}`,\n        phone: formData.contactNumber,\n        doctor: doctorName,\n        category: formData.category,\n        investigations: selectedScanNames,\n        appointmentDate: formData.appointmentDate,\n        appointmentTime: formData.timeSlot,\n        scanAmount: formData.scanAmount,\n        totalAmount: formData.totalAmount,\n        receivedAmount: formData.receivedAmount,\n        discount: formData.discount > 0 ? formData.discount : null,\n        date: new Date().toLocaleDateString('en-GB')\n      });\n      setShowReceipt(true);\n    }\n\n    onSubmit(submissionData);\n    if (!printReceipt) {\n      onClose();\n    }\n  };\n\n  const nextStep = () => {\n    if (currentStep < 3) setCurrentStep(currentStep + 1);\n  };\n\n  const prevStep = () => {\n    if (currentStep > 1) setCurrentStep(currentStep - 1);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n        <div className=\"bg-white rounded-xl w-full max-w-6xl max-h-[90vh] overflow-y-auto\">\n          <div className=\"flex justify-between items-center p-6 border-b\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Patient Registration</h2>\n            <button\n              onClick={onClose}\n              className=\"p-2 text-gray-500 hover:text-gray-700 transition-colors\"\n            >\n              <X className=\"h-6 w-6\" />\n            </button>\n          </div>\n\n          {/* Step Navigation */}\n          <div className=\"flex justify-center p-4 border-b\">\n            <div className=\"flex space-x-8\">\n              {[1, 2, 3].map((step) => (\n                <div\n                  key={step}\n                  className={`flex items-center space-x-2 ${\n                    currentStep >= step ? 'text-sky-500' : 'text-gray-400'\n                  }`}\n                >\n                  <div\n                    className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${\n                      currentStep >= step ? 'bg-sky-500 text-white' : 'bg-gray-200 text-gray-600'\n                    }`}\n                  >\n                    {step}\n                  </div>\n                  <span className=\"font-medium\">\n                    {step === 1 && 'Patient Details'}\n                    {step === 2 && 'Scan Selection'}\n                    {step === 3 && 'Payment Details'}\n                  </span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"p-6\">\n            {/* Step 1: Patient Details */}\n            {currentStep === 1 && (\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Hospital</label>\n                    <select\n                      value={formData.hospitalId}\n                      onChange={(e) => setFormData({...formData, hospitalId: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-sky-500 focus:border-sky-500\"\n                      required\n                    >\n                      <option value=\"\">Select Hospital</option>\n                      {hospitals.map(hospital => (\n                        <option key={hospital.id} value={hospital.id}>{hospital.name}</option>\n                      ))}\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Doctor</label>\n                    <select\n                      value={formData.doctorId}\n                      onChange={(e) => setFormData({...formData, doctorId: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-sky-500 focus:border-sky-500\"\n                      required\n                    >\n                      <option value=\"\">Select Doctor</option>\n                      {doctors.map(doctor => (\n                        <option key={doctor.id} value={doctor.id}>{doctor.name}</option>\n                      ))}\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Date</label>\n                    <input\n                      type=\"date\"\n                      value={formData.appointmentDate}\n                      onChange={(e) => setFormData({...formData, appointmentDate: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-sky-500 focus:border-sky-500\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Prefix</label>\n                    <select\n                      value={formData.prefix}\n                      onChange={(e) => setFormData({...formData, prefix: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-sky-500 focus:border-sky-500\"\n                    >\n                      <option value=\"Mr.\">Mr.</option>\n                      <option value=\"Mrs.\">Mrs.</option>\n                      <option value=\"Master\">Master</option>\n                      <option value=\"Miss\">Miss</option>\n                      <option value=\"Baby\">Baby</option>\n                    </select>\n                  </div>\n                  <div className=\"md:col-span-3\">\n                    <FormInput\n                      label=\"Patient Name\"\n                      type=\"text\"\n                      value={formData.patientName}\n                      onChange={(e) => setFormData({...formData, patientName: e.target.value})}\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                  <div>\n                    <FormInput\n                      label=\"Age\"\n                      type=\"number\"\n                      value={formData.age}\n                      onChange={(e) => setFormData({...formData, age: e.target.value})}\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Age Type</label>\n                    <select\n                      value={formData.ageType}\n                      onChange={(e) => setFormData({...formData, ageType: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-sky-500 focus:border-sky-500\"\n                    >\n                      <option value=\"Year\">Year</option>\n                      <option value=\"Month\">Month</option>\n                      <option value=\"Days\">Days</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Gender</label>\n                    <select\n                      value={formData.gender}\n                      onChange={(e) => setFormData({...formData, gender: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-sky-500 focus:border-sky-500\"\n                    >\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Category</label>\n                    <select\n                      value={formData.category}\n                      onChange={(e) => setFormData({...formData, category: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-sky-500 focus:border-sky-500\"\n                    >\n                      <option value=\"GEN / Paid\">GEN / Paid</option>\n                      <option value=\"IPD FREE\">IPD Free</option>\n                      <option value=\"OPD FREE\">OPD Free</option>\n                      <option value=\"RTA\">RTA</option>\n                      <option value=\"RGHS\">RGHS</option>\n                      <option value=\"Chiranjeevi\">Chiranjeevi</option>\n                      <option value=\"Destitute\">Destitute</option>\n                      <option value=\"PRISONER\">PRISONER</option>\n                      <option value=\"Sn. CITIZEN\">Sn. CITIZEN</option>\n                      <option value=\"Aayushmaan\">Aayushmaan</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"md:col-span-2\">\n                    <FormInput\n                      label=\"Address\"\n                      type=\"text\"\n                      value={formData.address}\n                      onChange={(e) => setFormData({...formData, address: e.target.value})}\n                      required\n                    />\n                  </div>\n                  <div>\n                    <FormInput\n                      label=\"City\"\n                      type=\"text\"\n                      value={formData.city}\n                      onChange={(e) => setFormData({...formData, city: e.target.value})}\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <FormInput\n                    label=\"Contact Number\"\n                    type=\"tel\"\n                    value={formData.contactNumber}\n                    onChange={(e) => setFormData({...formData, contactNumber: e.target.value})}\n                    required\n                  />\n                </div>\n              </div>\n            )}\n\n            {/* Step 2: Scan Selection */}\n            {currentStep === 2 && (\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Appointment Time</label>\n                    <select\n                      value={formData.timeSlot}\n                      onChange={(e) => setFormData({...formData, timeSlot: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-sky-500 focus:border-sky-500\"\n                      required\n                    >\n                      <option value=\"\">Select Time Slot</option>\n                      {timeSlots.map(slot => (\n                        <option key={slot} value={slot}>{slot}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Select Scan Types</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {scanTypes.map(scan => (\n                      <div\n                        key={scan.id}\n                        className={`border rounded-lg p-4 cursor-pointer transition-colors ${\n                          formData.selectedScans.includes(scan.id)\n                            ? 'border-sky-500 bg-sky-50'\n                            : 'border-gray-300 hover:border-sky-300'\n                        }`}\n                        onClick={() => handleScanSelection(scan.id)}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <h4 className=\"font-medium text-gray-900\">{scan.name}</h4>\n                            <p className=\"text-sm text-gray-600\">₹{scan.charges} • {scan.estimatedTime} min</p>\n                          </div>\n                          <div className={`w-5 h-5 rounded border-2 flex items-center justify-center ${\n                            formData.selectedScans.includes(scan.id)\n                              ? 'border-sky-500 bg-sky-500'\n                              : 'border-gray-300'\n                          }`}>\n                            {formData.selectedScans.includes(scan.id) && (\n                              <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                              </svg>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {formData.selectedScans.length > 0 && (\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Selected Scans Summary</h4>\n                    <div className=\"space-y-2\">\n                      {formData.selectedScans.map(scanId => {\n                        const scan = scanTypes.find(s => s.id === scanId);\n                        return scan ? (\n                          <div key={scanId} className=\"flex justify-between text-sm\">\n                            <span>{scan.name}</span>\n                            <span>₹{scan.charges}</span>\n                          </div>\n                        ) : null;\n                      })}\n                      <div className=\"border-t pt-2 flex justify-between font-medium\">\n                        <span>Total Amount</span>\n                        <span>₹{formData.scanAmount}</span>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Step 3: Payment Details */}\n            {currentStep === 3 && (\n              <div className=\"space-y-6\">\n                <div className=\"bg-sky-50 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Payment Summary</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Scan Amount:</span>\n                        <span className=\"font-medium\">₹{formData.scanAmount}</span>\n                      </div>\n                      <div>\n                        <FormInput\n                          label=\"Discount Amount\"\n                          type=\"number\"\n                          value={formData.discount}\n                          onChange={(e) => setFormData({...formData, discount: parseFloat(e.target.value) || 0})}\n                        />\n                      </div>\n                      <div>\n                        <FormInput\n                          label=\"Received Amount\"\n                          type=\"number\"\n                          value={formData.receivedAmount}\n                          onChange={(e) => setFormData({...formData, receivedAmount: parseFloat(e.target.value) || 0})}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex justify-between text-lg font-semibold\">\n                        <span>Total Amount:</span>\n                        <span>₹{formData.totalAmount}</span>\n                      </div>\n                      <div className=\"flex justify-between text-lg font-semibold text-red-600\">\n                        <span>Due Amount:</span>\n                        <span>₹{formData.dueAmount}</span>\n                      </div>\n                      {freeCategories.includes(formData.category) && (\n                        <div className=\"bg-green-100 border border-green-400 text-green-700 px-3 py-2 rounded\">\n                          <p className=\"text-sm\">This category is eligible for free treatment. No payment required.</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Patient Summary</h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <p><span className=\"font-medium\">Name:</span> {formData.prefix} {formData.patientName}</p>\n                      <p><span className=\"font-medium\">Age:</span> {formData.age} {formData.ageType}</p>\n                      <p><span className=\"font-medium\">Gender:</span> {formData.gender}</p>\n                      <p><span className=\"font-medium\">Category:</span> {formData.category}</p>\n                    </div>\n                    <div>\n                      <p><span className=\"font-medium\">Contact:</span> {formData.contactNumber}</p>\n                      <p><span className=\"font-medium\">Address:</span> {formData.address}, {formData.city}</p>\n                      <p><span className=\"font-medium\">Appointment:</span> {formData.appointmentDate} at {formData.timeSlot}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Navigation Buttons */}\n            <div className=\"flex justify-between mt-8 pt-6 border-t\">\n              <div>\n                {currentStep > 1 && (\n                  <button\n                    onClick={prevStep}\n                    className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n                  >\n                    Previous\n                  </button>\n                )}\n              </div>\n              <div className=\"flex space-x-3\">\n                {currentStep < 3 ? (\n                  <button\n                    onClick={nextStep}\n                    className=\"px-6 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors\"\n                  >\n                    Next\n                  </button>\n                ) : (\n                  <>\n                    <button\n                      onClick={() => handleSubmit(false)}\n                      className=\"px-6 py-2 border border-sky-500 text-sky-500 rounded-lg hover:bg-sky-50 transition-colors\"\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={() => handleSubmit(true)}\n                      className=\"px-6 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors\"\n                      disabled={formData.dueAmount > 0 && !freeCategories.includes(formData.category)}\n                    >\n                      Save & Print\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showReceipt && (\n        <ReceiptPrint\n          isOpen={showReceipt}\n          onClose={() => {\n            setShowReceipt(false);\n            onClose();\n          }}\n          patientData={receiptData}\n        />\n      )}\n    </>\n  );\n}"],"names":[],"mappings":"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"}