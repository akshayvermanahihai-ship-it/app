{"version":3,"sources":["turbopack:///[project]/src/app/reception/patient-registration/new/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { User, Calendar, FileText, Plus, ArrowLeft, ArrowRight, Check, ChevronDown } from 'lucide-react';\nimport { useToastContext } from '@/context/ToastContext';\nimport LastEnrolledPatient from '@/components/LastEnrolledPatient';\n\ninterface FormData {\n  // Step 1 - Enrollment Details\n  date: string;\n  hospital_name: string;\n  doctor_name: string;\n  pre: string;\n  firstname: string;\n  age: string;\n  age_type: string;\n  gender: string;\n  petient_type: string;\n  p_uni_submit: string;\n  p_uni_id_name: string;\n  address: string;\n  city: string;\n  contact_number: string;\n  \n  // Step 2 - Scan Options\n  type_of_scan: string[];\n  appoint_date: string;\n  time: string;\n  time_in: string;\n  amount: string;\n  est_time: string;\n  \n  // Step 3 - Payment Details\n  total_amount: string;\n  rec_amount: string;\n  dis_amount: string;\n  due_amount: string;\n}\n\ninterface Hospital {\n  h_id: number;\n  h_name: string;\n}\n\ninterface Doctor {\n  d_id: number;\n  dname: string;\n}\n\ninterface Scan {\n  s_id: number;\n  s_name: string;\n  charges: number;\n  estimate_time: string;\n}\n\nexport default function NewPatientRegistration() {\n  const toast = useToastContext();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editPatientId, setEditPatientId] = useState<string | null>(null);\n  const [hospitals, setHospitals] = useState<Hospital[]>([]);\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [scans, setScans] = useState<Scan[]>([]);\n  const [selectedScans, setSelectedScans] = useState<Scan[]>([]);\n  const [showUniId, setShowUniId] = useState(false);\n  const [scanSearchTerm, setScanSearchTerm] = useState('');\n  const [hospitalSearchTerm, setHospitalSearchTerm] = useState('');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [showHospitalDropdown, setShowHospitalDropdown] = useState(false);\n  const [showDoctorDropdown, setShowDoctorDropdown] = useState(false);\n  const [showTimeInDropdown, setShowTimeInDropdown] = useState(false);\n  const [showTimeOutDropdown, setShowTimeOutDropdown] = useState(false);\n  const [timeInSearchTerm, setTimeInSearchTerm] = useState('');\n  const [timeOutSearchTerm, setTimeOutSearchTerm] = useState('');\n  const [errors, setErrors] = useState<{[key: string]: string}>({});\n  const [lastPatient, setLastPatient] = useState<{cro: string, patient_name: string} | null>(null);\n  const [timeSlots, setTimeSlots] = useState<{time_id: number, time_slot: string}[]>([]);\n  const [isSaved, setIsSaved] = useState(false);\n  const [savedPatientData, setSavedPatientData] = useState<any>(null);\n  \n  const [formData, setFormData] = useState<FormData>({\n    date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n    hospital_name: '',\n    doctor_name: '',\n    pre: 'Mr.',\n    firstname: '',\n    age: '',\n    age_type: 'Year',\n    gender: 'Male',\n    petient_type: 'GEN / Paid',\n    p_uni_submit: 'N',\n    p_uni_id_name: '',\n    address: '',\n    city: '',\n    contact_number: '',\n    type_of_scan: [],\n    appoint_date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n    time: '',\n    time_in: '',\n    amount: '0',\n    est_time: '0',\n    total_amount: '0',\n    rec_amount: '0',\n    dis_amount: '0',\n    due_amount: '0'\n  });\n\n  useEffect(() => {\n    fetchHospitals();\n    fetchDoctors();\n    fetchScans();\n    fetchTimeSlots();\n    fetchLastPatient();\n    \n    // Check for edit mode\n    const urlParams = new URLSearchParams(window.location.search);\n    const editId = urlParams.get('edit');\n    if (editId) {\n      setIsEditMode(true);\n      setEditPatientId(editId);\n      fetchPatientData(editId);\n    }\n\n    // Close dropdowns when clicking outside\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n      if (!target.closest('.relative')) {\n        setShowHospitalDropdown(false);\n        setShowDoctorDropdown(false);\n        setShowTimeInDropdown(false);\n        setShowTimeOutDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Auto-set current time when appointment date is today\n  useEffect(() => {\n    if (!isEditMode && !formData.time) {\n      const today = new Date();\n      const appointmentDate = new Date(formData.appoint_date);\n      const isToday = appointmentDate.toDateString() === today.toDateString();\n      \n      if (isToday) {\n        const currentTime = getCurrentTime();\n        const currentTimeAMPM = formatTimeToAMPM(currentTime);\n        setFormData(prev => ({ ...prev, time: currentTime }));\n        setTimeInSearchTerm(currentTimeAMPM);\n      }\n    }\n  }, [formData.appoint_date]);\n\n  // Auto-calculate time out when time in or estimated time changes\n  useEffect(() => {\n    if (formData.time && formData.est_time && parseInt(formData.est_time) > 0) {\n      calculateTimeOut(formData.time, parseInt(formData.est_time));\n    }\n  }, [formData.time, formData.est_time]);\n\n  // Auto-calculate time out when estimated time changes\n  useEffect(() => {\n    if (formData.time && formData.est_time && parseInt(formData.est_time) > 0) {\n      const timeSlot = timeSlots.find(slot => slot.time_id.toString() === formData.time);\n      if (timeSlot) {\n        const timeMatch = timeSlot.time_slot.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n        if (timeMatch) {\n          let hour = parseInt(timeMatch[1]);\n          const minute = parseInt(timeMatch[2]);\n          const period = timeMatch[3].toUpperCase();\n          \n          if (period === 'PM' && hour !== 12) {\n            hour += 12;\n          } else if (period === 'AM' && hour === 12) {\n            hour = 0;\n          }\n          \n          const time24 = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n          calculateTimeOut(time24, parseInt(formData.est_time));\n        }\n      }\n    }\n  }, [formData.est_time, formData.time, timeSlots]);\n\n  const fetchHospitals = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/hospitals');\n      if (response.ok) {\n        const data = await response.json();\n        setHospitals(Array.isArray(data) ? data : []);\n      }\n    } catch (error) {\n      console.error('Error fetching hospitals:', error);\n    }\n  };\n\n  const fetchDoctors = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/doctors');\n      if (response.ok) {\n        const data = await response.json();\n        setDoctors(Array.isArray(data) ? data : []);\n      }\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n\n  const fetchScans = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/scans');\n      if (response.ok) {\n        const data = await response.json();\n        setScans(Array.isArray(data) ? data : []);\n      }\n    } catch (error) {\n      console.error('Error fetching scans:', error);\n    }\n  };\n\n  const fetchTimeSlots = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/time-slots');\n      if (response.ok) {\n        const data = await response.json();\n        const slots = Array.isArray(data) ? data : [];\n        console.log('Fetched time slots:', slots);\n        setTimeSlots(slots);\n      } else {\n        console.error('Failed to fetch time slots, using fallback');\n        generateFallbackTimeSlots();\n      }\n    } catch (error) {\n      console.error('Error fetching time slots:', error);\n      generateFallbackTimeSlots();\n    }\n  };\n\n  // Generate fallback time slots if API fails - every 15 minutes for 24 hours\n  const generateFallbackTimeSlots = () => {\n    const fallbackSlots = [];\n    for (let hour = 0; hour < 24; hour++) {\n      for (let minute = 0; minute < 60; minute += 15) { // Every 15 minutes instead of every minute\n        const time24 = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        const timeAMPM = formatTimeToAMPM(time24);\n        fallbackSlots.push({\n          time_id: fallbackSlots.length + 1,\n          time_slot: timeAMPM\n        });\n      }\n    }\n    console.log('Using fallback time slots:', fallbackSlots.length);\n    setTimeSlots(fallbackSlots);\n  };\n\n  const fetchLastPatient = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/patients/last-enrolled');\n      if (response.ok) {\n        const data = await response.json();\n        setLastPatient(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching last patient:', error);\n    }\n  };\n\n  const [patientData, setPatientData] = useState<any>(null);\n\n  const fetchPatientData = async (patientId: string) => {\n    try {\n      const response = await fetch(`https://varahasdc.co.in/api/reception/patients/${patientId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPatientData(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching patient data:', error);\n    }\n  };\n\n  // Process patient data after scans are loaded\n  useEffect(() => {\n    if (patientData && scans.length > 0) {\n      const patient = patientData;\n      \n      // Auto-select scans and calculate totals\n      const scanIds = patient.scan_type ? patient.scan_type.split(',') : [];\n      const selectedScansData = scans.filter(scan => scanIds.includes(scan.s_id.toString()));\n      setSelectedScans(selectedScansData);\n      \n      // Calculate estimated time from selected scans\n      const totalEstTime = selectedScansData.reduce((sum, scan) => {\n        const timeMatch = scan.estimate_time?.match(/(\\d+)/);\n        return sum + (timeMatch ? parseInt(timeMatch[1]) : 0);\n      }, 0);\n      \n      // Populate form with patient data\n      setFormData({\n        date: patient.date || new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n        hospital_name: patient.hospital_id?.toString() || '',\n        doctor_name: patient.doctor_name?.toString() || '',\n        pre: patient.pre || 'Mr.',\n        firstname: patient.patient_name || '',\n        age: patient.age?.replace(/[^0-9]/g, '') || '',\n        age_type: patient.age?.includes('Year') ? 'Year' : patient.age?.includes('Month') ? 'Month' : 'Days',\n        gender: patient.gender || 'Male',\n        petient_type: patient.petient_type || 'GEN / Paid',\n        p_uni_submit: patient.p_uni_submit || 'N',\n        p_uni_id_name: patient.p_uni_id_name || '',\n        address: patient.address || '',\n        city: patient.city || '',\n        contact_number: patient.contact_number || '',\n        type_of_scan: scanIds,\n        appoint_date: patient.appoint_date ? (patient.appoint_date.includes('-') ? patient.appoint_date.split('-').reverse().join('-') : patient.appoint_date) : new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n        time: patient.time || '',\n        time_in: patient.time_in || '',\n        amount: patient.amount?.toString() || '0',\n        est_time: totalEstTime.toString(),\n        total_amount: patient.total_amount?.toString() || '0',\n        rec_amount: patient.rec_amount?.toString() || '0',\n        dis_amount: patient.dis_amount?.toString() || '0',\n        due_amount: patient.due_amount?.toString() || '0'\n      });\n      \n      // Set search terms for dropdowns\n      if (patient.h_name) setHospitalSearchTerm(patient.h_name);\n      if (patient.dname) setDoctorSearchTerm(patient.dname);\n      \n      // Set time search terms if available\n      setTimeout(() => {\n        // Handle time binding - check if it's a time slot ID or direct time value\n        if (patient.time && timeSlots.length > 0) {\n          const timeSlot = timeSlots.find(slot => slot.time_id.toString() === patient.time.toString());\n          if (timeSlot) {\n            setTimeInSearchTerm(timeSlot.time_slot);\n            setFormData(prev => ({ ...prev, time: timeSlot.time_slot }));\n          } else if (typeof patient.time === 'string' && patient.time.includes(':')) {\n            setTimeInSearchTerm(formatTimeToAMPM(patient.time));\n          }\n        }\n        \n        if (patient.time_in && timeSlots.length > 0) {\n          const timeSlot = timeSlots.find(slot => slot.time_id.toString() === patient.time_in.toString());\n          if (timeSlot) {\n            setTimeOutSearchTerm(timeSlot.time_slot);\n            setFormData(prev => ({ ...prev, time_in: timeSlot.time_slot }));\n          } else if (typeof patient.time_in === 'string' && patient.time_in.includes(':')) {\n            setTimeOutSearchTerm(formatTimeToAMPM(patient.time_in));\n          }\n        }\n        \n        // Auto-calculate time out if time in exists and estimated time is available\n        if (patient.time && totalEstTime > 0 && patient.time.includes(':')) {\n          calculateTimeOut(patient.time, totalEstTime);\n        }\n      }, 500);\n    }\n  }, [patientData, scans, timeSlots]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n    \n    // Handle category change for ID requirement\n    if (name === 'petient_type') {\n      const freeCategories = ['IPD FREE', 'OPD FREE', 'RTA', 'RGHS', 'Chiranjeevi', 'Destitute', 'PRISONER', 'Sn. CITIZEN', 'Aayushmaan'];\n      setShowUniId(freeCategories.includes(value));\n    }\n  };\n\n  // Convert 24-hour time to 12-hour AM/PM format\n  const formatTimeToAMPM = (time24: string) => {\n    const [hours, minutes] = time24.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const hours12 = hours % 12 || 12;\n    return `${hours12.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n\n  // Filter time slots based on appointment date and current time\n  const getFilteredTimeSlots = () => {\n    const now = new Date();\n    \n    // Parse appointment date properly - handle both YYYY-MM-DD and DD-MM-YYYY formats\n    let selectedDate;\n    if (formData.appoint_date.includes('-')) {\n      // YYYY-MM-DD format\n      selectedDate = new Date(formData.appoint_date);\n    } else {\n      // DD/MM/YYYY format - convert to proper date\n      const parts = formData.appoint_date.split('/');\n      if (parts.length === 3) {\n        selectedDate = new Date(parseInt(parts[2]), parseInt(parts[1]) - 1, parseInt(parts[0]));\n      } else {\n        selectedDate = new Date(formData.appoint_date);\n      }\n    }\n    \n    const isToday = selectedDate.toDateString() === now.toDateString();\n    \n    if (!isToday) {\n      // For future dates, return all time slots\n      return timeSlots;\n    }\n    \n    // For today, show slots from current time + 5 minutes onwards\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute + 5; // Add 5 minute buffer\n    \n    const filtered = timeSlots.filter(slot => {\n      // Extract time from slot.time_slot (format: \"HH:MM AM/PM\")\n      const timeMatch = slot.time_slot.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n      if (!timeMatch) return false;\n      \n      let hour = parseInt(timeMatch[1]);\n      const minute = parseInt(timeMatch[2]);\n      const period = timeMatch[3].toUpperCase();\n      \n      // Convert to 24-hour format\n      if (period === 'PM' && hour !== 12) {\n        hour += 12;\n      } else if (period === 'AM' && hour === 12) {\n        hour = 0;\n      }\n      \n      const slotTimeInMinutes = hour * 60 + minute;\n      \n      // Show slots that are from current time + buffer onwards\n      return slotTimeInMinutes >= currentTimeInMinutes;\n    });\n    \n    console.log('Filtered time slots:', {\n      currentTime: `${currentHour}:${currentMinute}`,\n      totalSlots: timeSlots.length,\n      filteredSlots: filtered.length,\n      isToday\n    });\n    \n    return filtered;\n  };\n\n  const calculateTimeOut = (timeIn: string, estimatedMinutes: number) => {\n    if (!timeIn || !estimatedMinutes) return;\n    \n    let hours, minutes;\n    \n    // Handle both 24-hour (HH:MM) and 12-hour (HH:MM AM/PM) formats\n    if (timeIn.includes('AM') || timeIn.includes('PM')) {\n      const timeMatch = timeIn.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n      if (!timeMatch) return;\n      \n      hours = parseInt(timeMatch[1]);\n      minutes = parseInt(timeMatch[2]);\n      const period = timeMatch[3].toUpperCase();\n      \n      // Convert to 24-hour format\n      if (period === 'PM' && hours !== 12) {\n        hours += 12;\n      } else if (period === 'AM' && hours === 12) {\n        hours = 0;\n      }\n    } else {\n      // Already in 24-hour format\n      [hours, minutes] = timeIn.split(':').map(Number);\n    }\n    \n    const timeInDate = new Date();\n    timeInDate.setHours(hours, minutes, 0, 0);\n    \n    // Add estimated minutes\n    const timeOutDate = new Date(timeInDate.getTime() + estimatedMinutes * 60000);\n    \n    // Format back to 24-hour format\n    const timeOut = `${timeOutDate.getHours().toString().padStart(2, '0')}:${timeOutDate.getMinutes().toString().padStart(2, '0')}`;\n    \n    // Set calculated time out\n    setFormData(prev => ({ ...prev, time_in: timeOut }));\n    setTimeOutSearchTerm(formatTimeToAMPM(timeOut));\n  };\n\n  // Convert 12-hour format to 24-hour format\n  const convertTo24Hour = (time12: string) => {\n    const timeMatch = time12.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n    if (!timeMatch) return time12;\n    \n    let hour = parseInt(timeMatch[1]);\n    const minute = parseInt(timeMatch[2]);\n    const period = timeMatch[3].toUpperCase();\n    \n    if (period === 'PM' && hour !== 12) {\n      hour += 12;\n    } else if (period === 'AM' && hour === 12) {\n      hour = 0;\n    }\n    \n    return `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n  };\n\n  // Get current time when appointment date changes\n  const getCurrentTime = () => {\n    const now = new Date();\n    return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\n  };\n\n  // Auto-select current time for today's appointment\n  const autoSelectCurrentTime = () => {\n    const today = new Date();\n    const currentHour = today.getHours();\n    const currentMinute = today.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n    \n    // Find the first available time slot that is at or after current time\n    const availableSlot = timeSlots.find(slot => {\n      const timeMatch = slot.time_slot.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n      if (!timeMatch) return false;\n      \n      let hour = parseInt(timeMatch[1]);\n      const minute = parseInt(timeMatch[2]);\n      const period = timeMatch[3].toUpperCase();\n      \n      if (period === 'PM' && hour !== 12) {\n        hour += 12;\n      } else if (period === 'AM' && hour === 12) {\n        hour = 0;\n      }\n      \n      const slotTimeInMinutes = hour * 60 + minute;\n      return slotTimeInMinutes >= currentTimeInMinutes;\n    });\n    \n    if (availableSlot) {\n      setFormData(prev => ({ ...prev, time: availableSlot.time_id.toString() }));\n      setTimeInSearchTerm(availableSlot.time_slot);\n    }\n  };\n\n  // Handle appointment date change\n  const handleAppointmentDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear time selections when date changes\n    setFormData(prev => ({ ...prev, time: '', time_in: '' }));\n    setTimeInSearchTerm('');\n    setTimeOutSearchTerm('');\n    \n    // If selecting today's date, set current time\n    const selectedDate = new Date(value);\n    const today = new Date();\n    const isToday = selectedDate.toDateString() === today.toDateString();\n    \n    if (isToday) {\n      const currentTime = getCurrentTime();\n      const currentTimeAMPM = formatTimeToAMPM(currentTime);\n      setFormData(prev => ({ ...prev, time: currentTime }));\n      setTimeInSearchTerm(currentTimeAMPM);\n      \n      // Auto-calculate time out if estimated time is available\n      const estimatedTime = parseInt(formData.est_time) || 0;\n      if (estimatedTime > 0) {\n        calculateTimeOut(currentTime, estimatedTime);\n      }\n    }\n  };\n\n  const handleScanChange = (scanId: string, checked: boolean) => {\n    let newSelectedScans = [...formData.type_of_scan];\n    \n    if (checked) {\n      newSelectedScans.push(scanId);\n    } else {\n      newSelectedScans = newSelectedScans.filter(id => id !== scanId);\n    }\n    \n    setFormData(prev => ({ ...prev, type_of_scan: newSelectedScans }));\n    \n    // Calculate totals\n    const selected = scans.filter(scan => newSelectedScans.includes(scan.s_id.toString()));\n    setSelectedScans(selected);\n    \n    const totalAmount = selected.reduce((sum, scan) => sum + scan.charges, 0);\n    const totalTime = selected.reduce((sum, scan) => {\n      const timeMatch = scan.estimate_time?.match(/(\\d+)/);\n      return sum + (timeMatch ? parseInt(timeMatch[1]) : 0);\n    }, 0);\n    \n    // Store scan amount in database regardless of category\n    const scanAmount = totalAmount;\n    \n    setFormData(prev => {\n      let newFormData;\n      \n      if (prev.petient_type === 'GEN / Paid') {\n        // For GEN/Paid: validate amount, received amount required\n        newFormData = {\n          ...prev,\n          amount: scanAmount.toString(),\n          est_time: totalTime.toString(),\n          total_amount: scanAmount.toString(),\n          rec_amount: scanAmount.toString(), // Auto-fill received amount\n          due_amount: '0'\n        };\n      } else {\n        // For other categories: total amount shows scan amount but received can be 0\n        newFormData = {\n          ...prev,\n          amount: scanAmount.toString(),\n          est_time: totalTime.toString(),\n          total_amount: scanAmount.toString(),\n          rec_amount: '0',\n          due_amount: '0'\n        };\n        \n        // Note: Patient belongs to free category - No payment required\n      }\n      \n      return newFormData;\n    });\n    \n    // Auto-select current time if not already selected and appointment is today\n    if (!formData.time && timeSlots.length > 0) {\n      const today = new Date();\n      const appointmentDate = new Date(formData.appoint_date);\n      const isToday = appointmentDate.toDateString() === today.toDateString();\n      \n      if (isToday) {\n        setTimeout(() => autoSelectCurrentTime(), 100);\n      }\n    }\n  };\n\n  const calculatePayment = () => {\n    const total = parseFloat(formData.total_amount) || 0;\n    const received = parseFloat(formData.rec_amount) || 0;\n    const discount = parseFloat(formData.dis_amount) || 0;\n    \n    // PHP logic: due_amount = total_amount - received_amount - discount_amount\n    const due = total - received - discount;\n    \n    setFormData(prev => ({ ...prev, due_amount: due.toString() }));\n  };\n\n  const validatePayment = () => {\n    // Free categories don't need payment validation (exact list from PHP)\n    const freeCategories = ['Destitute', 'Chiranjeevi', 'RGHS', 'RTA', 'OPD FREE', 'IPD FREE', 'BPL/POOR', 'Sn. CITIZEN', 'BHAMASHAH', 'JSSY', 'PRISONER', 'Aayushmaan'];\n    if (freeCategories.includes(formData.petient_type)) {\n      return true;\n    }\n    \n    const total = parseFloat(formData.total_amount) || 0;\n    const received = parseFloat(formData.rec_amount) || 0;\n    \n    // For GEN/Paid category, received amount cannot be 0 if total > 0\n    if (formData.petient_type === 'GEN / Paid' && total > 0 && received === 0) {\n      if (toast && typeof toast.error === 'function') {\n        toast.error('For GEN/Paid category, received amount cannot be 0');\n      }\n      return false;\n    }\n    \n    return true;\n  };\n\n  // Handle category change and update amounts accordingly\n  const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Handle category change for ID requirement\n    const freeCategories = ['IPD FREE', 'OPD FREE', 'RTA', 'RGHS', 'Chiranjeevi', 'Destitute', 'PRISONER', 'Sn. CITIZEN', 'Aayushmaan'];\n    setShowUniId(freeCategories.includes(value));\n    \n    // Recalculate amounts based on category\n    const scanAmount = selectedScans.reduce((sum, scan) => sum + scan.charges, 0);\n    \n    if (value === 'GEN / Paid') {\n      // For GEN/Paid: scan amount should be stored, received amount required, due can be 0\n      setFormData(prev => ({\n        ...prev,\n        total_amount: scanAmount.toString(),\n        amount: scanAmount.toString(),\n        rec_amount: scanAmount.toString(), // Auto-fill received amount\n        due_amount: '0'\n      }));\n    } else {\n      // For other categories: total amount shows scan amount, received accepts 0, due also 0\n      setFormData(prev => ({\n        ...prev,\n        total_amount: scanAmount.toString(),\n        amount: scanAmount.toString(),\n        rec_amount: '0',\n        due_amount: '0'\n      }));\n    }\n  };\n\n  // Check if print should be enabled (PHP logic: due_amount == '0')\n  const isPrintEnabled = () => {\n    const freeCategories = ['Destitute', 'Chiranjeevi', 'RGHS', 'RTA', 'OPD FREE', 'IPD FREE', 'BPL/POOR', 'Sn. CITIZEN', 'BHAMASHAH', 'JSSY', 'PRISONER', 'Aayushmaan'];\n    if (freeCategories.includes(formData.petient_type)) {\n      return true; // Always enabled for free categories\n    }\n    // PHP uses string comparison: due_amount == '0'\n    const dueAmount = parseFloat(formData.due_amount) || 0;\n    return dueAmount === 0;\n  };\n\n  const validateStep = (step: number) => {\n    const newErrors: {[key: string]: string} = {};\n    \n    if (step === 1) {\n      if (!formData.hospital_name) {\n        newErrors.hospital_name = 'Hospital Name is required';\n        toast.error('Please select Hospital Name');\n      }\n      if (!formData.doctor_name) {\n        newErrors.doctor_name = 'Doctor Name is required';\n        toast.error('Please select Doctor Name');\n      }\n      if (!formData.firstname.trim()) {\n        newErrors.firstname = 'Patient Name is required';\n        toast.error('Please enter Patient Name');\n      }\n      if (!formData.age.trim()) {\n        newErrors.age = 'Age is required';\n        toast.error('Please enter Age');\n      }\n      if (formData.contact_number && !/^[0-9]{10}$/.test(formData.contact_number)) {\n        newErrors.contact_number = 'Contact Number must be 10 digits';\n        toast.error('Contact Number must be 10 digits');\n      }\n    }\n    \n    if (step === 2) {\n      if (formData.type_of_scan.length === 0) {\n        newErrors.type_of_scan = 'At least one scan type is required';\n        toast.error('Please select at least one scan type');\n      }\n      if (!formData.time) {\n        newErrors.time = 'Time In is required';\n        toast.error('Please select Time In');\n      }\n      if (!formData.time_in) {\n        newErrors.time_in = 'Time Out is required';\n        toast.error('Please select Time Out');\n      }\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const nextStep = () => {\n    if (validateStep(currentStep)) {\n      if (currentStep < 3) {\n        setCurrentStep(currentStep + 1);\n      }\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleSubmit = async (action: string) => {\n    if (action === 'Print') {\n      // Print action - just print using saved data, no API call\n      if (savedPatientData) {\n        printReceipt(savedPatientData);\n        if (toast && typeof toast.info === 'function') {\n          toast.info('Receipt printed successfully!');\n        }\n        setTimeout(() => {\n          window.location.href = '/reception/patient-registration';\n        }, 2000);\n      }\n      return;\n    }\n\n    try {\n      // Prepare data in the format expected by the API\n      const submitData = {\n        hospital_name: formData.hospital_name,\n        DoctorName: formData.doctor_name,\n        pre: formData.pre,\n        firstname: formData.firstname,\n        age: formData.age,\n        age_type: formData.age_type,\n        gender: formData.gender,\n        petient_type: formData.petient_type,\n        p_uni_submit: formData.p_uni_submit || 'N',\n        p_uni_id_name: formData.p_uni_id_name || '',\n        address: formData.address,\n        city: formData.city,\n        contact_number: formData.contact_number,\n        type_of_scan: formData.type_of_scan,\n        appoint_date: formData.appoint_date,\n        time: formData.time,\n        time_in: formData.time_in,\n        amount: formData.amount,\n        total_amount: formData.total_amount,\n        dis_amount: formData.dis_amount,\n        rec_amount: formData.rec_amount,\n        due_amount: formData.due_amount,\n        admin_id: 1,\n        action: action\n      };\n\n      let response;\n      if (isEditMode && editPatientId) {\n        response = await fetch(`https://varahasdc.co.in/api/reception/patients/${editPatientId}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(submitData)\n        });\n      } else {\n        response = await fetch('https://varahasdc.co.in/api/reception/patients', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(submitData)\n        });\n      }\n      \n      if (response.ok) {\n        const result = await response.json();\n        const cro = result.data?.cro || (isEditMode ? 'Updated' : 'Registered');\n        \n        // Save action - enable print button\n        setIsSaved(true);\n        setSavedPatientData(result.data);\n        if (toast && typeof toast.success === 'function') {\n          toast.success(`Patient ${isEditMode ? 'updated' : 'registered'} successfully! CRO: ${cro}`);\n        }\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        if (toast && typeof toast.error === 'function') {\n          toast.error(`Error: ${errorData.error || (isEditMode ? 'Failed to update patient' : 'Failed to register patient')}`);\n        }\n      }\n    } catch (error) {\n      console.error('Error saving patient:', error);\n      if (toast && typeof toast.error === 'function') {\n        toast.error(isEditMode ? 'Error updating patient' : 'Error saving patient');\n      }\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n      hospital_name: '',\n      doctor_name: '',\n      pre: 'Mr.',\n      firstname: '',\n      age: '',\n      age_type: 'Year',\n      gender: 'Male',\n      petient_type: 'GEN / Paid',\n      p_uni_submit: 'N',\n      p_uni_id_name: '',\n      address: '',\n      city: '',\n      contact_number: '',\n      type_of_scan: [],\n      appoint_date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n      time: '',\n      time_in: '',\n      amount: '0',\n      est_time: '0',\n      total_amount: '0',\n      rec_amount: '0',\n      dis_amount: '0',\n      due_amount: '0'\n    });\n    \n    // Reset search terms\n    setHospitalSearchTerm('');\n    setDoctorSearchTerm('');\n    setTimeInSearchTerm('');\n    setTimeOutSearchTerm('');\n    setScanSearchTerm('');\n    setSelectedScans([]);\n    \n    // Go back to first step\n    setCurrentStep(1);\n    \n    // Refresh last patient data\n    fetchLastPatient();\n  };\n\n  // Convert number to words function\n  const numberToWords = (num: number): string => {\n    const ones = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n    const teens = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n    const tens = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n    \n    if (num === 0) return 'zero';\n    if (num < 10) return ones[num];\n    if (num < 20) return teens[num - 10];\n    if (num < 100) return tens[Math.floor(num / 10)] + (num % 10 ? ' ' + ones[num % 10] : '');\n    if (num < 1000) return ones[Math.floor(num / 100)] + ' hundred' + (num % 100 ? ' ' + numberToWords(num % 100) : '');\n    if (num < 100000) return numberToWords(Math.floor(num / 1000)) + ' thousand' + (num % 1000 ? ' ' + numberToWords(num % 1000) : '');\n    \n    return num.toString();\n  };\n\n  const printReceipt = (patientData: any) => {\n    const currentDate = new Date().toLocaleDateString('en-GB');\n    const investigations = selectedScans.map(scan => scan.s_name).join(', ');\n    const amountInWords = numberToWords(parseInt(formData.rec_amount || formData.total_amount)).toUpperCase();\n    \n    const printContent = `\n<!DOCTYPE html>\n<html>\n<head>\n<title>Receipt - ${patientData.cro || 'New Patient'}</title>\n<style>\n.admission_form { text-align: center; color: #000000; font-size: 10px; width: 100%; }\n.admission_form table { width: 98%; font-size: 10px; margin: -5px 8px; }\n.admission_form .form_input { padding: 2px 1%; font-size: 10px; border: none; font-weight: bold; font-style: italic; width: 99%; border-bottom: 1px dotted #000000; }\n.admission_form .form_input_box { border-bottom: 0px dotted #000000; padding: 0px 0px 2px 0px; width: 100%; display: inline-block; }\n@media print { .no_print, .no_print * { display: none !important; } .admission_div_desc { border: 0px !important; } .page_break { page-break-after: always; } }\n</style>\n</head>\n<body bgcolor=\"#FFFFFF\" leftmargin=\"0\" topmargin=\"0\" marginwidth=\"0\" marginheight=\"0\" onload=\"window.print(); setTimeout(() => window.close(), 1000);\">\n<div class=\"admission_form\" align=\"center\" style=\"border:solid thin; margin-top:18px;width:93.0%;margin-left:30px;\">\n  <table align=\"center\" style=\"margin-top:2px;\">\n    <tr><td colspan=\"6\"><b>Dr. S.N. MEDICAL COLLEGE AND ATTACHED GROUP OF HOSPITAL, JODHPUR</b></td></tr>\n    <tr><td colspan=\"6\"><b>Rajasthan Medical Relief Society, M.D.M. Hospital, Jodhpur</b></td></tr>\n    <tr><td colspan=\"6\"><b>IMAGING CENTRE UNDER P.P.P.MODE : VARAHA SDC</b></td></tr>\n    <tr><td colspan=\"6\"><b>256 SLICE DUAL ENERGY CT SCAN, M.D.M HOSPITAL Jodhpur(Raj.) - 342003</b></td></tr>\n    <tr><td colspan=\"6\"><b>Tel. : +91-291-2648120 , 0291-2648121 , 0291-2648122</b></td></tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"55\">Reg.No :</td>\n      <td width=\"200\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${patientData.cro || ''}(${patientData.patient_id || ''})\"></span></td>\n      <td colspan=\"6\"><span style=\"margin-left:30%; border: 1px solid #02C; border-radius: 11px;padding: 3px 15px;\">Cash Receipt</span></td>\n      <td width=\"36\">Date</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${currentDate}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"56\">Ref. By :</td>\n      <td width=\"482\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${doctorSearchTerm || ''}\"></span></td>\n      <td width=\"174\">Date and Time of Appointment :</td>\n      <td width=\"316\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.appoint_date.split('-').reverse().join('-')} ${timeInSearchTerm || ''}-${timeOutSearchTerm || ''}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"78\">Patient Name:</td>\n      <td width=\"650\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.pre} ${formData.firstname}\"></span></td>\n      <td width=\"33\">Age :</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.age}\"></span></td>\n      <td width=\"36\">Gender</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.gender}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"40\">Address</td>\n      <td width=\"687\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.address || ''}\"></span></td>\n      <td width=\"687\"><span class=\"form_input_box\"><label>Category</label><input type=\"text\" class=\"form_input\" value=\"${formData.petient_type}\"></span></td>\n      <td width=\"33\">Phone:</td>\n      <td width=\"333\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.contact_number || ''}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"59\">Investigations:</td>\n      <td width=\"1042\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${investigations}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"129\">For Sum Of Rupees:</td>\n      <td width=\"733\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${amountInWords} RUPEES ONLY\"></span></td>\n      <td width=\"147\"><label>Scan Amount</label><input type=\"text\" value=\"₹ ${formData.total_amount}\" style=\"border:1px solid #5E60AE;\"></td>\n      <td width=\"147\"><label>Received Amount</label><input type=\"text\" value=\"₹ ${formData.rec_amount}\" style=\"border:1px solid #5E60AE;\"></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td colspan=\"6\" align=\"right\" style=\"padding-top: 20px;\">For Varaha SDC, Jodhpur</td>\n    </tr>\n    <tr>\n      <td colspan=\"6\" align=\"right\" style=\"padding-top: 30px;\">Signature</td>\n    </tr>\n  </table>\n  \n  <table style=\"margin-top: 10px;\">\n    <tr>\n      <td colspan=\"6\" style=\"font-size: 8px; text-align: center;\">This is a computer generated receipt</td>\n    </tr>\n  </table>\n</div>\n\n<div style=\"page-break-before: always;\"></div>\n\n<div class=\"admission_form\" align=\"center\" style=\"border:solid thin; margin-top:18px;width:93.0%;margin-left:30px;\">\n  <table align=\"center\" style=\"margin-top:2px;\">\n    <tr><td colspan=\"6\"><b>Dr. S.N. MEDICAL COLLEGE AND ATTACHED GROUP OF HOSPITAL, JODHPUR</b></td></tr>\n    <tr><td colspan=\"6\"><b>Rajasthan Medical Relief Society, M.D.M. Hospital, Jodhpur</b></td></tr>\n    <tr><td colspan=\"6\"><b>IMAGING CENTRE UNDER P.P.P.MODE : VARAHA SDC</b></td></tr>\n    <tr><td colspan=\"6\"><b>256 SLICE DUAL ENERGY CT SCAN, M.D.M HOSPITAL Jodhpur(Raj.) - 342003</b></td></tr>\n    <tr><td colspan=\"6\"><b>Tel. : +91-291-2648120 , 0291-2648121 , 0291-2648122</b></td></tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"55\">Reg.No :</td>\n      <td width=\"200\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${patientData.cro || ''}(${patientData.patient_id || ''})\"></span></td>\n      <td colspan=\"6\"><span style=\"margin-left:30%; border: 1px solid #02C; border-radius: 11px;padding: 3px 15px;\">Cash Receipt</span></td>\n      <td width=\"36\">Date</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${currentDate}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"56\">Ref. By :</td>\n      <td width=\"482\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${doctorSearchTerm || ''}\"></span></td>\n      <td width=\"174\">Date and Time of Appointment :</td>\n      <td width=\"316\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.appoint_date.split('-').reverse().join('-')} ${timeInSearchTerm || ''}-${timeOutSearchTerm || ''}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"78\">Patient Name:</td>\n      <td width=\"650\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.pre} ${formData.firstname}\"></span></td>\n      <td width=\"33\">Age :</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.age}\"></span></td>\n      <td width=\"36\">Gender</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.gender}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"40\">Address</td>\n      <td width=\"687\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.address || ''}\"></span></td>\n      <td width=\"687\"><span class=\"form_input_box\"><label>Category</label><input type=\"text\" class=\"form_input\" value=\"${formData.petient_type}\"></span></td>\n      <td width=\"33\">Phone:</td>\n      <td width=\"333\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.contact_number || ''}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"59\">Investigations:</td>\n      <td width=\"1042\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${investigations}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"129\">For Sum Of Rupees:</td>\n      <td width=\"733\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${amountInWords} RUPEES ONLY\"></span></td>\n      <td width=\"147\"><label>Scan Amount</label><input type=\"text\" value=\"₹ ${formData.total_amount}\" style=\"border:1px solid #5E60AE;\"></td>\n      <td width=\"147\"><label>Received Amount</label><input type=\"text\" value=\"₹ ${formData.rec_amount}\" style=\"border:1px solid #5E60AE;\"></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td colspan=\"6\" align=\"right\" style=\"padding-top: 20px;\">For Varaha SDC, Jodhpur</td>\n    </tr>\n    <tr>\n      <td colspan=\"6\" align=\"right\" style=\"padding-top: 30px;\">Signature</td>\n    </tr>\n  </table>\n  \n  <table style=\"margin-top: 10px;\">\n    <tr>\n      <td colspan=\"6\" style=\"font-size: 8px; text-align: center;\">This is a computer generated receipt</td>\n    </tr>\n  </table>\n</div>\n</body>\n</html>`;\n    \n    const printWindow = window.open('', '_blank');\n    if (printWindow) {\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n    }\n  };\n\n  return (\n    <div className=\"p-3 sm:p-6 space-y-4 sm:space-y-6 min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      <div className=\"bg-gradient-to-r from-sky-500 to-sky-600 text-white p-4 sm:p-6 rounded-xl shadow-2xl\">\n        <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-start space-y-4 sm:space-y-0\">\n          <div>\n            <h1 className=\"text-xl sm:text-3xl font-bold mb-2\">{isEditMode ? 'Edit Patient Registration' : 'New Patient Registration'}</h1>\n            <p className=\"text-sky-100 text-sm sm:text-lg\">{isEditMode ? 'Update patient information and scan details' : 'Complete patient enrollment and scan booking'}</p>\n          </div>\n          {lastPatient && !isEditMode && (\n            <div className=\"bg-sky-600 bg-opacity-50 rounded-lg px-4 py-2 min-w-0 flex-shrink-0\">\n              <p className=\"text-sky-200 text-xs mb-1\">Last Enrolled Patient</p>\n              <p className=\"text-white font-medium text-sm truncate\">{lastPatient.cro} - {lastPatient.patient_name}</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-xl shadow-2xl border border-gray-100\">\n        {/* Step Navigation */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"flex flex-col sm:flex-row\">\n            <button\n              className={`flex-1 py-3 sm:py-4 px-3 sm:px-6 text-center border-b-2 font-medium text-xs sm:text-sm ${\n                currentStep === 1 \n                  ? 'border-sky-500 text-sky-600 bg-sky-50' \n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setCurrentStep(1)}\n            >\n              <span className=\"sm:hidden\">1. Enrollment</span>\n              <span className=\"hidden sm:inline\">1. Enrollment Detail</span>\n            </button>\n            <button\n              className={`flex-1 py-3 sm:py-4 px-3 sm:px-6 text-center border-b-2 font-medium text-xs sm:text-sm ${\n                currentStep === 2 \n                  ? 'border-sky-500 text-sky-600 bg-sky-50' \n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setCurrentStep(2)}\n            >\n              <span className=\"sm:hidden\">2. Scans</span>\n              <span className=\"hidden sm:inline\">2. Scan Options</span>\n            </button>\n            <button\n              className={`flex-1 py-3 sm:py-4 px-3 sm:px-6 text-center border-b-2 font-medium text-xs sm:text-sm ${\n                currentStep === 3 \n                  ? 'border-sky-500 text-sky-600 bg-sky-50' \n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setCurrentStep(3)}\n            >\n              <span className=\"sm:hidden\">3. Payment</span>\n              <span className=\"hidden sm:inline\">3. Payment Details</span>\n            </button>\n          </nav>\n        </div>\n\n        <form className=\"p-3 sm:p-6\">\n          {/* Step 1: Enrollment Details */}\n          {currentStep === 1 && (\n            <div className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n                  <input\n                    type=\"text\"\n                    name=\"date\"\n                    value={formData.date.split('-').reverse().join('-')}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                </div>\n                <div className=\"relative\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hospital Name <span className=\"text-red-500\">*</span></label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      value={hospitalSearchTerm}\n                      onChange={(e) => {\n                        setHospitalSearchTerm(e.target.value);\n                        setShowHospitalDropdown(true);\n                      }}\n                      onFocus={() => setShowHospitalDropdown(true)}\n                      className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                        errors.hospital_name ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                      }`}\n                      placeholder=\"Search and select hospital\"\n                      required\n                    />\n                    <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                  </div>\n                  {showHospitalDropdown && (\n                    <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                      {hospitals\n                        .filter(hospital => \n                          hospital.h_name.toLowerCase().includes(hospitalSearchTerm.toLowerCase())\n                        )\n                        .map(hospital => (\n                          <div\n                            key={hospital.h_id}\n                            className=\"px-3 py-2 hover:bg-blue-50 cursor-pointer\"\n                            onClick={() => {\n                              setFormData(prev => ({ ...prev, hospital_name: hospital.h_id.toString() }));\n                              setHospitalSearchTerm(hospital.h_name);\n                              setShowHospitalDropdown(false);\n                              if (errors.hospital_name) {\n                                setErrors(prev => ({ ...prev, hospital_name: '' }));\n                              }\n                            }}\n                          >\n                            {hospital.h_name}\n                          </div>\n                        ))\n                      }\n                      {hospitals.filter(hospital => \n                        hospital.h_name.toLowerCase().includes(hospitalSearchTerm.toLowerCase())\n                      ).length === 0 && (\n                        <div className=\"px-3 py-2 text-gray-500\">No hospitals found</div>\n                      )}\n                    </div>\n                  )}\n                  {errors.hospital_name && <p className=\"text-red-500 text-sm mt-1\">{errors.hospital_name}</p>}\n                </div>\n                <div className=\"relative\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Doctor Name <span className=\"text-red-500\">*</span></label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      value={doctorSearchTerm}\n                      onChange={(e) => {\n                        setDoctorSearchTerm(e.target.value);\n                        setShowDoctorDropdown(true);\n                      }}\n                      onFocus={() => setShowDoctorDropdown(true)}\n                      className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                        errors.doctor_name ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                      }`}\n                      placeholder=\"Search and select doctor\"\n                      required\n                    />\n                    <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                  </div>\n                  {showDoctorDropdown && (\n                    <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                      {doctors\n                        .filter(doctor => \n                          doctor.dname.toLowerCase().includes(doctorSearchTerm.toLowerCase())\n                        )\n                        .map(doctor => (\n                          <div\n                            key={doctor.d_id}\n                            className=\"px-3 py-2 hover:bg-blue-50 cursor-pointer\"\n                            onClick={() => {\n                              setFormData(prev => ({ ...prev, doctor_name: doctor.d_id.toString() }));\n                              setDoctorSearchTerm(doctor.dname);\n                              setShowDoctorDropdown(false);\n                              if (errors.doctor_name) {\n                                setErrors(prev => ({ ...prev, doctor_name: '' }));\n                              }\n                            }}\n                          >\n                            {doctor.dname}\n                          </div>\n                        ))\n                      }\n                      {doctors.filter(doctor => \n                        doctor.dname.toLowerCase().includes(doctorSearchTerm.toLowerCase())\n                      ).length === 0 && (\n                        <div className=\"px-3 py-2 text-gray-500\">No doctors found</div>\n                      )}\n                    </div>\n                  )}\n                  {errors.doctor_name && <p className=\"text-red-500 text-sm mt-1\">{errors.doctor_name}</p>}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Patient Name <span className=\"text-red-500\">*</span></label>\n                  <select\n                    name=\"pre\"\n                    value={formData.pre}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"Mr.\">Mr.</option>\n                    <option value=\"Mrs.\">Mrs.</option>\n                    <option value=\"Master\">Master</option>\n                    <option value=\"Miss\">Miss</option>\n                    <option value=\"Baby\">Baby</option>\n                  </select>\n                </div>\n                <div className=\"md:col-span-3\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">&nbsp;</label>\n                  <input\n                    type=\"text\"\n                    name=\"firstname\"\n                    value={formData.firstname}\n                    onChange={handleInputChange}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      errors.firstname ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Please enter your First name\"\n                    required\n                  />\n                  {errors.firstname && <p className=\"text-red-500 text-sm mt-1\">{errors.firstname}</p>}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age <span className=\"text-red-500\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"age\"\n                    value={formData.age}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      if (/^\\d*$/.test(value) && (value === '' || (parseInt(value) >= 0 && parseInt(value) <= 100))) {\n                        handleInputChange(e);\n                      }\n                    }}\n                    onKeyPress={(e) => {\n                      if (!/[0-9]/.test(e.key) && e.key !== 'Backspace' && e.key !== 'Delete') {\n                        e.preventDefault();\n                      }\n                    }}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      errors.age ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Age (0-100)\"\n                    maxLength={3}\n                  />\n                  {errors.age && <p className=\"text-red-500 text-sm mt-1\">{errors.age}</p>}\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">In (Year/Month/Days)</label>\n                  <select\n                    name=\"age_type\"\n                    value={formData.age_type}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"Year\">Year</option>\n                    <option value=\"Month\">Month</option>\n                    <option value=\"Days\">Days</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label>\n                  <select\n                    name=\"gender\"\n                    value={formData.gender}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\n                  <select\n                    name=\"petient_type\"\n                    value={formData.petient_type}\n                    onChange={handleCategoryChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"GEN / Paid\">GEN / Paid</option>\n                    <option value=\"IPD FREE\">IPD Free</option>\n                    <option value=\"OPD FREE\">OPD Free</option>\n                    <option value=\"RTA\">RTA</option>\n                    <option value=\"RGHS\">RGHS</option>\n                    <option value=\"Chiranjeevi\">Chiranjeevi</option>\n                    <option value=\"Destitute\">Destitute</option>\n                    <option value=\"PRISONER\">PRISONER</option>\n                    <option value=\"Sn. CITIZEN\">Sn. CITIZEN</option>\n                    <option value=\"Aayushmaan\">Aayushmaan</option>\n                  </select>\n                </div>\n              </div>\n\n              {showUniId && (\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">ID</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_uni_submit\"\n                      value={formData.p_uni_submit}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Y / N\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name Of ID</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_uni_id_name\"\n                      value={formData.p_uni_id_name}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"ID Name\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Upload ID</label>\n                    <input\n                      type=\"file\"\n                      name=\"p_uni_id_scan\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Address</label>\n                <input\n                  type=\"text\"\n                  name=\"address\"\n                  value={formData.address}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Please enter your Address\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\n                  <input\n                    type=\"text\"\n                    name=\"city\"\n                    value={formData.city}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Please enter your city\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contact Number</label>\n                  <input\n                    type=\"text\"\n                    name=\"contact_number\"\n                    value={formData.contact_number}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      if (/^\\d*$/.test(value) && value.length <= 10) {\n                        handleInputChange(e);\n                      }\n                    }}\n                    onKeyPress={(e) => {\n                      if (!/[0-9]/.test(e.key) && e.key !== 'Backspace' && e.key !== 'Delete') {\n                        e.preventDefault();\n                      }\n                    }}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      errors.contact_number ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"10-digit mobile number\"\n                    maxLength={10}\n                  />\n                  {errors.contact_number && <p className=\"text-red-500 text-sm mt-1\">{errors.contact_number}</p>}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Step 2: Scan Options */}\n          {currentStep === 2 && (\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Scan Type <span className=\"text-red-500\">*</span></label>\n                <div className=\"mb-4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search scans...\"\n                    value={scanSearchTerm}\n                    onChange={(e) => setScanSearchTerm(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mb-3\"\n                  />\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 max-h-60 overflow-y-auto border border-gray-200 rounded-md p-4\">\n                  {scans.filter(scan => \n                    scan.s_name.toLowerCase().includes(scanSearchTerm.toLowerCase())\n                  ).map(scan => (\n                    <label key={scan.s_id} className=\"flex items-center space-x-2 p-2 hover:bg-gray-50 rounded cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={formData.type_of_scan.includes(scan.s_id.toString())}\n                        onChange={(e) => handleScanChange(scan.s_id.toString(), e.target.checked)}\n                        className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <div className=\"flex-1\">\n                        <span className=\"text-sm font-medium\">{scan.s_name}</span>\n                        <div className=\"text-xs text-gray-500\">₹{scan.charges} • {scan.estimate_time} min</div>\n                      </div>\n                    </label>\n                  ))}\n                  {scans.filter(scan => \n                    scan.s_name.toLowerCase().includes(scanSearchTerm.toLowerCase())\n                  ).length === 0 && (\n                    <div className=\"col-span-full text-center text-gray-500 py-4\">No scans found</div>\n                  )}\n                </div>\n                {errors.type_of_scan && <p className=\"text-red-500 text-sm mt-1\">{errors.type_of_scan}</p>}\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Appoint Date</label>\n                  <input\n                    type=\"date\"\n                    name=\"appoint_date\"\n                    value={formData.appoint_date}\n                    onChange={handleAppointmentDateChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Time In <span className=\"text-red-500\">*</span></label>\n                  <input\n                    type=\"text\"\n                    value={timeInSearchTerm}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                  {errors.time && <p className=\"text-red-500 text-sm mt-1\">{errors.time}</p>}\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Time Out <span className=\"text-red-500\">*</span></label>\n                  <input\n                    type=\"text\"\n                    value={timeOutSearchTerm}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                  {errors.time_in && <p className=\"text-red-500 text-sm mt-1\">{errors.time_in}</p>}\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"amount\"\n                    value={formData.amount}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Estimated Time</label>\n                  <input\n                    type=\"text\"\n                    name=\"est_time\"\n                    value={formData.est_time}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                </div>\n              </div>\n\n              {selectedScans.length > 0 && (\n                <div className=\"mt-6\">\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Selected Scans</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse border border-gray-300\">\n                      <thead>\n                        <tr className=\"bg-gray-50\">\n                          <th className=\"border border-gray-300 px-4 py-2 text-left\">S.No</th>\n                          <th className=\"border border-gray-300 px-4 py-2 text-left\">Name Of Scan</th>\n                          <th className=\"border border-gray-300 px-4 py-2 text-left\">Charges</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {selectedScans.map((scan, index) => (\n                          <tr key={scan.s_id}>\n                            <td className=\"border border-gray-300 px-4 py-2\">{index + 1}</td>\n                            <td className=\"border border-gray-300 px-4 py-2\">{scan.s_name}</td>\n                            <td className=\"border border-gray-300 px-4 py-2\">₹{scan.charges}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Step 3: Payment Details */}\n          {currentStep === 3 && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm\">\n                <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 px-4 py-3 border-b border-gray-200\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 flex items-center\">\n                    <User className=\"h-5 w-5 mr-2 text-blue-600\" />\n                    Patient Summary\n                  </h3>\n                </div>\n                <div className=\"p-4\">\n                  <div className=\"space-y-3\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Patient Name</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.pre} {formData.firstname}</div>\n                      </div>\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Age & Gender</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.age} {formData.age_type}, {formData.gender}</div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Category</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.petient_type}</div>\n                      </div>\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Appointment Date</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.appoint_date.split('-').reverse().join('-')}</div>\n                      </div>\n                    </div>\n                    \n                    {(formData.contact_number || formData.address) && (\n                      <div className=\"grid grid-cols-1 gap-4\">\n                        {formData.contact_number && (\n                          <div className=\"bg-gray-50 p-3 rounded-md\">\n                            <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Contact Number</div>\n                            <div className=\"text-sm font-semibold text-gray-900\">{formData.contact_number}</div>\n                          </div>\n                        )}\n                        {formData.address && (\n                          <div className=\"bg-gray-50 p-3 rounded-md\">\n                            <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Address</div>\n                            <div className=\"text-sm font-semibold text-gray-900\">{formData.address}</div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                    \n                    {formData.time && formData.time_in && (\n                      <div className=\"bg-blue-50 p-3 rounded-md border border-blue-200\">\n                        <div className=\"text-xs text-blue-600 uppercase tracking-wide mb-1\">Time Slot</div>\n                        <div className=\"text-sm font-semibold text-blue-900\">\n                          {formatTimeToAMPM(formData.time)} - {formatTimeToAMPM(formData.time_in)}\n                          <span className=\"ml-2 text-xs text-blue-600\">({formData.est_time} min estimated)</span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white border border-gray-300 rounded-lg overflow-hidden\">\n                <div className=\"bg-gray-100 px-4 py-3 border-b border-gray-300\">\n                  <h4 className=\"font-semibold text-gray-800\">Payment Details</h4>\n                </div>\n                \n                <div className=\"p-4 space-y-4\">\n                  {/* Scan Details */}\n                  {selectedScans.length > 0 && (\n                    <div className=\"border border-gray-200 rounded\">\n                      <div className=\"bg-gray-50 px-3 py-2 border-b border-gray-200\">\n                        <span className=\"font-medium text-sm\">Selected Scans</span>\n                      </div>\n                      {selectedScans.map((scan, index) => (\n                        <div key={scan.s_id} className=\"px-3 py-2 border-b border-gray-100 last:border-b-0 flex justify-between\">\n                          <span className=\"text-sm\">{index + 1}. {scan.s_name}</span>\n                          <span className=\"text-sm font-medium\">₹{scan.charges}</span>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {/* Payment Calculation */}\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Total Amount</label>\n                      <input\n                        type=\"text\"\n                        name=\"total_amount\"\n                        value={`₹${formData.total_amount}`}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 font-semibold\"\n                        readOnly\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Received Amount</label>\n                      <input\n                        type=\"number\"\n                        name=\"rec_amount\"\n                        value={formData.rec_amount}\n                        max={formData.total_amount}\n                        onChange={(e) => {\n                          const total = parseFloat(formData.total_amount) || 0;\n                          const received = parseFloat(e.target.value) || 0;\n                          \n                          // For GEN/Paid category, validate received amount\n                          if (formData.petient_type === 'GEN / Paid') {\n                            if (received > total) {\n                              return;\n                            }\n                          }\n                          \n                          const discount = parseFloat(formData.dis_amount) || 0;\n                          const due = total - received - discount;\n                          setFormData(prev => ({ ...prev, rec_amount: e.target.value, due_amount: due.toString() }));\n                        }}\n                        className={`w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-sky-500 ${\n                          formData.petient_type !== 'GEN / Paid' ? 'bg-gray-50' : ''\n                        }`}\n                        placeholder=\"0\"\n                        readOnly={formData.petient_type !== 'GEN / Paid'}\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Discount</label>\n                      <input\n                        type=\"number\"\n                        name=\"dis_amount\"\n                        value={formData.dis_amount}\n                        onChange={(e) => {\n                          const total = parseFloat(formData.total_amount) || 0;\n                          const received = parseFloat(formData.rec_amount) || 0;\n                          const discount = parseFloat(e.target.value) || 0;\n                          const due = total - received - discount;\n                          setFormData(prev => ({ ...prev, dis_amount: e.target.value, due_amount: due.toString() }));\n                        }}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-sky-500\"\n                        placeholder=\"0\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Amount</label>\n                      <input\n                        type=\"text\"\n                        name=\"due_amount\"\n                        value={`₹${formData.due_amount}`}\n                        className={`w-full px-3 py-2 border border-gray-300 rounded-md font-semibold ${\n                          parseFloat(formData.due_amount) > 0 ? 'bg-red-50 text-red-700' : 'bg-green-50 text-green-700'\n                        }`}\n                        readOnly\n                      />\n                    </div>\n                  </div>\n                  \n                  {/* Payment Status */}\n                  <div className={`text-center p-3 rounded-md ${\n                    isPrintEnabled() ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'\n                  }`}>\n                    <span className={`font-semibold ${\n                      isPrintEnabled() ? 'text-green-700' : 'text-red-700'\n                    }`}>\n                      {isPrintEnabled() \n                        ? 'Ready to print' \n                        : 'Payment Required - Complete payment to enable printing'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Navigation Buttons */}\n          <div className=\"flex justify-between pt-6 border-t border-gray-200\">\n            <button\n              type=\"button\"\n              onClick={prevStep}\n              disabled={currentStep === 1}\n              className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span>Previous</span>\n            </button>\n\n            <div className=\"flex space-x-2\">\n              {currentStep < 3 ? (\n                <button\n                  type=\"button\"\n                  onClick={nextStep}\n                  className=\"flex items-center space-x-2 px-4 py-2 bg-sky-600 text-white rounded-md hover:bg-sky-700\"\n                >\n                  <span>Next</span>\n                  <ArrowRight className=\"h-4 w-4\" />\n                </button>\n              ) : (\n                <>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleSubmit('Save')}\n                    disabled={isSaved}\n                    className=\"flex items-center space-x-2 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-lg transition-all duration-200\"\n                  >\n                    <Check className=\"h-5 w-5\" />\n                    <span>{isSaved ? 'SAVED' : 'SAVE'}</span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleSubmit('Print')}\n                    disabled={!isSaved}\n                    className=\"flex items-center space-x-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-lg transition-all duration-200\"\n                    title={isSaved ? 'Print Receipt' : 'Save patient first to enable printing'}\n                  >\n                    <FileText className=\"h-5 w-5\" />\n                    <span>PRINT</span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      const confirmed = window.confirm('Are you sure you want to exit? Any unsaved changes will be lost.');\n                      if (confirmed) {\n                        if (toast && typeof toast.info === 'function') {\n                          toast.info('Exiting patient registration');\n                        }\n                        window.location.href = '/reception/patient-registration';\n                      }\n                    }}\n                    className=\"flex items-center space-x-2 px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 font-medium shadow-lg transition-all duration-200\"\n                  >\n                    <ArrowLeft className=\"h-5 w-5\" />\n                    <span>EXIT</span>\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}