{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashokverma/Documents/TechRover/securevraha/app/src/app/reception/patient-registration/new/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { User, Calendar, FileText, Plus, ArrowLeft, ArrowRight, Check, ChevronDown } from 'lucide-react';\nimport { useToastContext } from '@/context/ToastContext';\nimport LastEnrolledPatient from '@/components/LastEnrolledPatient';\n\ninterface FormData {\n  // Step 1 - Enrollment Details\n  date: string;\n  hospital_name: string;\n  doctor_name: string;\n  pre: string;\n  firstname: string;\n  age: string;\n  age_type: string;\n  gender: string;\n  petient_type: string;\n  p_uni_submit: string;\n  p_uni_id_name: string;\n  address: string;\n  city: string;\n  contact_number: string;\n  \n  // Step 2 - Scan Options\n  type_of_scan: string[];\n  appoint_date: string;\n  time: string;\n  time_in: string;\n  amount: string;\n  est_time: string;\n  \n  // Step 3 - Payment Details\n  total_amount: string;\n  rec_amount: string;\n  dis_amount: string;\n  due_amount: string;\n}\n\ninterface Hospital {\n  h_id: number;\n  h_name: string;\n}\n\ninterface Doctor {\n  d_id: number;\n  dname: string;\n}\n\ninterface Scan {\n  s_id: number;\n  s_name: string;\n  charges: number;\n  estimate_time: string;\n}\n\nexport default function NewPatientRegistration() {\n  const toast = useToastContext();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editPatientId, setEditPatientId] = useState<string | null>(null);\n  const [hospitals, setHospitals] = useState<Hospital[]>([]);\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [scans, setScans] = useState<Scan[]>([]);\n  const [selectedScans, setSelectedScans] = useState<Scan[]>([]);\n  const [showUniId, setShowUniId] = useState(false);\n  const [scanSearchTerm, setScanSearchTerm] = useState('');\n  const [hospitalSearchTerm, setHospitalSearchTerm] = useState('');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [showHospitalDropdown, setShowHospitalDropdown] = useState(false);\n  const [showDoctorDropdown, setShowDoctorDropdown] = useState(false);\n  const [showTimeInDropdown, setShowTimeInDropdown] = useState(false);\n  const [showTimeOutDropdown, setShowTimeOutDropdown] = useState(false);\n  const [timeInSearchTerm, setTimeInSearchTerm] = useState('');\n  const [timeOutSearchTerm, setTimeOutSearchTerm] = useState('');\n  const [errors, setErrors] = useState<{[key: string]: string}>({});\n  const [lastPatient, setLastPatient] = useState<{cro: string, patient_name: string} | null>(null);\n  const [timeSlots, setTimeSlots] = useState<{time_id: number, time_slot: string}[]>([]);\n  const [isSaved, setIsSaved] = useState(false);\n  const [savedPatientData, setSavedPatientData] = useState<any>(null);\n  \n  const [formData, setFormData] = useState<FormData>({\n    date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n    hospital_name: '',\n    doctor_name: '',\n    pre: 'Mr.',\n    firstname: '',\n    age: '',\n    age_type: 'Year',\n    gender: 'Male',\n    petient_type: 'GEN / Paid',\n    p_uni_submit: 'N',\n    p_uni_id_name: '',\n    address: '',\n    city: '',\n    contact_number: '',\n    type_of_scan: [],\n    appoint_date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n    time: '',\n    time_in: '',\n    amount: '0',\n    est_time: '0',\n    total_amount: '0',\n    rec_amount: '0',\n    dis_amount: '0',\n    due_amount: '0'\n  });\n\n  useEffect(() => {\n    fetchHospitals();\n    fetchDoctors();\n    fetchScans();\n    fetchTimeSlots();\n    fetchLastPatient();\n    \n    // Check for edit mode\n    const urlParams = new URLSearchParams(window.location.search);\n    const editId = urlParams.get('edit');\n    if (editId) {\n      setIsEditMode(true);\n      setEditPatientId(editId);\n      fetchPatientData(editId);\n    }\n\n    // Close dropdowns when clicking outside\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n      if (!target.closest('.relative')) {\n        setShowHospitalDropdown(false);\n        setShowDoctorDropdown(false);\n        setShowTimeInDropdown(false);\n        setShowTimeOutDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Auto-set current time when appointment date is today\n  useEffect(() => {\n    if (!isEditMode && !formData.time) {\n      const today = new Date();\n      const appointmentDate = new Date(formData.appoint_date);\n      const isToday = appointmentDate.toDateString() === today.toDateString();\n      \n      if (isToday) {\n        const currentTime = getCurrentTime();\n        const currentTimeAMPM = formatTimeToAMPM(currentTime);\n        setFormData(prev => ({ ...prev, time: currentTime }));\n        setTimeInSearchTerm(currentTimeAMPM);\n      }\n    }\n  }, [formData.appoint_date]);\n\n  // Auto-calculate time out when time in or estimated time changes\n  useEffect(() => {\n    if (formData.time && formData.est_time && parseInt(formData.est_time) > 0) {\n      calculateTimeOut(formData.time, parseInt(formData.est_time));\n    }\n  }, [formData.time, formData.est_time]);\n\n  // Auto-calculate time out when estimated time changes\n  useEffect(() => {\n    if (formData.time && formData.est_time && parseInt(formData.est_time) > 0) {\n      const timeSlot = timeSlots.find(slot => slot.time_id.toString() === formData.time);\n      if (timeSlot) {\n        const timeMatch = timeSlot.time_slot.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n        if (timeMatch) {\n          let hour = parseInt(timeMatch[1]);\n          const minute = parseInt(timeMatch[2]);\n          const period = timeMatch[3].toUpperCase();\n          \n          if (period === 'PM' && hour !== 12) {\n            hour += 12;\n          } else if (period === 'AM' && hour === 12) {\n            hour = 0;\n          }\n          \n          const time24 = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n          calculateTimeOut(time24, parseInt(formData.est_time));\n        }\n      }\n    }\n  }, [formData.est_time, formData.time, timeSlots]);\n\n  const fetchHospitals = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/hospitals');\n      if (response.ok) {\n        const data = await response.json();\n        setHospitals(Array.isArray(data) ? data : []);\n      }\n    } catch (error) {\n      console.error('Error fetching hospitals:', error);\n    }\n  };\n\n  const fetchDoctors = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/doctors');\n      if (response.ok) {\n        const data = await response.json();\n        setDoctors(Array.isArray(data) ? data : []);\n      }\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n\n  const fetchScans = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/scans');\n      if (response.ok) {\n        const data = await response.json();\n        setScans(Array.isArray(data) ? data : []);\n      }\n    } catch (error) {\n      console.error('Error fetching scans:', error);\n    }\n  };\n\n  const fetchTimeSlots = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/time-slots');\n      if (response.ok) {\n        const data = await response.json();\n        const slots = Array.isArray(data) ? data : [];\n        console.log('Fetched time slots:', slots);\n        setTimeSlots(slots);\n      } else {\n        console.error('Failed to fetch time slots, using fallback');\n        generateFallbackTimeSlots();\n      }\n    } catch (error) {\n      console.error('Error fetching time slots:', error);\n      generateFallbackTimeSlots();\n    }\n  };\n\n  // Generate fallback time slots if API fails - every 15 minutes for 24 hours\n  const generateFallbackTimeSlots = () => {\n    const fallbackSlots = [];\n    for (let hour = 0; hour < 24; hour++) {\n      for (let minute = 0; minute < 60; minute += 15) { // Every 15 minutes instead of every minute\n        const time24 = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        const timeAMPM = formatTimeToAMPM(time24);\n        fallbackSlots.push({\n          time_id: fallbackSlots.length + 1,\n          time_slot: timeAMPM\n        });\n      }\n    }\n    console.log('Using fallback time slots:', fallbackSlots.length);\n    setTimeSlots(fallbackSlots);\n  };\n\n  const fetchLastPatient = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/patients/last-enrolled');\n      if (response.ok) {\n        const data = await response.json();\n        setLastPatient(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching last patient:', error);\n    }\n  };\n\n  const [patientData, setPatientData] = useState<any>(null);\n\n  const fetchPatientData = async (patientId: string) => {\n    try {\n      const response = await fetch(`https://varahasdc.co.in/api/reception/patients/${patientId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPatientData(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching patient data:', error);\n    }\n  };\n\n  // Process patient data after scans are loaded\n  useEffect(() => {\n    if (patientData && scans.length > 0) {\n      const patient = patientData;\n      \n      // Auto-select scans and calculate totals\n      const scanIds = patient.scan_type ? patient.scan_type.split(',') : [];\n      const selectedScansData = scans.filter(scan => scanIds.includes(scan.s_id.toString()));\n      setSelectedScans(selectedScansData);\n      \n      // Calculate estimated time from selected scans\n      const totalEstTime = selectedScansData.reduce((sum, scan) => {\n        const timeMatch = scan.estimate_time?.match(/(\\d+)/);\n        return sum + (timeMatch ? parseInt(timeMatch[1]) : 0);\n      }, 0);\n      \n      // Populate form with patient data\n      setFormData({\n        date: patient.date || new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n        hospital_name: patient.hospital_id?.toString() || '',\n        doctor_name: patient.doctor_name?.toString() || '',\n        pre: patient.pre || 'Mr.',\n        firstname: patient.patient_name || '',\n        age: patient.age?.replace(/[^0-9]/g, '') || '',\n        age_type: patient.age?.includes('Year') ? 'Year' : patient.age?.includes('Month') ? 'Month' : 'Days',\n        gender: patient.gender || 'Male',\n        petient_type: patient.petient_type || 'GEN / Paid',\n        p_uni_submit: patient.p_uni_submit || 'N',\n        p_uni_id_name: patient.p_uni_id_name || '',\n        address: patient.address || '',\n        city: patient.city || '',\n        contact_number: patient.contact_number || '',\n        type_of_scan: scanIds,\n        appoint_date: patient.appoint_date ? (patient.appoint_date.includes('-') ? patient.appoint_date.split('-').reverse().join('-') : patient.appoint_date) : new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n        time: patient.time || '',\n        time_in: patient.time_in || '',\n        amount: patient.amount?.toString() || '0',\n        est_time: totalEstTime.toString(),\n        total_amount: patient.total_amount?.toString() || '0',\n        rec_amount: patient.rec_amount?.toString() || '0',\n        dis_amount: patient.dis_amount?.toString() || '0',\n        due_amount: patient.due_amount?.toString() || '0'\n      });\n      \n      // Set search terms for dropdowns\n      if (patient.h_name) setHospitalSearchTerm(patient.h_name);\n      if (patient.dname) setDoctorSearchTerm(patient.dname);\n      \n      // Set time search terms if available\n      setTimeout(() => {\n        // Handle time binding - check if it's a time slot ID or direct time value\n        if (patient.time && timeSlots.length > 0) {\n          const timeSlot = timeSlots.find(slot => slot.time_id.toString() === patient.time.toString());\n          if (timeSlot) {\n            setTimeInSearchTerm(timeSlot.time_slot);\n            setFormData(prev => ({ ...prev, time: timeSlot.time_slot }));\n          } else if (typeof patient.time === 'string' && patient.time.includes(':')) {\n            setTimeInSearchTerm(formatTimeToAMPM(patient.time));\n          }\n        }\n        \n        if (patient.time_in && timeSlots.length > 0) {\n          const timeSlot = timeSlots.find(slot => slot.time_id.toString() === patient.time_in.toString());\n          if (timeSlot) {\n            setTimeOutSearchTerm(timeSlot.time_slot);\n            setFormData(prev => ({ ...prev, time_in: timeSlot.time_slot }));\n          } else if (typeof patient.time_in === 'string' && patient.time_in.includes(':')) {\n            setTimeOutSearchTerm(formatTimeToAMPM(patient.time_in));\n          }\n        }\n        \n        // Auto-calculate time out if time in exists and estimated time is available\n        if (patient.time && totalEstTime > 0 && patient.time.includes(':')) {\n          calculateTimeOut(patient.time, totalEstTime);\n        }\n      }, 500);\n    }\n  }, [patientData, scans, timeSlots]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n    \n    // Handle category change for ID requirement\n    if (name === 'petient_type') {\n      const freeCategories = ['IPD FREE', 'OPD FREE', 'RTA', 'RGHS', 'Chiranjeevi', 'Destitute', 'PRISONER', 'Sn. CITIZEN', 'Aayushmaan'];\n      setShowUniId(freeCategories.includes(value));\n    }\n  };\n\n  // Convert 24-hour time to 12-hour AM/PM format\n  const formatTimeToAMPM = (time24: string) => {\n    const [hours, minutes] = time24.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const hours12 = hours % 12 || 12;\n    return `${hours12.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n\n  // Filter time slots based on appointment date and current time\n  const getFilteredTimeSlots = () => {\n    const now = new Date();\n    \n    // Parse appointment date properly - handle both YYYY-MM-DD and DD-MM-YYYY formats\n    let selectedDate;\n    if (formData.appoint_date.includes('-')) {\n      // YYYY-MM-DD format\n      selectedDate = new Date(formData.appoint_date);\n    } else {\n      // DD/MM/YYYY format - convert to proper date\n      const parts = formData.appoint_date.split('/');\n      if (parts.length === 3) {\n        selectedDate = new Date(parseInt(parts[2]), parseInt(parts[1]) - 1, parseInt(parts[0]));\n      } else {\n        selectedDate = new Date(formData.appoint_date);\n      }\n    }\n    \n    const isToday = selectedDate.toDateString() === now.toDateString();\n    \n    if (!isToday) {\n      // For future dates, return all time slots\n      return timeSlots;\n    }\n    \n    // For today, show slots from current time + 5 minutes onwards\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute + 5; // Add 5 minute buffer\n    \n    const filtered = timeSlots.filter(slot => {\n      // Extract time from slot.time_slot (format: \"HH:MM AM/PM\")\n      const timeMatch = slot.time_slot.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n      if (!timeMatch) return false;\n      \n      let hour = parseInt(timeMatch[1]);\n      const minute = parseInt(timeMatch[2]);\n      const period = timeMatch[3].toUpperCase();\n      \n      // Convert to 24-hour format\n      if (period === 'PM' && hour !== 12) {\n        hour += 12;\n      } else if (period === 'AM' && hour === 12) {\n        hour = 0;\n      }\n      \n      const slotTimeInMinutes = hour * 60 + minute;\n      \n      // Show slots that are from current time + buffer onwards\n      return slotTimeInMinutes >= currentTimeInMinutes;\n    });\n    \n    console.log('Filtered time slots:', {\n      currentTime: `${currentHour}:${currentMinute}`,\n      totalSlots: timeSlots.length,\n      filteredSlots: filtered.length,\n      isToday\n    });\n    \n    return filtered;\n  };\n\n  const calculateTimeOut = (timeIn: string, estimatedMinutes: number) => {\n    if (!timeIn || !estimatedMinutes) return;\n    \n    let hours, minutes;\n    \n    // Handle both 24-hour (HH:MM) and 12-hour (HH:MM AM/PM) formats\n    if (timeIn.includes('AM') || timeIn.includes('PM')) {\n      const timeMatch = timeIn.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n      if (!timeMatch) return;\n      \n      hours = parseInt(timeMatch[1]);\n      minutes = parseInt(timeMatch[2]);\n      const period = timeMatch[3].toUpperCase();\n      \n      // Convert to 24-hour format\n      if (period === 'PM' && hours !== 12) {\n        hours += 12;\n      } else if (period === 'AM' && hours === 12) {\n        hours = 0;\n      }\n    } else {\n      // Already in 24-hour format\n      [hours, minutes] = timeIn.split(':').map(Number);\n    }\n    \n    const timeInDate = new Date();\n    timeInDate.setHours(hours, minutes, 0, 0);\n    \n    // Add estimated minutes\n    const timeOutDate = new Date(timeInDate.getTime() + estimatedMinutes * 60000);\n    \n    // Format back to 24-hour format\n    const timeOut = `${timeOutDate.getHours().toString().padStart(2, '0')}:${timeOutDate.getMinutes().toString().padStart(2, '0')}`;\n    \n    // Set calculated time out\n    setFormData(prev => ({ ...prev, time_in: timeOut }));\n    setTimeOutSearchTerm(formatTimeToAMPM(timeOut));\n  };\n\n  // Convert 12-hour format to 24-hour format\n  const convertTo24Hour = (time12: string) => {\n    const timeMatch = time12.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n    if (!timeMatch) return time12;\n    \n    let hour = parseInt(timeMatch[1]);\n    const minute = parseInt(timeMatch[2]);\n    const period = timeMatch[3].toUpperCase();\n    \n    if (period === 'PM' && hour !== 12) {\n      hour += 12;\n    } else if (period === 'AM' && hour === 12) {\n      hour = 0;\n    }\n    \n    return `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n  };\n\n  // Get current time when appointment date changes\n  const getCurrentTime = () => {\n    const now = new Date();\n    return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\n  };\n\n  // Auto-select current time for today's appointment\n  const autoSelectCurrentTime = () => {\n    const today = new Date();\n    const currentHour = today.getHours();\n    const currentMinute = today.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n    \n    // Find the first available time slot that is at or after current time\n    const availableSlot = timeSlots.find(slot => {\n      const timeMatch = slot.time_slot.match(/(\\d{1,2}):(\\d{2})\\s*(AM|PM)/i);\n      if (!timeMatch) return false;\n      \n      let hour = parseInt(timeMatch[1]);\n      const minute = parseInt(timeMatch[2]);\n      const period = timeMatch[3].toUpperCase();\n      \n      if (period === 'PM' && hour !== 12) {\n        hour += 12;\n      } else if (period === 'AM' && hour === 12) {\n        hour = 0;\n      }\n      \n      const slotTimeInMinutes = hour * 60 + minute;\n      return slotTimeInMinutes >= currentTimeInMinutes;\n    });\n    \n    if (availableSlot) {\n      setFormData(prev => ({ ...prev, time: availableSlot.time_id.toString() }));\n      setTimeInSearchTerm(availableSlot.time_slot);\n    }\n  };\n\n  // Handle appointment date change\n  const handleAppointmentDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear time selections when date changes\n    setFormData(prev => ({ ...prev, time: '', time_in: '' }));\n    setTimeInSearchTerm('');\n    setTimeOutSearchTerm('');\n    \n    // If selecting today's date, set current time\n    const selectedDate = new Date(value);\n    const today = new Date();\n    const isToday = selectedDate.toDateString() === today.toDateString();\n    \n    if (isToday) {\n      const currentTime = getCurrentTime();\n      const currentTimeAMPM = formatTimeToAMPM(currentTime);\n      setFormData(prev => ({ ...prev, time: currentTime }));\n      setTimeInSearchTerm(currentTimeAMPM);\n      \n      // Auto-calculate time out if estimated time is available\n      const estimatedTime = parseInt(formData.est_time) || 0;\n      if (estimatedTime > 0) {\n        calculateTimeOut(currentTime, estimatedTime);\n      }\n    }\n  };\n\n  const handleScanChange = (scanId: string, checked: boolean) => {\n    let newSelectedScans = [...formData.type_of_scan];\n    \n    if (checked) {\n      newSelectedScans.push(scanId);\n    } else {\n      newSelectedScans = newSelectedScans.filter(id => id !== scanId);\n    }\n    \n    setFormData(prev => ({ ...prev, type_of_scan: newSelectedScans }));\n    \n    // Calculate totals\n    const selected = scans.filter(scan => newSelectedScans.includes(scan.s_id.toString()));\n    setSelectedScans(selected);\n    \n    let totalAmount = selected.reduce((sum, scan) => sum + scan.charges, 0);\n    const totalTime = selected.reduce((sum, scan) => {\n      const timeMatch = scan.estimate_time?.match(/(\\d+)/);\n      return sum + (timeMatch ? parseInt(timeMatch[1]) : 0);\n    }, 0);\n    \n    // Store scan amount in database regardless of category\n    const scanAmount = totalAmount;\n    \n    setFormData(prev => {\n      let newFormData;\n      \n      if (prev.petient_type === 'GEN / Paid') {\n        // For GEN/Paid: validate amount, received amount required\n        newFormData = {\n          ...prev,\n          amount: scanAmount.toString(),\n          est_time: totalTime.toString(),\n          total_amount: scanAmount.toString(),\n          rec_amount: scanAmount.toString(), // Auto-fill received amount\n          due_amount: '0'\n        };\n      } else {\n        // For other categories: total amount shows scan amount but received can be 0\n        newFormData = {\n          ...prev,\n          amount: scanAmount.toString(),\n          est_time: totalTime.toString(),\n          total_amount: scanAmount.toString(),\n          rec_amount: '0',\n          due_amount: '0'\n        };\n        \n        // Note: Patient belongs to free category - No payment required\n      }\n      \n      return newFormData;\n    });\n    \n    // Auto-select current time if not already selected and appointment is today\n    if (!formData.time && timeSlots.length > 0) {\n      const today = new Date();\n      const appointmentDate = new Date(formData.appoint_date);\n      const isToday = appointmentDate.toDateString() === today.toDateString();\n      \n      if (isToday) {\n        setTimeout(() => autoSelectCurrentTime(), 100);\n      }\n    }\n  };\n\n  const calculatePayment = () => {\n    const total = parseFloat(formData.total_amount) || 0;\n    const received = parseFloat(formData.rec_amount) || 0;\n    const discount = parseFloat(formData.dis_amount) || 0;\n    \n    // PHP logic: due_amount = total_amount - received_amount - discount_amount\n    const due = total - received - discount;\n    \n    setFormData(prev => ({ ...prev, due_amount: due.toString() }));\n  };\n\n  const validatePayment = () => {\n    // Free categories don't need payment validation (exact list from PHP)\n    const freeCategories = ['Destitute', 'Chiranjeevi', 'RGHS', 'RTA', 'OPD FREE', 'IPD FREE', 'BPL/POOR', 'Sn. CITIZEN', 'BHAMASHAH', 'JSSY', 'PRISONER', 'Aayushmaan'];\n    if (freeCategories.includes(formData.petient_type)) {\n      return true;\n    }\n    \n    const total = parseFloat(formData.total_amount) || 0;\n    const received = parseFloat(formData.rec_amount) || 0;\n    \n    // For GEN/Paid category, received amount cannot be 0 if total > 0\n    if (formData.petient_type === 'GEN / Paid' && total > 0 && received === 0) {\n      if (toast && typeof toast.error === 'function') {\n        toast.error('For GEN/Paid category, received amount cannot be 0');\n      }\n      return false;\n    }\n    \n    return true;\n  };\n\n  // Handle category change and update amounts accordingly\n  const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Handle category change for ID requirement\n    const freeCategories = ['IPD FREE', 'OPD FREE', 'RTA', 'RGHS', 'Chiranjeevi', 'Destitute', 'PRISONER', 'Sn. CITIZEN', 'Aayushmaan'];\n    setShowUniId(freeCategories.includes(value));\n    \n    // Recalculate amounts based on category\n    const scanAmount = selectedScans.reduce((sum, scan) => sum + scan.charges, 0);\n    \n    if (value === 'GEN / Paid') {\n      // For GEN/Paid: scan amount should be stored, received amount required, due can be 0\n      setFormData(prev => ({\n        ...prev,\n        total_amount: scanAmount.toString(),\n        amount: scanAmount.toString(),\n        rec_amount: scanAmount.toString(), // Auto-fill received amount\n        due_amount: '0'\n      }));\n    } else {\n      // For other categories: total amount shows scan amount, received accepts 0, due also 0\n      setFormData(prev => ({\n        ...prev,\n        total_amount: scanAmount.toString(),\n        amount: scanAmount.toString(),\n        rec_amount: '0',\n        due_amount: '0'\n      }));\n    }\n  };\n\n  // Check if print should be enabled (PHP logic: due_amount == '0')\n  const isPrintEnabled = () => {\n    const freeCategories = ['Destitute', 'Chiranjeevi', 'RGHS', 'RTA', 'OPD FREE', 'IPD FREE', 'BPL/POOR', 'Sn. CITIZEN', 'BHAMASHAH', 'JSSY', 'PRISONER', 'Aayushmaan'];\n    if (freeCategories.includes(formData.petient_type)) {\n      return true; // Always enabled for free categories\n    }\n    // PHP uses string comparison: due_amount == '0'\n    const dueAmount = parseFloat(formData.due_amount) || 0;\n    return dueAmount === 0;\n  };\n\n  const validateStep = (step: number) => {\n    const newErrors: {[key: string]: string} = {};\n    \n    if (step === 1) {\n      if (!formData.hospital_name) {\n        newErrors.hospital_name = 'Hospital Name is required';\n        toast.error('Please select Hospital Name');\n      }\n      if (!formData.doctor_name) {\n        newErrors.doctor_name = 'Doctor Name is required';\n        toast.error('Please select Doctor Name');\n      }\n      if (!formData.firstname.trim()) {\n        newErrors.firstname = 'Patient Name is required';\n        toast.error('Please enter Patient Name');\n      }\n      if (!formData.age.trim()) {\n        newErrors.age = 'Age is required';\n        toast.error('Please enter Age');\n      }\n      if (formData.contact_number && !/^[0-9]{10}$/.test(formData.contact_number)) {\n        newErrors.contact_number = 'Contact Number must be 10 digits';\n        toast.error('Contact Number must be 10 digits');\n      }\n    }\n    \n    if (step === 2) {\n      if (formData.type_of_scan.length === 0) {\n        newErrors.type_of_scan = 'At least one scan type is required';\n        toast.error('Please select at least one scan type');\n      }\n      if (!formData.time) {\n        newErrors.time = 'Time In is required';\n        toast.error('Please select Time In');\n      }\n      if (!formData.time_in) {\n        newErrors.time_in = 'Time Out is required';\n        toast.error('Please select Time Out');\n      }\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const nextStep = () => {\n    if (validateStep(currentStep)) {\n      if (currentStep < 3) {\n        setCurrentStep(currentStep + 1);\n      }\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleSubmit = async (action: string) => {\n    if (action === 'Print') {\n      // Print action - just print using saved data, no API call\n      if (savedPatientData) {\n        printReceipt(savedPatientData);\n        if (toast && typeof toast.info === 'function') {\n          toast.info('Receipt printed successfully!');\n        }\n        setTimeout(() => {\n          window.location.href = '/reception/patient-registration';\n        }, 2000);\n      }\n      return;\n    }\n\n    try {\n      // Prepare data in the format expected by the API\n      const submitData = {\n        hospital_name: formData.hospital_name,\n        DoctorName: formData.doctor_name,\n        pre: formData.pre,\n        firstname: formData.firstname,\n        age: formData.age,\n        age_type: formData.age_type,\n        gender: formData.gender,\n        petient_type: formData.petient_type,\n        p_uni_submit: formData.p_uni_submit || 'N',\n        p_uni_id_name: formData.p_uni_id_name || '',\n        address: formData.address,\n        city: formData.city,\n        contact_number: formData.contact_number,\n        type_of_scan: formData.type_of_scan,\n        appoint_date: formData.appoint_date,\n        time: formData.time,\n        time_in: formData.time_in,\n        amount: formData.amount,\n        total_amount: formData.total_amount,\n        dis_amount: formData.dis_amount,\n        rec_amount: formData.rec_amount,\n        due_amount: formData.due_amount,\n        admin_id: 1,\n        action: action\n      };\n\n      let response;\n      if (isEditMode && editPatientId) {\n        response = await fetch(`https://varahasdc.co.in/api/reception/patients/${editPatientId}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(submitData)\n        });\n      } else {\n        response = await fetch('https://varahasdc.co.in/api/reception/patients', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(submitData)\n        });\n      }\n      \n      if (response.ok) {\n        const result = await response.json();\n        const cro = result.data?.cro || (isEditMode ? 'Updated' : 'Registered');\n        \n        // Save action - enable print button\n        setIsSaved(true);\n        setSavedPatientData(result.data);\n        if (toast && typeof toast.success === 'function') {\n          toast.success(`Patient ${isEditMode ? 'updated' : 'registered'} successfully! CRO: ${cro}`);\n        }\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        if (toast && typeof toast.error === 'function') {\n          toast.error(`Error: ${errorData.error || (isEditMode ? 'Failed to update patient' : 'Failed to register patient')}`);\n        }\n      }\n    } catch (error) {\n      console.error('Error saving patient:', error);\n      if (toast && typeof toast.error === 'function') {\n        toast.error(isEditMode ? 'Error updating patient' : 'Error saving patient');\n      }\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n      hospital_name: '',\n      doctor_name: '',\n      pre: 'Mr.',\n      firstname: '',\n      age: '',\n      age_type: 'Year',\n      gender: 'Male',\n      petient_type: 'GEN / Paid',\n      p_uni_submit: 'N',\n      p_uni_id_name: '',\n      address: '',\n      city: '',\n      contact_number: '',\n      type_of_scan: [],\n      appoint_date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n      time: '',\n      time_in: '',\n      amount: '0',\n      est_time: '0',\n      total_amount: '0',\n      rec_amount: '0',\n      dis_amount: '0',\n      due_amount: '0'\n    });\n    \n    // Reset search terms\n    setHospitalSearchTerm('');\n    setDoctorSearchTerm('');\n    setTimeInSearchTerm('');\n    setTimeOutSearchTerm('');\n    setScanSearchTerm('');\n    setSelectedScans([]);\n    \n    // Go back to first step\n    setCurrentStep(1);\n    \n    // Refresh last patient data\n    fetchLastPatient();\n  };\n\n  // Convert number to words function\n  const numberToWords = (num: number): string => {\n    const ones = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n    const teens = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n    const tens = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n    \n    if (num === 0) return 'zero';\n    if (num < 10) return ones[num];\n    if (num < 20) return teens[num - 10];\n    if (num < 100) return tens[Math.floor(num / 10)] + (num % 10 ? ' ' + ones[num % 10] : '');\n    if (num < 1000) return ones[Math.floor(num / 100)] + ' hundred' + (num % 100 ? ' ' + numberToWords(num % 100) : '');\n    if (num < 100000) return numberToWords(Math.floor(num / 1000)) + ' thousand' + (num % 1000 ? ' ' + numberToWords(num % 1000) : '');\n    \n    return num.toString();\n  };\n\n  const printReceipt = (patientData: any) => {\n    const currentDate = new Date().toLocaleDateString('en-GB');\n    const investigations = selectedScans.map(scan => scan.s_name).join(', ');\n    const amountInWords = numberToWords(parseInt(formData.rec_amount || formData.total_amount)).toUpperCase();\n    \n    const printContent = `\n<!DOCTYPE html>\n<html>\n<head>\n<title>Receipt - ${patientData.cro || 'New Patient'}</title>\n<style>\n.admission_form { text-align: center; color: #000000; font-size: 10px; width: 100%; }\n.admission_form table { width: 98%; font-size: 10px; margin: -5px 8px; }\n.admission_form .form_input { padding: 2px 1%; font-size: 10px; border: none; font-weight: bold; font-style: italic; width: 99%; border-bottom: 1px dotted #000000; }\n.admission_form .form_input_box { border-bottom: 0px dotted #000000; padding: 0px 0px 2px 0px; width: 100%; display: inline-block; }\n@media print { .no_print, .no_print * { display: none !important; } .admission_div_desc { border: 0px !important; } .page_break { page-break-after: always; } }\n</style>\n</head>\n<body bgcolor=\"#FFFFFF\" leftmargin=\"0\" topmargin=\"0\" marginwidth=\"0\" marginheight=\"0\" onload=\"window.print(); setTimeout(() => window.close(), 1000);\">\n<div class=\"admission_form\" align=\"center\" style=\"border:solid thin; margin-top:18px;width:93.0%;margin-left:30px;\">\n  <table align=\"center\" style=\"margin-top:2px;\">\n    <tr><td colspan=\"6\"><b>Dr. S.N. MEDICAL COLLEGE AND ATTACHED GROUP OF HOSPITAL, JODHPUR</b></td></tr>\n    <tr><td colspan=\"6\"><b>Rajasthan Medical Relief Society, M.D.M. Hospital, Jodhpur</b></td></tr>\n    <tr><td colspan=\"6\"><b>IMAGING CENTRE UNDER P.P.P.MODE : VARAHA SDC</b></td></tr>\n    <tr><td colspan=\"6\"><b>256 SLICE DUAL ENERGY CT SCAN, M.D.M HOSPITAL Jodhpur(Raj.) - 342003</b></td></tr>\n    <tr><td colspan=\"6\"><b>Tel. : +91-291-2648120 , 0291-2648121 , 0291-2648122</b></td></tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"55\">Reg.No :</td>\n      <td width=\"200\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${patientData.cro || ''}(${patientData.patient_id || ''})\"></span></td>\n      <td colspan=\"6\"><span style=\"margin-left:30%; border: 1px solid #02C; border-radius: 11px;padding: 3px 15px;\">Cash Receipt</span></td>\n      <td width=\"36\">Date</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${currentDate}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"56\">Ref. By :</td>\n      <td width=\"482\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${doctorSearchTerm || ''}\"></span></td>\n      <td width=\"174\">Date and Time of Appointment :</td>\n      <td width=\"316\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.appoint_date.split('-').reverse().join('-')} ${timeInSearchTerm || ''}-${timeOutSearchTerm || ''}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"78\">Patient Name:</td>\n      <td width=\"650\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.pre} ${formData.firstname}\"></span></td>\n      <td width=\"33\">Age :</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.age}\"></span></td>\n      <td width=\"36\">Gender</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.gender}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"40\">Address</td>\n      <td width=\"687\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.address || ''}\"></span></td>\n      <td width=\"687\"><span class=\"form_input_box\"><label>Category</label><input type=\"text\" class=\"form_input\" value=\"${formData.petient_type}\"></span></td>\n      <td width=\"33\">Phone:</td>\n      <td width=\"333\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.contact_number || ''}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"59\">Investigations:</td>\n      <td width=\"1042\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${investigations}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"129\">For Sum Of Rupees:</td>\n      <td width=\"733\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${amountInWords} RUPEES ONLY\"></span></td>\n      <td width=\"147\"><label>Scan Amount</label><input type=\"text\" value=\"₹ ${formData.total_amount}\" style=\"border:1px solid #5E60AE;\"></td>\n      <td width=\"147\"><label>Received Amount</label><input type=\"text\" value=\"₹ ${formData.rec_amount}\" style=\"border:1px solid #5E60AE;\"></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td colspan=\"6\" align=\"right\" style=\"padding-top: 20px;\">For Varaha SDC, Jodhpur</td>\n    </tr>\n    <tr>\n      <td colspan=\"6\" align=\"right\" style=\"padding-top: 30px;\">Signature</td>\n    </tr>\n  </table>\n  \n  <table style=\"margin-top: 10px;\">\n    <tr>\n      <td colspan=\"6\" style=\"font-size: 8px; text-align: center;\">This is a computer generated receipt</td>\n    </tr>\n  </table>\n</div>\n\n<div style=\"page-break-before: always;\"></div>\n\n<div class=\"admission_form\" align=\"center\" style=\"border:solid thin; margin-top:18px;width:93.0%;margin-left:30px;\">\n  <table align=\"center\" style=\"margin-top:2px;\">\n    <tr><td colspan=\"6\"><b>Dr. S.N. MEDICAL COLLEGE AND ATTACHED GROUP OF HOSPITAL, JODHPUR</b></td></tr>\n    <tr><td colspan=\"6\"><b>Rajasthan Medical Relief Society, M.D.M. Hospital, Jodhpur</b></td></tr>\n    <tr><td colspan=\"6\"><b>IMAGING CENTRE UNDER P.P.P.MODE : VARAHA SDC</b></td></tr>\n    <tr><td colspan=\"6\"><b>256 SLICE DUAL ENERGY CT SCAN, M.D.M HOSPITAL Jodhpur(Raj.) - 342003</b></td></tr>\n    <tr><td colspan=\"6\"><b>Tel. : +91-291-2648120 , 0291-2648121 , 0291-2648122</b></td></tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"55\">Reg.No :</td>\n      <td width=\"200\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${patientData.cro || ''}(${patientData.patient_id || ''})\"></span></td>\n      <td colspan=\"6\"><span style=\"margin-left:30%; border: 1px solid #02C; border-radius: 11px;padding: 3px 15px;\">Cash Receipt</span></td>\n      <td width=\"36\">Date</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${currentDate}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"56\">Ref. By :</td>\n      <td width=\"482\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${doctorSearchTerm || ''}\"></span></td>\n      <td width=\"174\">Date and Time of Appointment :</td>\n      <td width=\"316\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.appoint_date.split('-').reverse().join('-')} ${timeInSearchTerm || ''}-${timeOutSearchTerm || ''}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"78\">Patient Name:</td>\n      <td width=\"650\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.pre} ${formData.firstname}\"></span></td>\n      <td width=\"33\">Age :</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.age}\"></span></td>\n      <td width=\"36\">Gender</td>\n      <td width=\"144\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.gender}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"40\">Address</td>\n      <td width=\"687\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.address || ''}\"></span></td>\n      <td width=\"687\"><span class=\"form_input_box\"><label>Category</label><input type=\"text\" class=\"form_input\" value=\"${formData.petient_type}\"></span></td>\n      <td width=\"33\">Phone:</td>\n      <td width=\"333\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${formData.contact_number || ''}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"59\">Investigations:</td>\n      <td width=\"1042\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${investigations}\"></span></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td width=\"129\">For Sum Of Rupees:</td>\n      <td width=\"733\"><span class=\"form_input_box\"><input type=\"text\" class=\"form_input\" value=\"${amountInWords} RUPEES ONLY\"></span></td>\n      <td width=\"147\"><label>Scan Amount</label><input type=\"text\" value=\"₹ ${formData.total_amount}\" style=\"border:1px solid #5E60AE;\"></td>\n      <td width=\"147\"><label>Received Amount</label><input type=\"text\" value=\"₹ ${formData.rec_amount}\" style=\"border:1px solid #5E60AE;\"></td>\n    </tr>\n  </table>\n  \n  <table>\n    <tr>\n      <td colspan=\"6\" align=\"right\" style=\"padding-top: 20px;\">For Varaha SDC, Jodhpur</td>\n    </tr>\n    <tr>\n      <td colspan=\"6\" align=\"right\" style=\"padding-top: 30px;\">Signature</td>\n    </tr>\n  </table>\n  \n  <table style=\"margin-top: 10px;\">\n    <tr>\n      <td colspan=\"6\" style=\"font-size: 8px; text-align: center;\">This is a computer generated receipt</td>\n    </tr>\n  </table>\n</div>\n</body>\n</html>`;\n    \n    const printWindow = window.open('', '_blank');\n    if (printWindow) {\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n    }\n  };\n\n  return (\n    <div className=\"p-3 sm:p-6 space-y-4 sm:space-y-6 min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      <div className=\"bg-gradient-to-r from-sky-500 to-sky-600 text-white p-4 sm:p-6 rounded-xl shadow-2xl\">\n        <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-start space-y-4 sm:space-y-0\">\n          <div>\n            <h1 className=\"text-xl sm:text-3xl font-bold mb-2\">{isEditMode ? 'Edit Patient Registration' : 'New Patient Registration'}</h1>\n            <p className=\"text-sky-100 text-sm sm:text-lg\">{isEditMode ? 'Update patient information and scan details' : 'Complete patient enrollment and scan booking'}</p>\n          </div>\n          {lastPatient && !isEditMode && (\n            <div className=\"bg-sky-600 bg-opacity-50 rounded-lg px-4 py-2 min-w-0 flex-shrink-0\">\n              <p className=\"text-sky-200 text-xs mb-1\">Last Enrolled Patient</p>\n              <p className=\"text-white font-medium text-sm truncate\">{lastPatient.cro} - {lastPatient.patient_name}</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-xl shadow-2xl border border-gray-100\">\n        {/* Step Navigation */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"flex flex-col sm:flex-row\">\n            <button\n              className={`flex-1 py-3 sm:py-4 px-3 sm:px-6 text-center border-b-2 font-medium text-xs sm:text-sm ${\n                currentStep === 1 \n                  ? 'border-sky-500 text-sky-600 bg-sky-50' \n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setCurrentStep(1)}\n            >\n              <span className=\"sm:hidden\">1. Enrollment</span>\n              <span className=\"hidden sm:inline\">1. Enrollment Detail</span>\n            </button>\n            <button\n              className={`flex-1 py-3 sm:py-4 px-3 sm:px-6 text-center border-b-2 font-medium text-xs sm:text-sm ${\n                currentStep === 2 \n                  ? 'border-sky-500 text-sky-600 bg-sky-50' \n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setCurrentStep(2)}\n            >\n              <span className=\"sm:hidden\">2. Scans</span>\n              <span className=\"hidden sm:inline\">2. Scan Options</span>\n            </button>\n            <button\n              className={`flex-1 py-3 sm:py-4 px-3 sm:px-6 text-center border-b-2 font-medium text-xs sm:text-sm ${\n                currentStep === 3 \n                  ? 'border-sky-500 text-sky-600 bg-sky-50' \n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setCurrentStep(3)}\n            >\n              <span className=\"sm:hidden\">3. Payment</span>\n              <span className=\"hidden sm:inline\">3. Payment Details</span>\n            </button>\n          </nav>\n        </div>\n\n        <form className=\"p-3 sm:p-6\">\n          {/* Step 1: Enrollment Details */}\n          {currentStep === 1 && (\n            <div className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n                  <input\n                    type=\"text\"\n                    name=\"date\"\n                    value={formData.date.split('-').reverse().join('-')}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                </div>\n                <div className=\"relative\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hospital Name <span className=\"text-red-500\">*</span></label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      value={hospitalSearchTerm}\n                      onChange={(e) => {\n                        setHospitalSearchTerm(e.target.value);\n                        setShowHospitalDropdown(true);\n                      }}\n                      onFocus={() => setShowHospitalDropdown(true)}\n                      className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                        errors.hospital_name ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                      }`}\n                      placeholder=\"Search and select hospital\"\n                      required\n                    />\n                    <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                  </div>\n                  {showHospitalDropdown && (\n                    <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                      {hospitals\n                        .filter(hospital => \n                          hospital.h_name.toLowerCase().includes(hospitalSearchTerm.toLowerCase())\n                        )\n                        .map(hospital => (\n                          <div\n                            key={hospital.h_id}\n                            className=\"px-3 py-2 hover:bg-blue-50 cursor-pointer\"\n                            onClick={() => {\n                              setFormData(prev => ({ ...prev, hospital_name: hospital.h_id.toString() }));\n                              setHospitalSearchTerm(hospital.h_name);\n                              setShowHospitalDropdown(false);\n                              if (errors.hospital_name) {\n                                setErrors(prev => ({ ...prev, hospital_name: '' }));\n                              }\n                            }}\n                          >\n                            {hospital.h_name}\n                          </div>\n                        ))\n                      }\n                      {hospitals.filter(hospital => \n                        hospital.h_name.toLowerCase().includes(hospitalSearchTerm.toLowerCase())\n                      ).length === 0 && (\n                        <div className=\"px-3 py-2 text-gray-500\">No hospitals found</div>\n                      )}\n                    </div>\n                  )}\n                  {errors.hospital_name && <p className=\"text-red-500 text-sm mt-1\">{errors.hospital_name}</p>}\n                </div>\n                <div className=\"relative\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Doctor Name <span className=\"text-red-500\">*</span></label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      value={doctorSearchTerm}\n                      onChange={(e) => {\n                        setDoctorSearchTerm(e.target.value);\n                        setShowDoctorDropdown(true);\n                      }}\n                      onFocus={() => setShowDoctorDropdown(true)}\n                      className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                        errors.doctor_name ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                      }`}\n                      placeholder=\"Search and select doctor\"\n                      required\n                    />\n                    <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                  </div>\n                  {showDoctorDropdown && (\n                    <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                      {doctors\n                        .filter(doctor => \n                          doctor.dname.toLowerCase().includes(doctorSearchTerm.toLowerCase())\n                        )\n                        .map(doctor => (\n                          <div\n                            key={doctor.d_id}\n                            className=\"px-3 py-2 hover:bg-blue-50 cursor-pointer\"\n                            onClick={() => {\n                              setFormData(prev => ({ ...prev, doctor_name: doctor.d_id.toString() }));\n                              setDoctorSearchTerm(doctor.dname);\n                              setShowDoctorDropdown(false);\n                              if (errors.doctor_name) {\n                                setErrors(prev => ({ ...prev, doctor_name: '' }));\n                              }\n                            }}\n                          >\n                            {doctor.dname}\n                          </div>\n                        ))\n                      }\n                      {doctors.filter(doctor => \n                        doctor.dname.toLowerCase().includes(doctorSearchTerm.toLowerCase())\n                      ).length === 0 && (\n                        <div className=\"px-3 py-2 text-gray-500\">No doctors found</div>\n                      )}\n                    </div>\n                  )}\n                  {errors.doctor_name && <p className=\"text-red-500 text-sm mt-1\">{errors.doctor_name}</p>}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Patient Name <span className=\"text-red-500\">*</span></label>\n                  <select\n                    name=\"pre\"\n                    value={formData.pre}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"Mr.\">Mr.</option>\n                    <option value=\"Mrs.\">Mrs.</option>\n                    <option value=\"Master\">Master</option>\n                    <option value=\"Miss\">Miss</option>\n                    <option value=\"Baby\">Baby</option>\n                  </select>\n                </div>\n                <div className=\"md:col-span-3\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">&nbsp;</label>\n                  <input\n                    type=\"text\"\n                    name=\"firstname\"\n                    value={formData.firstname}\n                    onChange={handleInputChange}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      errors.firstname ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Please enter your First name\"\n                    required\n                  />\n                  {errors.firstname && <p className=\"text-red-500 text-sm mt-1\">{errors.firstname}</p>}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age <span className=\"text-red-500\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"age\"\n                    value={formData.age}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      if (/^\\d*$/.test(value) && (value === '' || (parseInt(value) >= 0 && parseInt(value) <= 100))) {\n                        handleInputChange(e);\n                      }\n                    }}\n                    onKeyPress={(e) => {\n                      if (!/[0-9]/.test(e.key) && e.key !== 'Backspace' && e.key !== 'Delete') {\n                        e.preventDefault();\n                      }\n                    }}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      errors.age ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Age (0-100)\"\n                    maxLength={3}\n                  />\n                  {errors.age && <p className=\"text-red-500 text-sm mt-1\">{errors.age}</p>}\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">In (Year/Month/Days)</label>\n                  <select\n                    name=\"age_type\"\n                    value={formData.age_type}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"Year\">Year</option>\n                    <option value=\"Month\">Month</option>\n                    <option value=\"Days\">Days</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label>\n                  <select\n                    name=\"gender\"\n                    value={formData.gender}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\n                  <select\n                    name=\"petient_type\"\n                    value={formData.petient_type}\n                    onChange={handleCategoryChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"GEN / Paid\">GEN / Paid</option>\n                    <option value=\"IPD FREE\">IPD Free</option>\n                    <option value=\"OPD FREE\">OPD Free</option>\n                    <option value=\"RTA\">RTA</option>\n                    <option value=\"RGHS\">RGHS</option>\n                    <option value=\"Chiranjeevi\">Chiranjeevi</option>\n                    <option value=\"Destitute\">Destitute</option>\n                    <option value=\"PRISONER\">PRISONER</option>\n                    <option value=\"Sn. CITIZEN\">Sn. CITIZEN</option>\n                    <option value=\"Aayushmaan\">Aayushmaan</option>\n                  </select>\n                </div>\n              </div>\n\n              {showUniId && (\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">ID</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_uni_submit\"\n                      value={formData.p_uni_submit}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Y / N\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name Of ID</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_uni_id_name\"\n                      value={formData.p_uni_id_name}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"ID Name\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Upload ID</label>\n                    <input\n                      type=\"file\"\n                      name=\"p_uni_id_scan\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Address</label>\n                <input\n                  type=\"text\"\n                  name=\"address\"\n                  value={formData.address}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Please enter your Address\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\n                  <input\n                    type=\"text\"\n                    name=\"city\"\n                    value={formData.city}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Please enter your city\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contact Number</label>\n                  <input\n                    type=\"text\"\n                    name=\"contact_number\"\n                    value={formData.contact_number}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      if (/^\\d*$/.test(value) && value.length <= 10) {\n                        handleInputChange(e);\n                      }\n                    }}\n                    onKeyPress={(e) => {\n                      if (!/[0-9]/.test(e.key) && e.key !== 'Backspace' && e.key !== 'Delete') {\n                        e.preventDefault();\n                      }\n                    }}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      errors.contact_number ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"10-digit mobile number\"\n                    maxLength={10}\n                  />\n                  {errors.contact_number && <p className=\"text-red-500 text-sm mt-1\">{errors.contact_number}</p>}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Step 2: Scan Options */}\n          {currentStep === 2 && (\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Scan Type <span className=\"text-red-500\">*</span></label>\n                <div className=\"mb-4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search scans...\"\n                    value={scanSearchTerm}\n                    onChange={(e) => setScanSearchTerm(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mb-3\"\n                  />\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 max-h-60 overflow-y-auto border border-gray-200 rounded-md p-4\">\n                  {scans.filter(scan => \n                    scan.s_name.toLowerCase().includes(scanSearchTerm.toLowerCase())\n                  ).map(scan => (\n                    <label key={scan.s_id} className=\"flex items-center space-x-2 p-2 hover:bg-gray-50 rounded cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={formData.type_of_scan.includes(scan.s_id.toString())}\n                        onChange={(e) => handleScanChange(scan.s_id.toString(), e.target.checked)}\n                        className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <div className=\"flex-1\">\n                        <span className=\"text-sm font-medium\">{scan.s_name}</span>\n                        <div className=\"text-xs text-gray-500\">₹{scan.charges} • {scan.estimate_time} min</div>\n                      </div>\n                    </label>\n                  ))}\n                  {scans.filter(scan => \n                    scan.s_name.toLowerCase().includes(scanSearchTerm.toLowerCase())\n                  ).length === 0 && (\n                    <div className=\"col-span-full text-center text-gray-500 py-4\">No scans found</div>\n                  )}\n                </div>\n                {errors.type_of_scan && <p className=\"text-red-500 text-sm mt-1\">{errors.type_of_scan}</p>}\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Appoint Date</label>\n                  <input\n                    type=\"date\"\n                    name=\"appoint_date\"\n                    value={formData.appoint_date}\n                    onChange={handleAppointmentDateChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Time In <span className=\"text-red-500\">*</span></label>\n                  <input\n                    type=\"text\"\n                    value={timeInSearchTerm}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                  {errors.time && <p className=\"text-red-500 text-sm mt-1\">{errors.time}</p>}\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Time Out <span className=\"text-red-500\">*</span></label>\n                  <input\n                    type=\"text\"\n                    value={timeOutSearchTerm}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                  {errors.time_in && <p className=\"text-red-500 text-sm mt-1\">{errors.time_in}</p>}\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"amount\"\n                    value={formData.amount}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Estimated Time</label>\n                  <input\n                    type=\"text\"\n                    name=\"est_time\"\n                    value={formData.est_time}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                </div>\n              </div>\n\n              {selectedScans.length > 0 && (\n                <div className=\"mt-6\">\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Selected Scans</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse border border-gray-300\">\n                      <thead>\n                        <tr className=\"bg-gray-50\">\n                          <th className=\"border border-gray-300 px-4 py-2 text-left\">S.No</th>\n                          <th className=\"border border-gray-300 px-4 py-2 text-left\">Name Of Scan</th>\n                          <th className=\"border border-gray-300 px-4 py-2 text-left\">Charges</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {selectedScans.map((scan, index) => (\n                          <tr key={scan.s_id}>\n                            <td className=\"border border-gray-300 px-4 py-2\">{index + 1}</td>\n                            <td className=\"border border-gray-300 px-4 py-2\">{scan.s_name}</td>\n                            <td className=\"border border-gray-300 px-4 py-2\">₹{scan.charges}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Step 3: Payment Details */}\n          {currentStep === 3 && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm\">\n                <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 px-4 py-3 border-b border-gray-200\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 flex items-center\">\n                    <User className=\"h-5 w-5 mr-2 text-blue-600\" />\n                    Patient Summary\n                  </h3>\n                </div>\n                <div className=\"p-4\">\n                  <div className=\"space-y-3\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Patient Name</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.pre} {formData.firstname}</div>\n                      </div>\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Age & Gender</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.age} {formData.age_type}, {formData.gender}</div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Category</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.petient_type}</div>\n                      </div>\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Appointment Date</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.appoint_date.split('-').reverse().join('-')}</div>\n                      </div>\n                    </div>\n                    \n                    {(formData.contact_number || formData.address) && (\n                      <div className=\"grid grid-cols-1 gap-4\">\n                        {formData.contact_number && (\n                          <div className=\"bg-gray-50 p-3 rounded-md\">\n                            <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Contact Number</div>\n                            <div className=\"text-sm font-semibold text-gray-900\">{formData.contact_number}</div>\n                          </div>\n                        )}\n                        {formData.address && (\n                          <div className=\"bg-gray-50 p-3 rounded-md\">\n                            <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Address</div>\n                            <div className=\"text-sm font-semibold text-gray-900\">{formData.address}</div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                    \n                    {formData.time && formData.time_in && (\n                      <div className=\"bg-blue-50 p-3 rounded-md border border-blue-200\">\n                        <div className=\"text-xs text-blue-600 uppercase tracking-wide mb-1\">Time Slot</div>\n                        <div className=\"text-sm font-semibold text-blue-900\">\n                          {formatTimeToAMPM(formData.time)} - {formatTimeToAMPM(formData.time_in)}\n                          <span className=\"ml-2 text-xs text-blue-600\">({formData.est_time} min estimated)</span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white border border-gray-300 rounded-lg overflow-hidden\">\n                <div className=\"bg-gray-100 px-4 py-3 border-b border-gray-300\">\n                  <h4 className=\"font-semibold text-gray-800\">Payment Details</h4>\n                </div>\n                \n                <div className=\"p-4 space-y-4\">\n                  {/* Scan Details */}\n                  {selectedScans.length > 0 && (\n                    <div className=\"border border-gray-200 rounded\">\n                      <div className=\"bg-gray-50 px-3 py-2 border-b border-gray-200\">\n                        <span className=\"font-medium text-sm\">Selected Scans</span>\n                      </div>\n                      {selectedScans.map((scan, index) => (\n                        <div key={scan.s_id} className=\"px-3 py-2 border-b border-gray-100 last:border-b-0 flex justify-between\">\n                          <span className=\"text-sm\">{index + 1}. {scan.s_name}</span>\n                          <span className=\"text-sm font-medium\">₹{scan.charges}</span>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {/* Payment Calculation */}\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Total Amount</label>\n                      <input\n                        type=\"text\"\n                        name=\"total_amount\"\n                        value={`₹${formData.total_amount}`}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 font-semibold\"\n                        readOnly\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Received Amount</label>\n                      <input\n                        type=\"number\"\n                        name=\"rec_amount\"\n                        value={formData.rec_amount}\n                        max={formData.total_amount}\n                        onChange={(e) => {\n                          const total = parseFloat(formData.total_amount) || 0;\n                          const received = parseFloat(e.target.value) || 0;\n                          \n                          // For GEN/Paid category, validate received amount\n                          if (formData.petient_type === 'GEN / Paid') {\n                            if (received > total) {\n                              return;\n                            }\n                          }\n                          \n                          const discount = parseFloat(formData.dis_amount) || 0;\n                          const due = total - received - discount;\n                          setFormData(prev => ({ ...prev, rec_amount: e.target.value, due_amount: due.toString() }));\n                        }}\n                        className={`w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-sky-500 ${\n                          formData.petient_type !== 'GEN / Paid' ? 'bg-gray-50' : ''\n                        }`}\n                        placeholder=\"0\"\n                        readOnly={formData.petient_type !== 'GEN / Paid'}\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Discount</label>\n                      <input\n                        type=\"number\"\n                        name=\"dis_amount\"\n                        value={formData.dis_amount}\n                        onChange={(e) => {\n                          const total = parseFloat(formData.total_amount) || 0;\n                          const received = parseFloat(formData.rec_amount) || 0;\n                          const discount = parseFloat(e.target.value) || 0;\n                          const due = total - received - discount;\n                          setFormData(prev => ({ ...prev, dis_amount: e.target.value, due_amount: due.toString() }));\n                        }}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-sky-500\"\n                        placeholder=\"0\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Amount</label>\n                      <input\n                        type=\"text\"\n                        name=\"due_amount\"\n                        value={`₹${formData.due_amount}`}\n                        className={`w-full px-3 py-2 border border-gray-300 rounded-md font-semibold ${\n                          parseFloat(formData.due_amount) > 0 ? 'bg-red-50 text-red-700' : 'bg-green-50 text-green-700'\n                        }`}\n                        readOnly\n                      />\n                    </div>\n                  </div>\n                  \n                  {/* Payment Status */}\n                  <div className={`text-center p-3 rounded-md ${\n                    isPrintEnabled() ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'\n                  }`}>\n                    <span className={`font-semibold ${\n                      isPrintEnabled() ? 'text-green-700' : 'text-red-700'\n                    }`}>\n                      {isPrintEnabled() \n                        ? 'Ready to print' \n                        : 'Payment Required - Complete payment to enable printing'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Navigation Buttons */}\n          <div className=\"flex justify-between pt-6 border-t border-gray-200\">\n            <button\n              type=\"button\"\n              onClick={prevStep}\n              disabled={currentStep === 1}\n              className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span>Previous</span>\n            </button>\n\n            <div className=\"flex space-x-2\">\n              {currentStep < 3 ? (\n                <button\n                  type=\"button\"\n                  onClick={nextStep}\n                  className=\"flex items-center space-x-2 px-4 py-2 bg-sky-600 text-white rounded-md hover:bg-sky-700\"\n                >\n                  <span>Next</span>\n                  <ArrowRight className=\"h-4 w-4\" />\n                </button>\n              ) : (\n                <>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleSubmit('Save')}\n                    disabled={isSaved}\n                    className=\"flex items-center space-x-2 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-lg transition-all duration-200\"\n                  >\n                    <Check className=\"h-5 w-5\" />\n                    <span>{isSaved ? 'SAVED' : 'SAVE'}</span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleSubmit('Print')}\n                    disabled={!isSaved}\n                    className=\"flex items-center space-x-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-lg transition-all duration-200\"\n                    title={isSaved ? 'Print Receipt' : 'Save patient first to enable printing'}\n                  >\n                    <FileText className=\"h-5 w-5\" />\n                    <span>PRINT</span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      const confirmed = window.confirm('Are you sure you want to exit? Any unsaved changes will be lost.');\n                      if (confirmed) {\n                        if (toast && typeof toast.info === 'function') {\n                          toast.info('Exiting patient registration');\n                        }\n                        window.location.href = '/reception/patient-registration';\n                      }\n                    }}\n                    className=\"flex items-center space-x-2 px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 font-medium shadow-lg transition-all duration-200\"\n                  >\n                    <ArrowLeft className=\"h-5 w-5\" />\n                    <span>EXIT</span>\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}