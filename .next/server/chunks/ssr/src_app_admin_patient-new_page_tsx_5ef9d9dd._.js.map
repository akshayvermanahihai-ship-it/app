{"version":3,"sources":["turbopack:///[project]/src/app/admin/patient-new/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { User, Calendar, FileText, Plus, ArrowLeft, ArrowRight, Check, ChevronDown } from 'lucide-react';\nimport SuperAdminLayout from '@/components/SuperAdminLayout';\nimport LastEnrolledPatient from '@/components/LastEnrolledPatient';\n\ninterface FormData {\n  // Step 1 - Enrollment Details\n  date: string;\n  hospital_name: string;\n  doctor_name: string;\n  pre: string;\n  firstname: string;\n  age: string;\n  age_type: string;\n  gender: string;\n  petient_type: string;\n  p_uni_submit: string;\n  p_uni_id_name: string;\n  address: string;\n  city: string;\n  contact_number: string;\n  \n  // Step 2 - Scan Options\n  type_of_scan: string[];\n  appoint_date: string;\n  time: string;\n  time_in: string;\n  amount: string;\n  est_time: string;\n  \n  // Step 3 - Payment Details\n  total_amount: string;\n  rec_amount: string;\n  dis_amount: string;\n  due_amount: string;\n}\n\ninterface Hospital {\n  h_id: number;\n  h_name: string;\n}\n\ninterface Doctor {\n  d_id: number;\n  dname: string;\n}\n\ninterface Scan {\n  s_id: number;\n  s_name: string;\n  charges: number;\n  estimate_time: string;\n}\n\nexport default function AdminPatientNew() {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [hospitals, setHospitals] = useState<Hospital[]>([]);\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [scans, setScans] = useState<Scan[]>([]);\n  const [selectedScans, setSelectedScans] = useState<Scan[]>([]);\n  const [showUniId, setShowUniId] = useState(false);\n  const [scanSearchTerm, setScanSearchTerm] = useState('');\n  const [hospitalSearchTerm, setHospitalSearchTerm] = useState('');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [showHospitalDropdown, setShowHospitalDropdown] = useState(false);\n  const [showDoctorDropdown, setShowDoctorDropdown] = useState(false);\n  const [showTimeInDropdown, setShowTimeInDropdown] = useState(false);\n  const [showTimeOutDropdown, setShowTimeOutDropdown] = useState(false);\n  const [timeInSearchTerm, setTimeInSearchTerm] = useState('');\n  const [timeOutSearchTerm, setTimeOutSearchTerm] = useState('');\n  const [errors, setErrors] = useState<{[key: string]: string}>({});\n  const [lastPatient, setLastPatient] = useState<{cro: string, patient_name: string} | null>(null);\n  const [timeSlots, setTimeSlots] = useState<{time_id: number, time_slot: string}[]>([]);\n  \n  const [formData, setFormData] = useState<FormData>({\n    date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n    hospital_name: '',\n    doctor_name: '',\n    pre: 'Mr.',\n    firstname: '',\n    age: '',\n    age_type: 'Year',\n    gender: 'Male',\n    petient_type: 'GEN / Paid',\n    p_uni_submit: 'N',\n    p_uni_id_name: '',\n    address: '',\n    city: '',\n    contact_number: '',\n    type_of_scan: [],\n    appoint_date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n    time: '',\n    time_in: '',\n    amount: '0',\n    est_time: '0',\n    total_amount: '0',\n    rec_amount: '0',\n    dis_amount: '0',\n    due_amount: '0'\n  });\n\n  useEffect(() => {\n    fetchHospitals();\n    fetchDoctors();\n    fetchScans();\n    fetchTimeSlots();\n    fetchLastPatient();\n\n    // Close dropdowns when clicking outside\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n      if (!target.closest('.relative')) {\n        setShowHospitalDropdown(false);\n        setShowDoctorDropdown(false);\n        setShowTimeInDropdown(false);\n        setShowTimeOutDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const fetchHospitals = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/admin/hospitals');\n      if (response.ok) {\n        const data = await response.json();\n        setHospitals(data.data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching hospitals:', error);\n    }\n  };\n\n  const fetchDoctors = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/admin/doctors');\n      if (response.ok) {\n        const data = await response.json();\n        setDoctors(Array.isArray(data) ? data : []);\n      }\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n\n  const fetchScans = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/admin/scans');\n      if (response.ok) {\n        const data = await response.json();\n        setScans(data.success ? data.data : []);\n      }\n    } catch (error) {\n      console.error('Error fetching scans:', error);\n    }\n  };\n\n  const fetchTimeSlots = async () => {\n    try {\n      // Generate time slots from 7 AM to 6 PM\n      const slots = [];\n      for (let hour = 7; hour < 18; hour++) {\n        for (let minute = 0; minute < 60; minute += 15) {\n          const time24 = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n          const timeAMPM = formatTimeToAMPM(time24);\n          slots.push({ time_id: slots.length + 1, time_slot: timeAMPM });\n        }\n      }\n      setTimeSlots(slots);\n    } catch (error) {\n      console.error('Error generating time slots:', error);\n      setTimeSlots([]);\n    }\n  };\n\n  const fetchLastPatient = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/admin/patients/last-enrolled');\n      if (response.ok) {\n        const data = await response.json();\n        setLastPatient(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching last patient:', error);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n    \n    // Handle category change for ID requirement\n    if (name === 'petient_type') {\n      const freeCategories = ['IPD FREE', 'OPD FREE', 'RTA', 'RGHS', 'Chiranjeevi', 'Destitute', 'PRISONER', 'Sn. CITIZEN', 'Aayushmaan'];\n      setShowUniId(freeCategories.includes(value));\n    }\n  };\n\n  // Convert 24-hour time to 12-hour AM/PM format\n  const formatTimeToAMPM = (time24: string) => {\n    const [hours, minutes] = time24.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const hours12 = hours % 12 || 12;\n    return `${hours12.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n\n  // Convert 12-hour AM/PM time to 24-hour format\n  const convertAMPMTo24 = (timeAMPM: string) => {\n    const [time, period] = timeAMPM.split(' ');\n    const [hours, minutes] = time.split(':').map(Number);\n    let hours24 = hours;\n    \n    if (period === 'PM' && hours !== 12) {\n      hours24 += 12;\n    } else if (period === 'AM' && hours === 12) {\n      hours24 = 0;\n    }\n    \n    return `${hours24.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  };\n\n  const calculateTimeOut = (timeIn: string, estimatedMinutes: number) => {\n    if (!timeIn || !estimatedMinutes) return;\n    \n    // Parse time in format HH:MM\n    const [hours, minutes] = timeIn.split(':').map(Number);\n    const timeInDate = new Date();\n    timeInDate.setHours(hours, minutes, 0, 0);\n    \n    // Add estimated minutes\n    const timeOutDate = new Date(timeInDate.getTime() + estimatedMinutes * 60000);\n    \n    // Format back to HH:MM\n    const timeOut = `${timeOutDate.getHours().toString().padStart(2, '0')}:${timeOutDate.getMinutes().toString().padStart(2, '0')}`;\n    \n    setFormData(prev => ({\n      ...prev,\n      time_in: timeOut\n    }));\n    setTimeOutSearchTerm(formatTimeToAMPM(timeOut));\n  };\n\n  // Get current time when appointment date changes\n  const getCurrentTime = () => {\n    const now = new Date();\n    return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\n  };\n\n  // Handle appointment date change\n  const handleAppointmentDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Always set current time as default for Time In\n    const currentTime = getCurrentTime();\n    \n    setFormData(prev => ({ ...prev, time: currentTime }));\n    setTimeInSearchTerm(formatTimeToAMPM(currentTime));\n    \n    // Auto calculate time out if estimated time is available\n    const estimatedTime = parseInt(formData.est_time) || 0;\n    if (estimatedTime > 0) {\n      calculateTimeOut(currentTime, estimatedTime);\n    }\n  };\n\n  const handleScanChange = (scanId: string, checked: boolean) => {\n    let newSelectedScans = [...formData.type_of_scan];\n    \n    if (checked) {\n      newSelectedScans.push(scanId);\n    } else {\n      newSelectedScans = newSelectedScans.filter(id => id !== scanId);\n    }\n    \n    setFormData(prev => ({ ...prev, type_of_scan: newSelectedScans }));\n    \n    // Calculate totals\n    const selected = scans.filter(scan => newSelectedScans.includes(scan.s_id.toString()));\n    setSelectedScans(selected);\n    \n    let totalAmount = selected.reduce((sum, scan) => sum + scan.charges, 0);\n    const totalTime = selected.reduce((sum, scan) => {\n      const timeMatch = scan.estimate_time?.match(/(\\d+)/);\n      return sum + (timeMatch ? parseInt(timeMatch[1]) : 0);\n    }, 0);\n    \n    // Free categories get 0 amount\n    const freeCategories = ['Destitute', 'Chiranjeevi', 'RGHS', 'RTA', 'OPD FREE', 'IPD FREE', 'BPL/POOR', 'Sn. CITIZEN', 'BHAMASHAH', 'JSSY', 'PRISONER', 'Aayushmaan'];\n    if (freeCategories.includes(formData.petient_type)) {\n      totalAmount = 0;\n    }\n    \n    setFormData(prev => {\n      const newFormData = {\n        ...prev,\n        amount: totalAmount.toString(),\n        est_time: totalTime.toString(),\n        total_amount: totalAmount.toString()\n      };\n      \n      const received = parseFloat(prev.rec_amount) || 0;\n      const discount = parseFloat(prev.dis_amount) || 0;\n      const due = totalAmount - received - discount;\n      \n      return {\n        ...newFormData,\n        due_amount: due.toString()\n      };\n    });\n    \n    // Auto calculate time out if time in is selected\n    if (formData.time && totalTime > 0) {\n      calculateTimeOut(formData.time, totalTime);\n    }\n  };\n\n  const isPrintEnabled = () => {\n    const freeCategories = ['Destitute', 'Chiranjeevi', 'RGHS', 'RTA', 'OPD FREE', 'IPD FREE', 'BPL/POOR', 'Sn. CITIZEN', 'BHAMASHAH', 'JSSY', 'PRISONER', 'Aayushmaan'];\n    if (freeCategories.includes(formData.petient_type)) {\n      return true;\n    }\n    const dueAmount = parseFloat(formData.due_amount) || 0;\n    return dueAmount === 0;\n  };\n\n  const validateStep = (step: number) => {\n    const newErrors: {[key: string]: string} = {};\n    \n    if (step === 1) {\n      if (!formData.hospital_name) newErrors.hospital_name = 'Hospital Name is required';\n      if (!formData.doctor_name) newErrors.doctor_name = 'Doctor Name is required';\n      if (!formData.firstname.trim()) newErrors.firstname = 'Patient Name is required';\n      if (!formData.age.trim()) newErrors.age = 'Age is required';\n      if (formData.contact_number && !/^[0-9]{10}$/.test(formData.contact_number)) {\n        newErrors.contact_number = 'Contact Number must be 10 digits';\n      }\n    }\n    \n    if (step === 2) {\n      if (formData.type_of_scan.length === 0) newErrors.type_of_scan = 'At least one scan type is required';\n      if (!formData.time) newErrors.time = 'Time In is required';\n      if (!formData.time_in) newErrors.time_in = 'Time Out is required';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const nextStep = () => {\n    if (validateStep(currentStep)) {\n      if (currentStep < 3) {\n        setCurrentStep(currentStep + 1);\n      }\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleSubmit = async (action: string) => {\n    try {\n      const submitData = {\n        hospital_name: formData.hospital_name,\n        DoctorName: formData.doctor_name,\n        pre: formData.pre,\n        firstname: formData.firstname,\n        age: formData.age,\n        age_type: formData.age_type,\n        gender: formData.gender,\n        petient_type: formData.petient_type,\n        p_uni_submit: formData.p_uni_submit || 'N',\n        p_uni_id_name: formData.p_uni_id_name || '',\n        address: formData.address,\n        city: formData.city,\n        contact_number: formData.contact_number,\n        type_of_scan: formData.type_of_scan,\n        appoint_date: formData.appoint_date,\n        time: formData.time,\n        time_in: formData.time_in,\n        amount: formData.amount,\n        total_amount: formData.total_amount,\n        dis_amount: formData.dis_amount,\n        rec_amount: formData.rec_amount,\n        due_amount: formData.due_amount,\n        admin_id: 1,\n        action: action\n      };\n\n      const response = await fetch('https://varahasdc.co.in/api/admin/patients', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(submitData)\n      });\n      \n      if (response.ok) {\n        const result = await response.json();\n        const cro = result.data?.cro || 'Registered';\n        \n        alert(`Patient registered successfully! CRO: ${cro}`);\n        \n        if (action === 'Save_Print') {\n          printReceipt(result.data);\n        }\n        \n        if (action === 'Save') {\n          resetForm();\n        }\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        alert(`Error: ${errorData.error || 'Failed to register patient'}`);\n      }\n    } catch (error) {\n      console.error('Error saving patient:', error);\n      alert('Error saving patient');\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n      hospital_name: '',\n      doctor_name: '',\n      pre: 'Mr.',\n      firstname: '',\n      age: '',\n      age_type: 'Year',\n      gender: 'Male',\n      petient_type: 'GEN / Paid',\n      p_uni_submit: 'N',\n      p_uni_id_name: '',\n      address: '',\n      city: '',\n      contact_number: '',\n      type_of_scan: [],\n      appoint_date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n      time: '',\n      time_in: '',\n      amount: '0',\n      est_time: '0',\n      total_amount: '0',\n      rec_amount: '0',\n      dis_amount: '0',\n      due_amount: '0'\n    });\n    \n    setHospitalSearchTerm('');\n    setDoctorSearchTerm('');\n    setTimeInSearchTerm('');\n    setTimeOutSearchTerm('');\n    setScanSearchTerm('');\n    setSelectedScans([]);\n    setCurrentStep(1);\n    fetchLastPatient();\n  };\n\n  const printReceipt = (patientData: any) => {\n    const currentDate = new Date().toLocaleDateString('en-GB');\n    const investigations = selectedScans.map(scan => scan.s_name).join(', ');\n    \n    const printContent = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Patient Receipt - ${patientData.cro || 'New Patient'}</title>\n          <style>\n            body { font-family: Arial, sans-serif; margin: 0; padding: 10px; }\n            .admission_form { text-align: center; color: #000000; font-size: 14px; width: 100%; }\n            .admission_form table { width: 100%; font-size: 10px; margin: -5px 0px; }\n            .form_input { padding: 2px 1%; font-size: 16px; border: none; font-weight: bold; }\n          </style>\n        </head>\n        <body>\n          <div class=\"admission_form\" style=\"border:solid thin; margin-top:20px;\">\n            <table>\n              <tr><td colspan=\"6\" align=\"center\">Dr. S.N. MEDICL COLLEGE AND ATTACHED GROUP OF HOSPITAL, JODHPUR</td></tr>\n              <tr><td colspan=\"6\" align=\"center\">VARAHA SDC - 256 SLICE CT SCAN</td></tr>\n              <tr><td colspan=\"6\" align=\"center\">Cash Receipt</td></tr>\n            </table>\n            <table>\n              <tr>\n                <td width=\"80\">Reg.No :</td>\n                <td><input type=\"text\" class=\"form_input\" value=\"${patientData.cro || ''}\"></td>\n                <td width=\"30\">Date</td>\n                <td><input type=\"text\" class=\"form_input\" value=\"${currentDate}\"></td>\n              </tr>\n            </table>\n            <table>\n              <tr>\n                <td width=\"130\">Name Of Patient :</td>\n                <td><input type=\"text\" class=\"form_input\" value=\"${formData.pre} ${formData.firstname}\"></td>\n                <td>Age :</td>\n                <td><input type=\"text\" class=\"form_input\" value=\"${formData.age} ${formData.age_type}\"></td>\n                <td>Gender</td>\n                <td><input type=\"text\" class=\"form_input\" value=\"${formData.gender}\"></td>\n              </tr>\n            </table>\n            <table>\n              <tr>\n                <td width=\"80\">Investiations:</td>\n                <td><input type=\"text\" class=\"form_input\" value=\"${investigations}\"></td>\n              </tr>\n            </table>\n            <table>\n              <tr>\n                <td width=\"150\">For Sum Of Rupees:</td>\n                <td><input type=\"text\" class=\"form_input\" value=\"Rs. ${formData.total_amount}/-\"></td>\n                <td width=\"150\"><input type=\"text\" value=\"Rs. ${formData.total_amount}\" style=\"border:2px solid;\"></td>\n              </tr>\n            </table>\n          </div>\n        </body>\n      </html>\n    `;\n    \n    const printWindow = window.open('', '_blank', 'width=800,height=600');\n    if (printWindow) {\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      setTimeout(() => {\n        printWindow.focus();\n        printWindow.print();\n      }, 100);\n    }\n  };\n\n  return (\n    <SuperAdminLayout \n      title=\"New Patient Registration\" \n      subtitle=\"Complete patient enrollment and scan booking\"\n      actions={\n        <LastEnrolledPatient />\n      }\n    >\n      <div className=\"space-y-6\">\n\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100\">\n          {/* Step Navigation */}\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"flex\">\n              <button\n                className={`flex-1 py-4 px-6 text-center border-b-2 font-medium text-sm ${\n                  currentStep === 1 \n                    ? 'border-red-500 text-red-600 bg-red-50' \n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n                onClick={() => setCurrentStep(1)}\n              >\n                1. Enrollment Detail\n              </button>\n              <button\n                className={`flex-1 py-4 px-6 text-center border-b-2 font-medium text-sm ${\n                  currentStep === 2 \n                    ? 'border-red-500 text-red-600 bg-red-50' \n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n                onClick={() => setCurrentStep(2)}\n              >\n                2. Scan Options\n              </button>\n              <button\n                className={`flex-1 py-4 px-6 text-center border-b-2 font-medium text-sm ${\n                  currentStep === 3 \n                    ? 'border-red-500 text-red-600 bg-red-50' \n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n                onClick={() => setCurrentStep(3)}\n              >\n                3. Payment Details\n              </button>\n            </nav>\n          </div>\n\n          <form className=\"p-6\">\n            {/* Step 1: Enrollment Details */}\n            {currentStep === 1 && (\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n                    <input\n                      type=\"text\"\n                      name=\"date\"\n                      value={formData.date.split('-').reverse().join('-')}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                      readOnly\n                    />\n                  </div>\n                  <div className=\"relative\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hospital Name <span className=\"text-red-500\">*</span></label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"text\"\n                        value={hospitalSearchTerm}\n                        onChange={(e) => {\n                          setHospitalSearchTerm(e.target.value);\n                          setShowHospitalDropdown(true);\n                        }}\n                        onFocus={() => setShowHospitalDropdown(true)}\n                        className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                          errors.hospital_name ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-red-500'\n                        }`}\n                        placeholder=\"Search and select hospital\"\n                        required\n                      />\n                      <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                    </div>\n                    {showHospitalDropdown && (\n                      <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                        {hospitals\n                          .filter(hospital => \n                            hospital.h_name.toLowerCase().includes(hospitalSearchTerm.toLowerCase())\n                          )\n                          .map(hospital => (\n                            <div\n                              key={hospital.h_id}\n                              className=\"px-3 py-2 hover:bg-red-50 cursor-pointer\"\n                              onClick={() => {\n                                setFormData(prev => ({ ...prev, hospital_name: hospital.h_id.toString() }));\n                                setHospitalSearchTerm(hospital.h_name);\n                                setShowHospitalDropdown(false);\n                                if (errors.hospital_name) {\n                                  setErrors(prev => ({ ...prev, hospital_name: '' }));\n                                }\n                              }}\n                            >\n                              {hospital.h_name}\n                            </div>\n                          ))\n                        }\n                      </div>\n                    )}\n                    {errors.hospital_name && <p className=\"text-red-500 text-sm mt-1\">{errors.hospital_name}</p>}\n                  </div>\n                  <div className=\"relative\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Doctor Name <span className=\"text-red-500\">*</span></label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"text\"\n                        value={doctorSearchTerm}\n                        onChange={(e) => {\n                          setDoctorSearchTerm(e.target.value);\n                          setShowDoctorDropdown(true);\n                        }}\n                        onFocus={() => setShowDoctorDropdown(true)}\n                        className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                          errors.doctor_name ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-red-500'\n                        }`}\n                        placeholder=\"Search and select doctor\"\n                        required\n                      />\n                      <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                    </div>\n                    {showDoctorDropdown && (\n                      <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                        {doctors\n                          .filter(doctor => \n                            doctor.dname.toLowerCase().includes(doctorSearchTerm.toLowerCase())\n                          )\n                          .map(doctor => (\n                            <div\n                              key={doctor.d_id}\n                              className=\"px-3 py-2 hover:bg-red-50 cursor-pointer\"\n                              onClick={() => {\n                                setFormData(prev => ({ ...prev, doctor_name: doctor.d_id.toString() }));\n                                setDoctorSearchTerm(doctor.dname);\n                                setShowDoctorDropdown(false);\n                                if (errors.doctor_name) {\n                                  setErrors(prev => ({ ...prev, doctor_name: '' }));\n                                }\n                              }}\n                            >\n                              {doctor.dname}\n                            </div>\n                          ))\n                        }\n                      </div>\n                    )}\n                    {errors.doctor_name && <p className=\"text-red-500 text-sm mt-1\">{errors.doctor_name}</p>}\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Patient Name <span className=\"text-red-500\">*</span></label>\n                    <select\n                      name=\"pre\"\n                      value={formData.pre}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                    >\n                      <option value=\"Mr.\">Mr.</option>\n                      <option value=\"Mrs.\">Mrs.</option>\n                      <option value=\"Master\">Master</option>\n                      <option value=\"Miss\">Miss</option>\n                      <option value=\"Baby\">Baby</option>\n                    </select>\n                  </div>\n                  <div className=\"md:col-span-3\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">&nbsp;</label>\n                    <input\n                      type=\"text\"\n                      name=\"firstname\"\n                      value={formData.firstname}\n                      onChange={handleInputChange}\n                      className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                        errors.firstname ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-red-500'\n                      }`}\n                      placeholder=\"Please enter your First name\"\n                      required\n                    />\n                    {errors.firstname && <p className=\"text-red-500 text-sm mt-1\">{errors.firstname}</p>}\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age <span className=\"text-red-500\">*</span></label>\n                    <input\n                      type=\"text\"\n                      name=\"age\"\n                      value={formData.age}\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        if (/^\\d*$/.test(value) && (value === '' || (parseInt(value) >= 0 && parseInt(value) <= 100))) {\n                          handleInputChange(e);\n                        }\n                      }}\n                      className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                        errors.age ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-red-500'\n                      }`}\n                      placeholder=\"Age (0-100)\"\n                      maxLength={3}\n                    />\n                    {errors.age && <p className=\"text-red-500 text-sm mt-1\">{errors.age}</p>}\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">In (Year/Month/Days)</label>\n                    <select\n                      name=\"age_type\"\n                      value={formData.age_type}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                    >\n                      <option value=\"Year\">Year</option>\n                      <option value=\"Month\">Month</option>\n                      <option value=\"Days\">Days</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label>\n                    <select\n                      name=\"gender\"\n                      value={formData.gender}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                    >\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\n                    <select\n                      name=\"petient_type\"\n                      value={formData.petient_type}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                    >\n                      <option value=\"GEN / Paid\">GEN / Paid</option>\n                      <option value=\"IPD FREE\">IPD Free</option>\n                      <option value=\"OPD FREE\">OPD Free</option>\n                      <option value=\"RTA\">RTA</option>\n                      <option value=\"RGHS\">RGHS</option>\n                      <option value=\"Chiranjeevi\">Chiranjeevi</option>\n                      <option value=\"Destitute\">Destitute</option>\n                      <option value=\"PRISONER\">PRISONER</option>\n                      <option value=\"Sn. CITIZEN\">Sn. CITIZEN</option>\n                      <option value=\"Aayushmaan\">Aayushmaan</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Address</label>\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    value={formData.address}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                    placeholder=\"Please enter your Address\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\n                    <input\n                      type=\"text\"\n                      name=\"city\"\n                      value={formData.city}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                      placeholder=\"Please enter your city\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contact Number</label>\n                    <input\n                      type=\"text\"\n                      name=\"contact_number\"\n                      value={formData.contact_number}\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        if (/^\\d*$/.test(value) && value.length <= 10) {\n                          handleInputChange(e);\n                        }\n                      }}\n                      className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                        errors.contact_number ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-red-500'\n                      }`}\n                      placeholder=\"10-digit mobile number\"\n                      maxLength={10}\n                    />\n                    {errors.contact_number && <p className=\"text-red-500 text-sm mt-1\">{errors.contact_number}</p>}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Step 2: Scan Options */}\n            {currentStep === 2 && (\n              <div className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-3\">Scan Type <span className=\"text-red-500\">*</span></label>\n                  <div className=\"mb-4\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search scans...\"\n                      value={scanSearchTerm}\n                      onChange={(e) => setScanSearchTerm(e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 mb-3\"\n                    />\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 max-h-60 overflow-y-auto border border-gray-200 rounded-md p-4\">\n                    {scans.filter(scan => \n                      scan.s_name.toLowerCase().includes(scanSearchTerm.toLowerCase())\n                    ).map(scan => (\n                      <label key={scan.s_id} className=\"flex items-center space-x-2 p-2 hover:bg-gray-50 rounded cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={formData.type_of_scan.includes(scan.s_id.toString())}\n                          onChange={(e) => handleScanChange(scan.s_id.toString(), e.target.checked)}\n                          className=\"rounded border-gray-300 text-red-600 focus:ring-red-500\"\n                        />\n                        <div className=\"flex-1\">\n                          <span className=\"text-sm font-medium\">{scan.s_name}</span>\n                          <div className=\"text-xs text-gray-500\">₹{scan.charges} • {scan.estimate_time} min</div>\n                        </div>\n                      </label>\n                    ))}\n                  </div>\n                  {errors.type_of_scan && <p className=\"text-red-500 text-sm mt-1\">{errors.type_of_scan}</p>}\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Appoint Date</label>\n                    <input\n                      type=\"date\"\n                      name=\"appoint_date\"\n                      value={formData.appoint_date}\n                      onChange={handleAppointmentDateChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                    />\n                  </div>\n                  <div className=\"relative\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Time In <span className=\"text-red-500\">*</span></label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"text\"\n                        value={timeInSearchTerm}\n                        onChange={(e) => {\n                          setTimeInSearchTerm(e.target.value);\n                          setShowTimeInDropdown(true);\n                        }}\n                        onFocus={() => setShowTimeInDropdown(true)}\n                        className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                          errors.time ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-red-500'\n                        }`}\n                        placeholder=\"Search and select time\"\n                        required\n                      />\n                      <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                    </div>\n                    {showTimeInDropdown && (\n                      <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                        {timeSlots\n                          .filter(slot => \n                            slot.time_slot.toLowerCase().includes(timeInSearchTerm.toLowerCase())\n                          )\n                          .map(slot => (\n                            <div\n                              key={slot.time_id}\n                              className=\"px-3 py-2 hover:bg-red-50 cursor-pointer\"\n                              onClick={() => {\n                                const time24 = convertAMPMTo24(slot.time_slot);\n                                setFormData(prev => ({ ...prev, time: time24 }));\n                                setTimeInSearchTerm(slot.time_slot);\n                                setShowTimeInDropdown(false);\n                                if (errors.time) {\n                                  setErrors(prev => ({ ...prev, time: '' }));\n                                }\n                                // Auto calculate time out\n                                const estimatedTime = parseInt(formData.est_time) || 0;\n                                if (estimatedTime > 0) {\n                                  calculateTimeOut(time24, estimatedTime);\n                                }\n                              }}\n                            >\n                              {slot.time_slot}\n                            </div>\n                          ))}\n                      </div>\n                    )}\n                    {errors.time && <p className=\"text-red-500 text-sm mt-1\">{errors.time}</p>}\n                  </div>\n                  <div className=\"relative\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Time Out <span className=\"text-red-500\">*</span></label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"text\"\n                        value={timeOutSearchTerm}\n                        onChange={(e) => {\n                          setTimeOutSearchTerm(e.target.value);\n                          setShowTimeOutDropdown(true);\n                        }}\n                        onFocus={() => setShowTimeOutDropdown(true)}\n                        className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                          errors.time_in ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-red-500'\n                        }`}\n                        placeholder=\"Search and select time\"\n                        required\n                      />\n                      <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                    </div>\n                    {showTimeOutDropdown && (\n                      <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                        {timeSlots\n                          .filter(slot => \n                            slot.time_slot.toLowerCase().includes(timeOutSearchTerm.toLowerCase())\n                          )\n                          .map(slot => (\n                            <div\n                              key={slot.time_id}\n                              className=\"px-3 py-2 hover:bg-red-50 cursor-pointer\"\n                              onClick={() => {\n                                const time24 = convertAMPMTo24(slot.time_slot);\n                                setFormData(prev => ({ ...prev, time_in: time24 }));\n                                setTimeOutSearchTerm(slot.time_slot);\n                                setShowTimeOutDropdown(false);\n                                if (errors.time_in) {\n                                  setErrors(prev => ({ ...prev, time_in: '' }));\n                                }\n                              }}\n                            >\n                              {slot.time_slot}\n                            </div>\n                          ))}\n                      </div>\n                    )}\n                    {errors.time_in && <p className=\"text-red-500 text-sm mt-1\">{errors.time_in}</p>}\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Amount</label>\n                    <input\n                      type=\"text\"\n                      name=\"amount\"\n                      value={formData.amount}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                      readOnly\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Estimated Time</label>\n                    <input\n                      type=\"text\"\n                      name=\"est_time\"\n                      value={formData.est_time}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                      readOnly\n                    />\n                  </div>\n                </div>\n\n                {selectedScans.length > 0 && (\n                  <div className=\"mt-6\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Selected Scans</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full border-collapse border border-gray-300\">\n                        <thead>\n                          <tr className=\"bg-gray-50\">\n                            <th className=\"border border-gray-300 px-4 py-2 text-left\">S.No</th>\n                            <th className=\"border border-gray-300 px-4 py-2 text-left\">Name Of Scan</th>\n                            <th className=\"border border-gray-300 px-4 py-2 text-left\">Charges</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {selectedScans.map((scan, index) => (\n                            <tr key={scan.s_id}>\n                              <td className=\"border border-gray-300 px-4 py-2\">{index + 1}</td>\n                              <td className=\"border border-gray-300 px-4 py-2\">{scan.s_name}</td>\n                              <td className=\"border border-gray-300 px-4 py-2\">₹{scan.charges}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Step 3: Payment Details */}\n            {currentStep === 3 && (\n              <div className=\"space-y-6\">\n                <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm\">\n                  <div className=\"bg-gradient-to-r from-red-50 to-red-50 px-4 py-3 border-b border-gray-200\">\n                    <h3 className=\"text-lg font-semibold text-gray-800 flex items-center\">\n                      <User className=\"h-5 w-5 mr-2 text-red-600\" />\n                      Patient Summary\n                    </h3>\n                  </div>\n                  <div className=\"p-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Patient Name</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.pre} {formData.firstname}</div>\n                      </div>\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Age & Gender</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.age} {formData.age_type}, {formData.gender}</div>\n                      </div>\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Category</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.petient_type}</div>\n                      </div>\n                      <div className=\"bg-gray-50 p-3 rounded-md\">\n                        <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Appointment Date</div>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formData.appoint_date.split('-').reverse().join('-')}</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white border border-gray-300 rounded-lg overflow-hidden\">\n                  <div className=\"bg-gray-100 px-4 py-3 border-b border-gray-300\">\n                    <h4 className=\"font-semibold text-gray-800\">Payment Details</h4>\n                  </div>\n                  \n                  <div className=\"p-4 space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Total Amount</label>\n                        <input\n                          type=\"text\"\n                          name=\"total_amount\"\n                          value={`₹${formData.total_amount}`}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 font-semibold\"\n                          readOnly\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Received Amount</label>\n                        <input\n                          type=\"number\"\n                          name=\"rec_amount\"\n                          value={formData.rec_amount}\n                          onChange={(e) => {\n                            const total = parseFloat(formData.total_amount) || 0;\n                            const received = parseFloat(e.target.value) || 0;\n                            const discount = parseFloat(formData.dis_amount) || 0;\n                            const due = total - received - discount;\n                            setFormData(prev => ({ ...prev, rec_amount: e.target.value, due_amount: due.toString() }));\n                          }}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                          placeholder=\"0\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Discount</label>\n                        <input\n                          type=\"number\"\n                          name=\"dis_amount\"\n                          value={formData.dis_amount}\n                          onChange={(e) => {\n                            const total = parseFloat(formData.total_amount) || 0;\n                            const received = parseFloat(formData.rec_amount) || 0;\n                            const discount = parseFloat(e.target.value) || 0;\n                            const due = total - received - discount;\n                            setFormData(prev => ({ ...prev, dis_amount: e.target.value, due_amount: due.toString() }));\n                          }}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                          placeholder=\"0\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Amount</label>\n                        <input\n                          type=\"text\"\n                          name=\"due_amount\"\n                          value={`₹${formData.due_amount}`}\n                          className={`w-full px-3 py-2 border border-gray-300 rounded-md font-semibold ${\n                            parseFloat(formData.due_amount) > 0 ? 'bg-red-50 text-red-700' : 'bg-green-50 text-green-700'\n                          }`}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                    <div className={`text-center p-3 rounded-md ${\n                      isPrintEnabled() ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'\n                    }`}>\n                      <span className={`font-semibold ${\n                        isPrintEnabled() ? 'text-green-700' : 'text-red-700'\n                      }`}>\n                        {isPrintEnabled() \n                          ? 'Ready to print' \n                          : 'Payment Required - Complete payment to enable printing'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Navigation Buttons */}\n            <div className=\"flex justify-between pt-6 border-t border-gray-200\">\n              <button\n                type=\"button\"\n                onClick={prevStep}\n                disabled={currentStep === 1}\n                className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <ArrowLeft className=\"h-4 w-4\" />\n                <span>Previous</span>\n              </button>\n\n              <div className=\"flex space-x-2\">\n                {currentStep < 3 ? (\n                  <button\n                    type=\"button\"\n                    onClick={nextStep}\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\n                  >\n                    <span>Next</span>\n                    <ArrowRight className=\"h-4 w-4\" />\n                  </button>\n                ) : (\n                  <>\n                    <button\n                      type=\"button\"\n                      onClick={() => handleSubmit('Save')}\n                      className=\"flex items-center space-x-2 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 font-medium shadow-lg transition-all duration-200\"\n                    >\n                      <Check className=\"h-5 w-5\" />\n                      <span>SAVE</span>\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        if (!isPrintEnabled()) {\n                          alert('Please complete payment before printing receipt');\n                          return;\n                        }\n                        handleSubmit('Save_Print');\n                      }}\n                      disabled={!isPrintEnabled()}\n                      className=\"flex items-center space-x-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-lg transition-all duration-200\"\n                    >\n                      <FileText className=\"h-5 w-5\" />\n                      <span>PRINT</span>\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </SuperAdminLayout>\n  );\n}"],"names":[],"mappings":"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"}