{"version":3,"sources":["turbopack:///[project]/src/app/superadmin/doctor-scan-report/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Stethoscope, Download, Filter, Calendar, User, FileText } from 'lucide-react';\nimport SuperAdminLayout from '@/components/SuperAdminLayout';\nimport { useToastContext } from '@/context/ToastContext';\n\ninterface DoctorScanReport {\n  doctor_id: number;\n  doctor_name: string;\n  patient_cro: string;\n  patient_name: string;\n  scan_types: string;\n  scan_names: string;\n  scan_head_names: string;\n  total_amount: number;\n  report_date: string;\n  category: string;\n}\n\ninterface SummaryData {\n  total_doctors: number;\n  total_reports: number;\n  total_amount: number;\n  by_doctor: Array<{\n    doctor_name: string;\n    report_count: number;\n    total_amount: number;\n  }>;\n  by_head: Array<{\n    head_name: string;\n    doctor_count: number;\n    report_count: number;\n    total_amount: number;\n  }>;\n}\n\nexport default function DoctorScanReport() {\n  const toast = useToastContext();\n  const [reports, setReports] = useState<DoctorScanReport[]>([]);\n  const [summary, setSummary] = useState<SummaryData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [filters, setFilters] = useState({\n    doctor_id: '',\n    scan_head_id: '',\n    from_date: '',\n    to_date: '',\n\n  });\n  const [doctors, setDoctors] = useState<Array<{d_id: number, doctor_name: string}>>([]);\n  const [scanHeads, setScanHeads] = useState<Array<{id: number, head_name: string}>>([]);\n\n\n  useEffect(() => {\n    fetchDoctors();\n    fetchScanHeads();\n    fetchReports();\n  }, []);\n\n  const fetchDoctors = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/doctor/ct-scan-doctors');\n      if (response.ok) {\n        const data = await response.json();\n        setDoctors(data.data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n\n  const fetchScanHeads = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/admin/scan-heads');\n      if (response.ok) {\n        const data = await response.json();\n        setScanHeads(data.data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching scan heads:', error);\n    }\n  };\n\n  const fetchReports = async () => {\n    setLoading(true);\n    setCurrentPage(1);\n    try {\n      const params = new URLSearchParams();\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value && value !== 'All') params.append(key, value);\n      });\n      \n      const response = await fetch(`https://varahasdc.co.in/api/superadmin/doctor-scan-report?${params}`);\n      if (response.ok) {\n        const data = await response.json();\n        setReports(data.data || []);\n        setSummary(data.summary || null);\n      }\n    } catch (error) {\n      console.error('Error fetching reports:', error);\n      toast.error('Error fetching reports');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Pagination logic\n  const totalPages = Math.ceil(reports.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const paginatedReports = reports.slice(startIndex, startIndex + itemsPerPage);\n\n  const handleFilterChange = (key: string, value: string) => {\n    setFilters(prev => ({ ...prev, [key]: value }));\n  };\n\n  const downloadReport = async () => {\n    try {\n      if (reports.length === 0) {\n        toast.error('No data to export');\n        return;\n      }\n\n      const dateRange = filters.from_date && filters.to_date ? `${filters.from_date} to ${filters.to_date}` : 'All Dates';\n      const doctorFilter = filters.doctor_id ? doctors.find(d => d.d_id === parseInt(filters.doctor_id))?.doctor_name || 'Unknown' : 'All Doctors';\n      \n      let html = `\n        <html>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=Windows-1252\">\n        <body>\n        <table border=\"1\" style=\"border-collapse: collapse; width: 100%;\">\n          <tr>\n            <th colspan=\"8\" style=\"background-color:#2F75B5; color:white; text-align:center; padding:8px;\">VARAHA SDC</th>\n          </tr>\n          <tr>\n            <th colspan=\"8\" style=\"background-color:#2F75B5; color:white; text-align:center; padding:8px;\">DOCTOR SCAN REPORT</th>\n          </tr>\n          <tr>\n            <th colspan=\"8\" style=\"background-color:#FFEA00; color:black; text-align:center; padding:8px;\">Date Range: ${dateRange}</th>\n          </tr>\n          <tr>\n            <th colspan=\"8\" style=\"background-color:#FFEA00; color:black; text-align:center; padding:8px;\">Doctor Filter: ${doctorFilter}</th>\n          </tr>\n          <tr><td colspan=\"8\" style=\"height:10px;\"></td></tr>\n          <tr>\n            <th colspan=\"8\" style=\"background-color:#2F75B5; color:white; text-align:center; padding:8px;\">REPORTS BY DOCTOR</th>\n          </tr>\n          <tr>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Sr.No</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Doctor</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Reports</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Amount</th>\n            <th colspan=\"4\"></th>\n          </tr>\n      `;\n      \n      // Doctor summary data\n      (summary?.by_doctor || []).forEach((item, index) => {\n        html += `\n          <tr>\n            <td style=\"text-align:center; padding:3px;\">${index + 1}</td>\n            <td style=\"padding:3px;\">${item.doctor_name || 'Unknown'}</td>\n            <td style=\"text-align:right; padding:3px;\">${item.report_count || 0}</td>\n            <td style=\"text-align:right; padding:3px;\">${parseFloat(String(item.total_amount || 0)).toFixed(2)}</td>\n            <td colspan=\"4\"></td>\n          </tr>\n        `;\n      });\n      \n      const doctorTotalReports = (summary?.by_doctor || []).reduce((sum, item) => sum + (item.report_count || 0), 0);\n      const doctorTotalAmount = (summary?.by_doctor || []).reduce((sum, item) => sum + parseFloat(String(item.total_amount || 0)), 0);\n      \n      html += `\n          <tr>\n            <td></td>\n            <td style=\"background-color:#FFFF99; font-weight:bold; padding:5px;\">Total</td>\n            <td style=\"background-color:#FFFF99; font-weight:bold; text-align:right; padding:5px;\">${doctorTotalReports}</td>\n            <td style=\"background-color:#FFFF99; font-weight:bold; text-align:right; padding:5px;\">${doctorTotalAmount.toFixed(2)}</td>\n            <td colspan=\"4\"></td>\n          </tr>\n          <tr><td colspan=\"8\" style=\"height:15px;\"></td></tr>\n          <tr>\n            <th colspan=\"8\" style=\"background-color:#2F75B5; color:white; text-align:center; padding:8px;\">REPORTS BY SCAN HEAD</th>\n          </tr>\n          <tr>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Sr.No</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Scan Head</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Doctors</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Reports</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Rate/Report</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Amount</th>\n            <th colspan=\"2\"></th>\n          </tr>\n      `;\n      \n      // Scan head data\n      (summary?.by_head || []).forEach((item, index) => {\n        const ratePerReport = (item.report_count || 0) > 0 ? (item.total_amount || 0) / (item.report_count || 0) : 0;\n        html += `\n          <tr>\n            <td style=\"text-align:center; padding:3px;\">${index + 1}</td>\n            <td style=\"padding:3px;\">${item.head_name || 'Unknown'}</td>\n            <td style=\"text-align:right; padding:3px;\">${item.doctor_count || 0}</td>\n            <td style=\"text-align:right; padding:3px;\">${item.report_count || 0}</td>\n            <td style=\"text-align:right; padding:3px;\">${ratePerReport.toFixed(2)}</td>\n            <td style=\"text-align:right; padding:3px;\">${parseFloat(String(item.total_amount || 0)).toFixed(2)}</td>\n            <td colspan=\"2\"></td>\n          </tr>\n        `;\n      });\n      \n      const headTotalDoctors = (summary?.by_head || []).reduce((sum, item) => sum + (item.doctor_count || 0), 0);\n      const headTotalReports = (summary?.by_head || []).reduce((sum, item) => sum + (item.report_count || 0), 0);\n      const headTotalAmount = (summary?.by_head || []).reduce((sum, item) => sum + (parseFloat(String(item.total_amount)) || 0), 0);\n      \n      html += `\n          <tr>\n            <td></td>\n            <td style=\"background-color:#FFFF99; font-weight:bold; padding:5px;\">Total</td>\n            <td style=\"background-color:#FFFF99; font-weight:bold; text-align:right; padding:5px;\"></td>\n            <td style=\"background-color:#FFFF99; font-weight:bold; text-align:right; padding:5px;\">${headTotalReports}</td>\n            <td style=\"background-color:#FFFF99; padding:5px;\"></td>\n            <td style=\"background-color:#FFFF99; font-weight:bold; text-align:right; padding:5px;\">${headTotalAmount.toFixed(2)}</td>\n            <td colspan=\"2\"></td>\n          </tr>\n          <tr><td colspan=\"8\" style=\"height:15px;\"></td></tr>\n          <tr>\n            <th colspan=\"8\" style=\"background-color:#2F75B5; color:white; text-align:center; padding:8px;\">DETAILED REPORTS</th>\n          </tr>\n          <tr>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">S.No</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Doctor Name</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Patient Name</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">CRO</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Scan Types</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Scan Heads</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Amount</th>\n            <th style=\"background-color:#D3D3D3; padding:5px;\">Report Date</th>\n          </tr>\n      `;\n      \n      // Detailed reports\n      reports.forEach((row, index) => {\n        html += `\n          <tr>\n            <td style=\"text-align:center; padding:3px;\">${index + 1}</td>\n            <td style=\"padding:3px;\">${row.doctor_name || ''}</td>\n            <td style=\"padding:3px;\">${row.patient_name || ''}</td>\n            <td style=\"padding:3px;\">${row.patient_cro || ''}</td>\n            <td style=\"padding:3px;\">${row.scan_names || ''}</td>\n            <td style=\"padding:3px;\">${row.scan_head_names || ''}</td>\n            <td style=\"text-align:right; padding:3px;\">${parseFloat(String(row.total_amount || 0)).toFixed(2)}</td>\n            <td style=\"padding:3px;\">${row.report_date || ''}</td>\n          </tr>\n        `;\n      });\n      \n      html += `\n        </table>\n        </body>\n        </html>\n      `;\n      \n      // Create and download file\n      const blob = new Blob([html], { type: 'application/vnd.ms-excel' });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'doctor-scan-report.xls';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      toast.success('Report downloaded successfully');\n    } catch (error) {\n      console.error('Download error:', error);\n      toast.error('Error downloading report');\n    }\n  };\n\n  return (\n    <SuperAdminLayout \n      title=\"Doctor Scan Report\" \n      subtitle=\"Comprehensive doctor scan reporting with amount calculations\"\n    >\n      <div className=\"space-y-6\">\n        {/* Filters */}\n        <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100\">\n          <div className=\"flex items-center mb-4\">\n            <Filter className=\"h-5 w-5 text-gray-600 mr-2\" />\n            <h3 className=\"text-lg font-semibold\">Filters</h3>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Doctor</label>\n              <select\n                value={filters.doctor_id}\n                onChange={(e) => handleFilterChange('doctor_id', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500\"\n              >\n                <option value=\"\">All Doctors</option>\n                {doctors.map(doctor => (\n                  <option key={doctor.d_id} value={doctor.d_id}>{doctor.doctor_name}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Scan Head</label>\n              <select\n                value={filters.scan_head_id}\n                onChange={(e) => handleFilterChange('scan_head_id', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500\"\n              >\n                <option value=\"\">All Heads</option>\n                {scanHeads.map(head => (\n                  <option key={head.id} value={head.id}>{head.head_name}</option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">From Date</label>\n              <input\n                type=\"date\"\n                value={filters.from_date ? filters.from_date.split('-').reverse().join('-') : ''}\n                onChange={(e) => {\n                  const date = e.target.value;\n                  if (date) {\n                    const [year, month, day] = date.split('-');\n                    handleFilterChange('from_date', `${day}-${month}-${year}`);\n                  } else {\n                    handleFilterChange('from_date', '');\n                  }\n                }}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">To Date</label>\n              <input\n                type=\"date\"\n                value={filters.to_date ? filters.to_date.split('-').reverse().join('-') : ''}\n                onChange={(e) => {\n                  const date = e.target.value;\n                  if (date) {\n                    const [year, month, day] = date.split('-');\n                    handleFilterChange('to_date', `${day}-${month}-${year}`);\n                  } else {\n                    handleFilterChange('to_date', '');\n                  }\n                }}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500\"\n              />\n            </div>\n          </div>\n          <div className=\"flex space-x-3 mt-4\">\n            <button\n              onClick={fetchReports}\n              disabled={loading}\n              className=\"px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50\"\n            >\n              {loading ? 'Loading...' : 'Apply Filters'}\n            </button>\n            <button\n              onClick={downloadReport}\n              className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n            >\n              <Download className=\"h-4 w-4 mr-2 inline\" />\n              Excel\n            </button>\n\n          </div>\n        </div>\n\n        {/* Summary Cards */}\n        {summary && (\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100\">\n              <div className=\"flex items-center\">\n                <User className=\"h-8 w-8 text-blue-600\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Total Doctors</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">{summary.total_doctors || 0}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100\">\n              <div className=\"flex items-center\">\n                <FileText className=\"h-8 w-8 text-green-600\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Total Reports</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">{summary.total_reports || 0}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100\">\n              <div className=\"flex items-center\">\n                <Calendar className=\"h-8 w-8 text-purple-600\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Total Amount</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">₹{(summary.total_amount || 0).toLocaleString()}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Summary Tables */}\n        {summary && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* By Doctor Summary */}\n            <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100\">\n              <h3 className=\"text-lg font-semibold mb-4\">Reports by Doctor</h3>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-sm\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left\">Sr.No</th>\n                      <th className=\"px-4 py-2 text-left\">Doctor</th>\n                      <th className=\"px-4 py-2 text-left\">Patient</th>\n                      <th className=\"px-4 py-2 text-left\">Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {summary.by_doctor && summary.by_doctor.length > 0 ? (\n                      <>\n                        {summary.by_doctor.map((item, index) => (\n                          <tr key={index} className=\"border-t\">\n                            <td className=\"px-4 py-2\">{index + 1}</td>\n                            <td className=\"px-4 py-2\">{item.doctor_name || 'Unknown'}</td>\n                            <td className=\"px-4 py-2\">{item.report_count || 0}</td>\n                            <td className=\"px-4 py-2\">₹{(item.total_amount || 0).toLocaleString()}</td>\n                          </tr>\n                        ))}\n                        <tr className=\"border-t-2 border-gray-400 bg-gray-100 font-bold\">\n                          <td className=\"px-4 py-2\"></td>\n                          <td className=\"px-4 py-2\">Total</td>\n                          <td className=\"px-4 py-2\">{summary.by_doctor.reduce((sum, item) => sum + parseInt(String(item.report_count || 0)), 0)}</td>\n                          <td className=\"px-4 py-2\">₹{summary.by_doctor.reduce((sum, item) => sum + parseFloat(String(item.total_amount || 0)), 0).toFixed(2)}</td>\n                        </tr>\n                      </>\n                    ) : (\n                      <tr>\n                        <td colSpan={4} className=\"px-4 py-4 text-center text-gray-500\">No data available</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* By Head Summary */}\n            <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100\">\n              <h3 className=\"text-lg font-semibold mb-4\">Reports by Scan Head</h3>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-sm\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left\">Sr.No</th>\n                      <th className=\"px-4 py-2 text-left\">Scan Head</th>\n                      <th className=\"px-4 py-2 text-left\">Doctors</th>\n                      <th className=\"px-4 py-2 text-left\">Reports</th>\n                       <th className=\"px-4 py-2 text-left\">Rate/Report</th>\n                      <th className=\"px-4 py-2 text-left\">Amount</th>\n                     \n                    </tr>\n                  </thead>\n                  <tbody>\n                    {summary.by_head && summary.by_head.length > 0 ? (\n                      <>\n                        {summary.by_head.map((item, index) => {\n                          const ratePerReport = (item.report_count || 0) > 0 ? (item.total_amount || 0) / (item.report_count || 0) : 0;\n                          return (\n                            <tr key={index} className=\"border-t\">\n                              <td className=\"px-4 py-2\">{index + 1}</td>\n                              <td className=\"px-4 py-2\">{item.head_name || 'Unknown'}</td>\n                              <td className=\"px-4 py-2\">{item.doctor_count || 0}</td>\n                              <td className=\"px-4 py-2\">{item.report_count || 0}</td>\n                              <td className=\"px-4 py-2\">₹{ratePerReport.toFixed(2)}</td>\n                              <td className=\"px-4 py-2\">₹{(item.total_amount || 0).toLocaleString()}</td>\n                       \n                            </tr>\n                          );\n                        })}\n                        <tr className=\"border-t-2 border-gray-400 bg-gray-100 font-bold\">\n                          <td className=\"px-4 py-2\"></td>\n                          <td className=\"px-4 py-2\">Total</td>\n                                                   <td className=\"px-4 py-2\"></td>\n                          <td className=\"px-4 py-2\">{summary.by_head.reduce((sum, item) => sum + (item.report_count || 0), 0)}</td>\n                             <td className=\"px-4 py-2\"></td>\n                          <td className=\"px-4 py-2\">₹{summary.by_head.reduce((sum, item) => sum + (parseFloat(String(item.total_amount)) || 0), 0).toFixed(2)}</td>\n                          \n                        </tr>\n                      </>\n                    ) : (\n                      <tr>\n                        <td colSpan={6} className=\"px-4 py-4 text-center text-gray-500\">No data available</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Detailed Reports Table */}\n        <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100\">\n          <h3 className=\"text-lg font-semibold mb-4\">Detailed Reports</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">S.No</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Doctor</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Patient</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">CRO</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Scan Types</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Scan Heads</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Amount</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Date</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Category</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200\">\n                {loading ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-6 py-8 text-center\">\n                      <div className=\"flex items-center justify-center\">\n                        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-500\"></div>\n                        <span className=\"ml-2 text-gray-600\">Loading reports...</span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : paginatedReports && paginatedReports.length > 0 ? paginatedReports.map((report, index) => (\n                  <tr key={index} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">{startIndex + index + 1}</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">{report.doctor_name || 'Unknown'}</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">{report.patient_name || 'Unknown'}</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">{report.patient_cro || 'N/A'}</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">{report.scan_names || 'N/A'}</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">{report.scan_head_names || 'N/A'}</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">₹{(parseFloat(String(report.total_amount)) || 0).toLocaleString()}</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">{report.report_date || 'N/A'}</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">{report.category || 'N/A'}</td>\n                  </tr>\n                )) : (\n                  <tr>\n                    <td colSpan={9} className=\"px-6 py-8 text-center text-gray-500\">\n                      No reports found for the selected criteria\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n            \n            {/* Pagination */}\n            {reports.length > itemsPerPage && (\n              <div className=\"flex items-center justify-between mt-6 px-6\">\n                <div className=\"text-sm text-gray-700\">\n                  Showing {startIndex + 1} to {Math.min(startIndex + itemsPerPage, reports.length)} of {reports.length} results\n                </div>\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                    disabled={currentPage === 1}\n                    className=\"px-3 py-1 border border-gray-300 rounded text-sm disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\n                  >\n                    Previous\n                  </button>\n                  \n                  {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                    const pageNum = currentPage <= 3 ? i + 1 : currentPage - 2 + i;\n                    if (pageNum > totalPages) return null;\n                    return (\n                      <button\n                        key={pageNum}\n                        onClick={() => setCurrentPage(pageNum)}\n                        className={`px-3 py-1 border rounded text-sm ${\n                          currentPage === pageNum\n                            ? 'bg-red-600 text-white border-red-600'\n                            : 'border-gray-300 hover:bg-gray-50'\n                        }`}\n                      >\n                        {pageNum}\n                      </button>\n                    );\n                  })}\n                  \n                  <button\n                    onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                    disabled={currentPage === totalPages}\n                    className=\"px-3 py-1 border border-gray-300 rounded text-sm disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\n                  >\n                    Next\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </SuperAdminLayout>\n  );\n}"],"names":[],"mappings":"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"}