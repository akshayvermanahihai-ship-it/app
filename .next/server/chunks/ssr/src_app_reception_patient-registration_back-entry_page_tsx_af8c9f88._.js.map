{"version":3,"sources":["turbopack:///[project]/src/app/reception/patient-registration/back-entry/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { User, Calendar, FileText, Plus, ArrowLeft, ArrowRight, Check, ChevronDown } from 'lucide-react';\nimport { useToastContext } from '@/context/ToastContext';\nimport LastEnrolledPatient from '@/components/LastEnrolledPatient';\n\ninterface FormData {\n  date: string;\n  scan_date: string;\n  cro: string;\n  hospital_name: string;\n  doctor_name: string;\n  pre: string;\n  firstname: string;\n  age: string;\n  age_type: string;\n  gender: string;\n  petient_type: string;\n  p_uni_submit: string;\n  p_uni_id_name: string;\n  address: string;\n  city: string;\n  contact_number: string;\n  type_of_scan: string[];\n  amount: string;\n  est_time: string;\n  total_amount: string;\n  rec_amount: string;\n  dis_amount: string;\n  due_amount: string;\n}\n\ninterface Hospital {\n  h_id: number;\n  h_name: string;\n}\n\ninterface Doctor {\n  d_id: number;\n  dname: string;\n}\n\ninterface Scan {\n  s_id: number;\n  s_name: string;\n  charges: number;\n  estimate_time: string;\n}\n\nexport default function BackEntryPatientRegistration() {\n  const toast = useToastContext();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [hospitals, setHospitals] = useState<Hospital[]>([]);\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [scans, setScans] = useState<Scan[]>([]);\n  const [selectedScans, setSelectedScans] = useState<Scan[]>([]);\n  const [showUniId, setShowUniId] = useState(false);\n  const [scanSearchTerm, setScanSearchTerm] = useState('');\n  const [hospitalSearchTerm, setHospitalSearchTerm] = useState('');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [showHospitalDropdown, setShowHospitalDropdown] = useState(false);\n  const [showDoctorDropdown, setShowDoctorDropdown] = useState(false);\n  const [errors, setErrors] = useState<{[key: string]: string}>({});\n  const [lastPatient, setLastPatient] = useState<{cro: string, patient_name: string} | null>(null);\n  \n  const [formData, setFormData] = useState<FormData>({\n    date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n    scan_date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n    cro: '',\n    hospital_name: '',\n    doctor_name: '',\n    pre: 'Mr.',\n    firstname: '',\n    age: '',\n    age_type: 'Year',\n    gender: 'Male',\n    petient_type: 'GEN',\n    p_uni_submit: 'N',\n    p_uni_id_name: '',\n    address: '',\n    city: '',\n    contact_number: '',\n    type_of_scan: [],\n    amount: '0',\n    est_time: '0',\n    total_amount: '0',\n    rec_amount: '0',\n    dis_amount: '0',\n    due_amount: '0'\n  });\n\n  useEffect(() => {\n    fetchHospitals();\n    fetchDoctors();\n    fetchScans();\n    fetchLastPatient();\n    generateCRO();\n\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n      if (!target.closest('.relative')) {\n        setShowHospitalDropdown(false);\n        setShowDoctorDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const fetchHospitals = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/hospitals');\n      if (response.ok) {\n        const data = await response.json();\n        setHospitals(data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching hospitals:', error);\n    }\n  };\n\n  const fetchDoctors = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/doctors');\n      if (response.ok) {\n        const data = await response.json();\n        setDoctors(data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n\n  const fetchScans = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/scans');\n      if (response.ok) {\n        const data = await response.json();\n        setScans(data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching scans:', error);\n    }\n  };\n\n  const fetchLastPatient = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/patients/last-enrolled');\n      if (response.ok) {\n        const data = await response.json();\n        setLastPatient(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching last patient:', error);\n    }\n  };\n\n  const generateCRO = async () => {\n    try {\n      const response = await fetch('https://varahasdc.co.in/api/reception/patients/generate-cro', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ date: formData.date })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFormData(prev => ({ ...prev, cro: data.cro }));\n      }\n    } catch (error) {\n      console.error('Error generating CRO:', error);\n      // Fallback CRO generation\n      const count = Math.floor(Math.random() * 100) + 1;\n      const cro = `VDC/${formData.date}/${count}`;\n      setFormData(prev => ({ ...prev, cro }));\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n    \n    if (name === 'date') {\n      setTimeout(() => generateCRO(), 100);\n    }\n    \n    if (name === 'petient_type') {\n      const freeCategories = ['BPL/POOR', 'Sn. CITIZEN'];\n      setShowUniId(freeCategories.includes(value));\n    }\n  };\n\n  const handleScanChange = (scanId: string, checked: boolean) => {\n    let newSelectedScans = [...formData.type_of_scan];\n    \n    if (checked) {\n      newSelectedScans.push(scanId);\n    } else {\n      newSelectedScans = newSelectedScans.filter(id => id !== scanId);\n    }\n    \n    setFormData(prev => ({ ...prev, type_of_scan: newSelectedScans }));\n    \n    const selected = scans.filter(scan => newSelectedScans.includes(scan.s_id.toString()));\n    setSelectedScans(selected);\n    \n    const totalAmount = selected.reduce((sum, scan) => sum + scan.charges, 0);\n    const totalTime = selected.reduce((sum, scan) => sum + parseInt(scan.estimate_time || '0'), 0);\n    \n    setFormData(prev => ({\n      ...prev,\n      amount: totalAmount.toString(),\n      est_time: totalTime.toString(),\n      total_amount: totalAmount.toString(),\n      due_amount: totalAmount.toString()\n    }));\n  };\n\n  const calculatePayment = () => {\n    const total = parseFloat(formData.total_amount) || 0;\n    const received = parseFloat(formData.rec_amount) || 0;\n    const discount = parseFloat(formData.dis_amount) || 0;\n    const due = total - received - discount;\n    \n    setFormData(prev => ({ ...prev, due_amount: due.toString() }));\n  };\n\n  const validateStep = (step: number) => {\n    const newErrors: {[key: string]: string} = {};\n    \n    if (step === 1) {\n      if (!formData.hospital_name) newErrors.hospital_name = 'Hospital Name is required';\n      if (!formData.doctor_name) newErrors.doctor_name = 'Doctor Name is required';\n      if (!formData.firstname.trim()) newErrors.firstname = 'Patient Name is required';\n      if (!formData.age.trim()) newErrors.age = 'Age is required';\n      if (!formData.contact_number.trim()) newErrors.contact_number = 'Contact Number is required';\n      if (formData.contact_number && !/^[0-9]{10}$/.test(formData.contact_number)) {\n        newErrors.contact_number = 'Contact Number must be 10 digits';\n      }\n    }\n    \n    if (step === 2) {\n      if (formData.type_of_scan.length === 0) newErrors.type_of_scan = 'At least one scan type is required';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const nextStep = () => {\n    if (validateStep(currentStep)) {\n      if (currentStep < 3) {\n        setCurrentStep(currentStep + 1);\n      }\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleSubmit = async (action: string) => {\n    try {\n      const submitData = {\n        date: formData.date,\n        scan_date: formData.scan_date,\n        hospital_name: formData.hospital_name,\n        DoctorName: formData.doctor_name,\n        pre: formData.pre,\n        firstname: formData.firstname,\n        age: formData.age,\n        age_type: formData.age_type,\n        gender: formData.gender,\n        petient_type: formData.petient_type,\n        p_uni_submit: formData.p_uni_submit || 'N',\n        p_uni_id_name: formData.p_uni_id_name || '',\n        address: formData.address,\n        city: formData.city,\n        contact_number: formData.contact_number,\n        type_of_scan: formData.type_of_scan,\n        amount: formData.amount,\n        est_time: formData.est_time,\n        total_amount: formData.total_amount,\n        dis_amount: formData.dis_amount,\n        rec_amount: formData.rec_amount,\n        due_amount: formData.due_amount,\n        admin_id: 1\n      };\n\n      const response = await fetch('https://varahasdc.co.in/api/reception/patients/back-entry', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(submitData)\n      });\n      \n      if (response.ok) {\n        const result = await response.json();\n        toast.success(`Back-entry patient registered successfully! CRO: ${result.data.cro}`);\n        \n        // Reset form\n        setFormData({\n          date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n          scan_date: new Date().toLocaleDateString('en-GB').split('/').reverse().join('-'),\n          cro: '',\n          hospital_name: '',\n          doctor_name: '',\n          pre: 'Mr.',\n          firstname: '',\n          age: '',\n          age_type: 'Year',\n          gender: 'Male',\n          petient_type: 'GEN',\n          p_uni_submit: 'N',\n          p_uni_id_name: '',\n          address: '',\n          city: '',\n          contact_number: '',\n          type_of_scan: [],\n          amount: '0',\n          est_time: '0',\n          total_amount: '0',\n          rec_amount: '0',\n          dis_amount: '0',\n          due_amount: '0'\n        });\n        \n        setHospitalSearchTerm('');\n        setDoctorSearchTerm('');\n        setScanSearchTerm('');\n        setSelectedScans([]);\n        generateCRO();\n        setCurrentStep(1);\n        fetchLastPatient();\n        \n      } else {\n        const errorData = await response.json();\n        toast.error(`Error: ${errorData.error || 'Failed to register back-entry patient'}`);\n      }\n    } catch (error) {\n      console.error('Error saving back-entry patient:', error);\n      toast.error('Error saving back-entry patient');\n    }\n  };\n\n  return (\n    <div className=\"p-3 sm:p-6 space-y-4 sm:space-y-6 min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n      <div className=\"bg-gradient-to-r from-blue-500 to-indigo-600 text-white p-4 sm:p-6 rounded-xl shadow-2xl\">\n        <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-start space-y-4 sm:space-y-0\">\n          <div>\n            <h1 className=\"text-xl sm:text-3xl font-bold mb-2\">Back Entry Patient Registration</h1>\n            <p className=\"text-blue-100 text-sm sm:text-lg\">Complete patient enrollment with back-entry functionality</p>\n          </div>\n          {lastPatient && (\n            <div className=\"bg-blue-600 bg-opacity-50 rounded-lg p-4 sm:p-6 text-center\">\n              <p className=\"text-blue-200 text-sm sm:text-base mb-3\">Last Enrolled Patient</p>\n              <p className=\"text-white font-bold text-lg sm:text-xl mb-2\">{lastPatient.cro}</p>\n              <p className=\"text-blue-100 text-base sm:text-lg font-medium\">{lastPatient.patient_name}</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-xl shadow-2xl border border-gray-100\">\n        {/* Step Navigation */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"flex flex-col sm:flex-row\">\n            <button\n              className={`flex-1 py-3 sm:py-4 px-3 sm:px-6 text-center border-b-2 font-medium text-xs sm:text-sm ${\n                currentStep === 1 \n                  ? 'border-blue-500 text-blue-600 bg-blue-50' \n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setCurrentStep(1)}\n            >\n              <span className=\"sm:hidden\">1. Enrollment</span>\n              <span className=\"hidden sm:inline\">1. Enrollment Detail</span>\n            </button>\n            <button\n              className={`flex-1 py-3 sm:py-4 px-3 sm:px-6 text-center border-b-2 font-medium text-xs sm:text-sm ${\n                currentStep === 2 \n                  ? 'border-blue-500 text-blue-600 bg-blue-50' \n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setCurrentStep(2)}\n            >\n              <span className=\"sm:hidden\">2. Scans</span>\n              <span className=\"hidden sm:inline\">2. Scan Options</span>\n            </button>\n            <button\n              className={`flex-1 py-3 sm:py-4 px-3 sm:px-6 text-center border-b-2 font-medium text-xs sm:text-sm ${\n                currentStep === 3 \n                  ? 'border-blue-500 text-blue-600 bg-blue-50' \n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n              onClick={() => setCurrentStep(3)}\n            >\n              <span className=\"sm:hidden\">3. Payment</span>\n              <span className=\"hidden sm:inline\">3. Payment Details</span>\n            </button>\n          </nav>\n        </div>\n\n        <form className=\"p-3 sm:p-6\">\n          {/* Step 1: Enrollment Details */}\n          {currentStep === 1 && (\n            <div className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">CRO No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"cro\"\n                    value={formData.cro}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n                  <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={formData.date}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Scan Date</label>\n                  <input\n                    type=\"date\"\n                    name=\"scan_date\"\n                    value={formData.scan_date}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"relative\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hospital Name <span className=\"text-red-500\">*</span></label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      value={hospitalSearchTerm}\n                      onChange={(e) => {\n                        setHospitalSearchTerm(e.target.value);\n                        setShowHospitalDropdown(true);\n                      }}\n                      onFocus={() => setShowHospitalDropdown(true)}\n                      className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                        errors.hospital_name ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                      }`}\n                      placeholder=\"Search and select hospital\"\n                      required\n                    />\n                    <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                  </div>\n                  {showHospitalDropdown && (\n                    <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                      {hospitals\n                        .filter(hospital => \n                          hospital.h_name.toLowerCase().includes(hospitalSearchTerm.toLowerCase())\n                        )\n                        .map(hospital => (\n                          <div\n                            key={hospital.h_id}\n                            className=\"px-3 py-2 hover:bg-blue-50 cursor-pointer\"\n                            onClick={() => {\n                              setFormData(prev => ({ ...prev, hospital_name: hospital.h_id.toString() }));\n                              setHospitalSearchTerm(hospital.h_name);\n                              setShowHospitalDropdown(false);\n                              if (errors.hospital_name) {\n                                setErrors(prev => ({ ...prev, hospital_name: '' }));\n                              }\n                            }}\n                          >\n                            {hospital.h_name}\n                          </div>\n                        ))\n                      }\n                    </div>\n                  )}\n                  {errors.hospital_name && <p className=\"text-red-500 text-sm mt-1\">{errors.hospital_name}</p>}\n                </div>\n                <div className=\"relative\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Doctor Name <span className=\"text-red-500\">*</span></label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      value={doctorSearchTerm}\n                      onChange={(e) => {\n                        setDoctorSearchTerm(e.target.value);\n                        setShowDoctorDropdown(true);\n                      }}\n                      onFocus={() => setShowDoctorDropdown(true)}\n                      className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 ${\n                        errors.doctor_name ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                      }`}\n                      placeholder=\"Search and select doctor\"\n                      required\n                    />\n                    <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n                  </div>\n                  {showDoctorDropdown && (\n                    <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto shadow-lg\">\n                      {doctors\n                        .filter(doctor => \n                          doctor.dname.toLowerCase().includes(doctorSearchTerm.toLowerCase())\n                        )\n                        .map(doctor => (\n                          <div\n                            key={doctor.d_id}\n                            className=\"px-3 py-2 hover:bg-blue-50 cursor-pointer\"\n                            onClick={() => {\n                              setFormData(prev => ({ ...prev, doctor_name: doctor.d_id.toString() }));\n                              setDoctorSearchTerm(doctor.dname);\n                              setShowDoctorDropdown(false);\n                              if (errors.doctor_name) {\n                                setErrors(prev => ({ ...prev, doctor_name: '' }));\n                              }\n                            }}\n                          >\n                            {doctor.dname}\n                          </div>\n                        ))\n                      }\n                    </div>\n                  )}\n                  {errors.doctor_name && <p className=\"text-red-500 text-sm mt-1\">{errors.doctor_name}</p>}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Patient Name <span className=\"text-red-500\">*</span></label>\n                  <select\n                    name=\"pre\"\n                    value={formData.pre}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"Mr.\">Mr.</option>\n                    <option value=\"Mrs.\">Mrs.</option>\n                    <option value=\"Master\">Master</option>\n                    <option value=\"Miss\">Miss</option>\n                    <option value=\"Baby\">Baby</option>\n                  </select>\n                </div>\n                <div className=\"md:col-span-3\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">&nbsp;</label>\n                  <input\n                    type=\"text\"\n                    name=\"firstname\"\n                    value={formData.firstname}\n                    onChange={handleInputChange}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      errors.firstname ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Please enter your First name\"\n                    required\n                  />\n                  {errors.firstname && <p className=\"text-red-500 text-sm mt-1\">{errors.firstname}</p>}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age <span className=\"text-red-500\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"age\"\n                    value={formData.age}\n                    onChange={handleInputChange}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      errors.age ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Age\"\n                  />\n                  {errors.age && <p className=\"text-red-500 text-sm mt-1\">{errors.age}</p>}\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">In (Year/Month/Days)</label>\n                  <select\n                    name=\"age_type\"\n                    value={formData.age_type}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"Year\">Year</option>\n                    <option value=\"Month\">Month</option>\n                    <option value=\"Days\">Days</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label>\n                  <select\n                    name=\"gender\"\n                    value={formData.gender}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\n                  <select\n                    name=\"petient_type\"\n                    value={formData.petient_type}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"GEN\">GEN</option>\n                    <option value=\"BPL/POOR\">BPL/POOR</option>\n                    <option value=\"Sn. CITIZEN\">Sn. CITIZEN</option>\n                  </select>\n                </div>\n              </div>\n\n              {showUniId && (\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">ID</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_uni_submit\"\n                      value={formData.p_uni_submit}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Y / N\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name Of ID</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_uni_id_name\"\n                      value={formData.p_uni_id_name}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"ID Name\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Upload ID</label>\n                    <input\n                      type=\"file\"\n                      name=\"p_uni_id_scan\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Address</label>\n                <input\n                  type=\"text\"\n                  name=\"address\"\n                  value={formData.address}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Please enter your Address\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\n                  <input\n                    type=\"text\"\n                    name=\"city\"\n                    value={formData.city}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Please enter your city\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contact Number <span className=\"text-red-500\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"contact_number\"\n                    value={formData.contact_number}\n                    onChange={handleInputChange}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      errors.contact_number ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Please enter your contact Number\"\n                  />\n                  {errors.contact_number && <p className=\"text-red-500 text-sm mt-1\">{errors.contact_number}</p>}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Step 2: Scan Options */}\n          {currentStep === 2 && (\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Scan Type <span className=\"text-red-500\">*</span></label>\n                <div className=\"mb-4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search scans...\"\n                    value={scanSearchTerm}\n                    onChange={(e) => setScanSearchTerm(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mb-3\"\n                  />\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 max-h-60 overflow-y-auto border border-gray-200 rounded-md p-4\">\n                  {scans.filter(scan => \n                    scan.s_name.toLowerCase().includes(scanSearchTerm.toLowerCase())\n                  ).map(scan => (\n                    <label key={scan.s_id} className=\"flex items-center space-x-2 p-2 hover:bg-gray-50 rounded cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={formData.type_of_scan.includes(scan.s_id.toString())}\n                        onChange={(e) => handleScanChange(scan.s_id.toString(), e.target.checked)}\n                        className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <div className=\"flex-1\">\n                        <span className=\"text-sm font-medium\">{scan.s_name}</span>\n                        <div className=\"text-xs text-gray-500\">₹{scan.charges} • {scan.estimate_time} min</div>\n                      </div>\n                    </label>\n                  ))}\n                </div>\n                {errors.type_of_scan && <p className=\"text-red-500 text-sm mt-1\">{errors.type_of_scan}</p>}\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"amount\"\n                    value={formData.amount}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Estimated Time</label>\n                  <input\n                    type=\"text\"\n                    name=\"est_time\"\n                    value={formData.est_time}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\"\n                    readOnly\n                  />\n                </div>\n              </div>\n\n              {selectedScans.length > 0 && (\n                <div className=\"mt-6\">\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Selected Scans</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse border border-gray-300\">\n                      <thead>\n                        <tr className=\"bg-gray-50\">\n                          <th className=\"border border-gray-300 px-4 py-2 text-left\">S.No</th>\n                          <th className=\"border border-gray-300 px-4 py-2 text-left\">Name Of Scan</th>\n                          <th className=\"border border-gray-300 px-4 py-2 text-left\">Charges</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {selectedScans.map((scan, index) => (\n                          <tr key={scan.s_id}>\n                            <td className=\"border border-gray-300 px-4 py-2\">{index + 1}</td>\n                            <td className=\"border border-gray-300 px-4 py-2\">{scan.s_name}</td>\n                            <td className=\"border border-gray-300 px-4 py-2\">₹{scan.charges}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Step 3: Payment Details */}\n          {currentStep === 3 && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 p-6 rounded-xl border border-blue-200\">\n                <h3 className=\"text-xl font-bold text-blue-900 mb-6 flex items-center\">\n                  <User className=\"h-5 w-5 mr-2\" />\n                  Patient Summary\n                </h3>\n                <div className=\"space-y-4\">\n                  <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                    <div className=\"flex items-center mb-2\">\n                      <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-3\"></div>\n                      <span className=\"text-sm font-medium text-gray-600 uppercase tracking-wide\">Full Name</span>\n                    </div>\n                    <p className=\"text-lg font-semibold text-gray-900 ml-5\">{formData.pre} {formData.firstname}</p>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                      <div className=\"flex items-center mb-2\">\n                        <div className=\"w-2 h-2 bg-green-500 rounded-full mr-3\"></div>\n                        <span className=\"text-sm font-medium text-gray-600 uppercase tracking-wide\">Age & Gender</span>\n                      </div>\n                      <p className=\"text-lg font-semibold text-gray-900 ml-5\">{formData.age} {formData.age_type}, {formData.gender}</p>\n                    </div>\n                    \n                    <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                      <div className=\"flex items-center mb-2\">\n                        <div className=\"w-2 h-2 bg-purple-500 rounded-full mr-3\"></div>\n                        <span className=\"text-sm font-medium text-gray-600 uppercase tracking-wide\">Category</span>\n                      </div>\n                      <p className=\"text-lg font-semibold text-gray-900 ml-5\">{formData.petient_type}</p>\n                    </div>\n                  </div>\n                  \n                  {formData.address && (\n                    <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                      <div className=\"flex items-center mb-2\">\n                        <div className=\"w-2 h-2 bg-orange-500 rounded-full mr-3\"></div>\n                        <span className=\"text-sm font-medium text-gray-600 uppercase tracking-wide\">Address</span>\n                      </div>\n                      <p className=\"text-lg font-semibold text-gray-900 ml-5\">{formData.address}</p>\n                    </div>\n                  )}\n                  \n                  {formData.contact_number && (\n                    <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                      <div className=\"flex items-center mb-2\">\n                        <div className=\"w-2 h-2 bg-red-500 rounded-full mr-3\"></div>\n                        <span className=\"text-sm font-medium text-gray-600 uppercase tracking-wide\">Contact Number</span>\n                      </div>\n                      <p className=\"text-lg font-semibold text-gray-900 ml-5\">{formData.contact_number}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full border-collapse border border-gray-300\">\n                  <thead>\n                    <tr className=\"bg-gray-50\">\n                      <th className=\"border border-gray-300 px-4 py-2 text-left\">Description</th>\n                      <th className=\"border border-gray-300 px-4 py-2 text-right\">Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {selectedScans.map(scan => (\n                      <tr key={scan.s_id}>\n                        <td className=\"border border-gray-300 px-4 py-2\">{scan.s_name}</td>\n                        <td className=\"border border-gray-300 px-4 py-2 text-right\">₹{scan.charges}</td>\n                      </tr>\n                    ))}\n                    <tr className=\"bg-gray-50\">\n                      <td className=\"border border-gray-300 px-4 py-2 font-medium text-right\">Total Amount</td>\n                      <td className=\"border border-gray-300 px-4 py-2\">\n                        <input\n                          type=\"text\"\n                          name=\"total_amount\"\n                          value={formData.total_amount}\n                          className=\"w-full px-2 py-1 border border-gray-300 rounded text-right bg-gray-50\"\n                          readOnly\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"border border-gray-300 px-4 py-2 font-medium text-right\">Received Amount</td>\n                      <td className=\"border border-gray-300 px-4 py-2\">\n                        <input\n                          type=\"text\"\n                          name=\"rec_amount\"\n                          value={formData.rec_amount}\n                          onChange={(e) => {\n                            handleInputChange(e);\n                            setTimeout(calculatePayment, 0);\n                          }}\n                          className=\"w-full px-2 py-1 border border-gray-300 rounded text-right focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"border border-gray-300 px-4 py-2 font-medium text-right\">Discount</td>\n                      <td className=\"border border-gray-300 px-4 py-2\">\n                        <input\n                          type=\"text\"\n                          name=\"dis_amount\"\n                          value={formData.dis_amount}\n                          onChange={(e) => {\n                            handleInputChange(e);\n                            setTimeout(calculatePayment, 0);\n                          }}\n                          className=\"w-full px-2 py-1 border border-gray-300 rounded text-right focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        />\n                      </td>\n                    </tr>\n                    <tr className=\"bg-yellow-50\">\n                      <td className=\"border border-gray-300 px-4 py-2 font-medium text-right\">Due Amount</td>\n                      <td className=\"border border-gray-300 px-4 py-2\">\n                        <input\n                          type=\"text\"\n                          name=\"due_amount\"\n                          value={formData.due_amount}\n                          className=\"w-full px-2 py-1 border border-gray-300 rounded text-right bg-yellow-50 font-medium\"\n                          readOnly\n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {/* Navigation Buttons */}\n          <div className=\"flex justify-between pt-6 border-t border-gray-200\">\n            <button\n              type=\"button\"\n              onClick={prevStep}\n              disabled={currentStep === 1}\n              className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span>Previous</span>\n            </button>\n\n            <div className=\"flex space-x-2\">\n              {currentStep < 3 ? (\n                <button\n                  type=\"button\"\n                  onClick={nextStep}\n                  className=\"flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-md hover:from-blue-600 hover:to-indigo-700 transition-all duration-200 shadow-md font-medium\"\n                >\n                  <span>Next</span>\n                  <ArrowRight className=\"h-4 w-4\" />\n                </button>\n              ) : (\n                <>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleSubmit('Save')}\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-green-500 to-emerald-600 text-white rounded-md hover:from-green-600 hover:to-emerald-700 transition-all duration-200 shadow-md font-medium\"\n                  >\n                    <Check className=\"h-4 w-4\" />\n                    <span>Save</span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleSubmit('Save_Print')}\n                    disabled={parseFloat(formData.due_amount) > 0}\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-md hover:from-blue-600 hover:to-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-md font-medium\"\n                  >\n                    <FileText className=\"h-4 w-4\" />\n                    <span>Save & Print</span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => window.location.href = '/reception/patient-registration'}\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-gray-500 to-gray-600 text-white rounded-md hover:from-gray-600 hover:to-gray-700 transition-all duration-200 shadow-md font-medium\"\n                  >\n                    <span>Exit</span>\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}