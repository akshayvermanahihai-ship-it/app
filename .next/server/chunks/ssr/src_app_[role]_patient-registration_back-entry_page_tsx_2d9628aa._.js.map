{"version":3,"sources":["turbopack:///[project]/src/app/[role]/patient-registration/back-entry/page.tsx"],"sourcesContent":["'use client';\n\nimport Layout from '@/components/layout/Layout';\nimport { FormInput, FormButton } from '@/components/ui/FormComponents';\nimport { Toast, useToast } from '@/components/ui/Toast';\nimport { useState, useEffect } from 'react';\nimport { Calendar, Clock, FileText, User, Save, Printer, X } from 'lucide-react';\nimport { useParams } from 'next/navigation';\n\nexport default function PatientRegistrationBackEntry() {\n  const params = useParams();\n  const role = params.role as string;\n  const [currentStep, setCurrentStep] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [hospitals, setHospitals] = useState<any[]>([]);\n  const [doctors, setDoctors] = useState<any[]>([]);\n  const [scans, setScans] = useState<any[]>([]);\n  const [lastPatient, setLastPatient] = useState<{cro: string, patient_name: string} | null>(null);\n  const { toast, showToast, hideToast } = useToast();\n\n  const [formData, setFormData] = useState({\n    cro: '',\n    date: new Date().toISOString().split('T')[0],\n    scan_date: new Date().toISOString().split('T')[0],\n    hospital_name: '',\n    doctor_name: '',\n    pre: 'Mr.',\n    firstname: '',\n    age: '',\n    age_type: 'Year',\n    gender: '',\n    category: '',\n    address: '',\n    city: '',\n    contact_number: '',\n    scan_types: [],\n    amount: '',\n    est_time: ''\n  });\n\n  useEffect(() => {\n    fetchMasterData();\n    fetchLastPatient();\n  }, []);\n\n  const fetchMasterData = async () => {\n    try {\n      const [hospitalsRes, doctorsRes, scansRes] = await Promise.all([\n        fetch('/api/hospitals'),\n        fetch('/api/doctors'),\n        fetch('/api/scans')\n      ]);\n      \n      setHospitals(await hospitalsRes.json());\n      setDoctors(await doctorsRes.json());\n      setScans(await scansRes.json());\n    } catch (error) {\n      console.error('Error fetching master data:', error);\n    }\n  };\n\n  const fetchLastPatient = async () => {\n    try {\n      const response = await fetch('/api/patients?last=true');\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setLastPatient(data[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching last patient:', error);\n    }\n  };\n\n  const generateCRO = async () => {\n    try {\n      const response = await fetch('/api/patients/cro', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ date: formData.date })\n      });\n      const data = await response.json();\n      setFormData(prev => ({ ...prev, cro: data.cro }));\n    } catch (error) {\n      console.error('Error generating CRO:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (formData.date) {\n      generateCRO();\n    }\n  }, [formData.date]);\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const calculateScanDetails = async () => {\n    if (formData.scan_types.length === 0) return;\n    \n    try {\n      const response = await fetch('/api/scans/calculate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ scan_ids: formData.scan_types })\n      });\n      const data = await response.json();\n      \n      setFormData(prev => ({\n        ...prev,\n        amount: data.total_amount,\n        est_time: data.estimated_time\n      }));\n    } catch (error) {\n      console.error('Error calculating scan details:', error);\n    }\n  };\n\n  useEffect(() => {\n    calculateScanDetails();\n  }, [formData.scan_types]);\n\n  const submitForm = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/patients', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          ...formData,\n          page_type: 'patient_back',\n          admin_id: 1 // Replace with actual admin ID\n        })\n      });\n\n      if (response.ok) {\n        showToast('Patient registered successfully with back entry!', 'success');\n        fetchLastPatient();\n        // Reset form\n        setFormData({\n          cro: '',\n          date: new Date().toISOString().split('T')[0],\n          scan_date: new Date().toISOString().split('T')[0],\n          hospital_name: '',\n          doctor_name: '',\n          pre: 'Mr.',\n          firstname: '',\n          age: '',\n          age_type: 'Year',\n          gender: '',\n          category: '',\n          address: '',\n          city: '',\n          contact_number: '',\n          scan_types: [],\n          amount: '',\n          est_time: ''\n        });\n        setCurrentStep(1);\n      } else {\n        showToast('Error registering patient', 'error');\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      showToast('Error registering patient', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderStepTabs = () => (\n    <ul className=\"flex border-b border-gray-200 mb-6\">\n      {[\n        { step: 1, title: '1. Enrollment Detail', icon: User },\n        { step: 2, title: '2. Scan Options', icon: FileText },\n        { step: 3, title: '3. Payment Details', icon: Clock }\n      ].map(({ step, title, icon: Icon }) => (\n        <li key={step} className=\"flex-1\">\n          <button\n            onClick={() => setCurrentStep(step)}\n            className={`w-full flex items-center justify-center px-4 py-3 text-sm font-medium border-b-2 transition-colors ${\n              currentStep === step\n                ? 'border-sky-500 text-sky-600 bg-sky-50'\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n          >\n            <Icon className=\"h-4 w-4 mr-2\" />\n            {title}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n\n  const renderStep1 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">CRO No.</label>\n          <input\n            type=\"text\"\n            value={formData.cro}\n            readOnly\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Registration Date</label>\n          <input\n            type=\"date\"\n            value={formData.date}\n            onChange={(e) => handleInputChange('date', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Scan Date</label>\n          <input\n            type=\"date\"\n            value={formData.scan_date}\n            onChange={(e) => handleInputChange('scan_date', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Hospital Name</label>\n          <select\n            value={formData.hospital_name}\n            onChange={(e) => handleInputChange('hospital_name', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          >\n            <option value=\"\">Select Hospital</option>\n            {hospitals.map((hospital: any) => (\n              <option key={hospital.h_id} value={hospital.h_id}>\n                {hospital.h_short}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Doctor Name</label>\n          <select\n            value={formData.doctor_name}\n            onChange={(e) => handleInputChange('doctor_name', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          >\n            <option value=\"\">Select Doctor</option>\n            {doctors.map((doctor: any) => (\n              <option key={doctor.d_id} value={doctor.d_id}>\n                {doctor.dname}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-12 gap-4\">\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Title</label>\n          <select\n            value={formData.pre}\n            onChange={(e) => handleInputChange('pre', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          >\n            <option value=\"Mr.\">Mr.</option>\n            <option value=\"Mrs.\">Mrs.</option>\n            <option value=\"Master\">Master</option>\n            <option value=\"Miss\">Miss</option>\n            <option value=\"Baby\">Baby</option>\n          </select>\n        </div>\n        <div className=\"md:col-span-10\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Patient Name</label>\n          <input\n            type=\"text\"\n            value={formData.firstname}\n            onChange={(e) => handleInputChange('firstname', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            placeholder=\"Enter patient name\"\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Age</label>\n          <input\n            type=\"number\"\n            value={formData.age}\n            onChange={(e) => handleInputChange('age', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Age Type</label>\n          <select\n            value={formData.age_type}\n            onChange={(e) => handleInputChange('age_type', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          >\n            <option value=\"Year\">Year</option>\n            <option value=\"Month\">Month</option>\n            <option value=\"Days\">Days</option>\n          </select>\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Gender</label>\n          <select\n            value={formData.gender}\n            onChange={(e) => handleInputChange('gender', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          >\n            <option value=\"\">Select</option>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n          </select>\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Category</label>\n          <select\n            value={formData.category}\n            onChange={(e) => handleInputChange('category', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          >\n            <option value=\"\">Select</option>\n            <option value=\"GEN\">GEN</option>\n            <option value=\"BPL/POOR\">BPL/POOR</option>\n            <option value=\"Sn. CITIZEN\">Sn. CITIZEN</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Address</label>\n          <input\n            type=\"text\"\n            value={formData.address}\n            onChange={(e) => handleInputChange('address', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            placeholder=\"Enter address\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">City</label>\n          <input\n            type=\"text\"\n            value={formData.city}\n            onChange={(e) => handleInputChange('city', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            placeholder=\"Enter city\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Contact Number</label>\n        <input\n          type=\"tel\"\n          value={formData.contact_number}\n          onChange={(e) => handleInputChange('contact_number', e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          placeholder=\"Enter contact number\"\n        />\n      </div>\n    </div>\n  );\n\n  const renderStep2 = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Scan Type</label>\n        <select\n          multiple\n          value={formData.scan_types}\n          onChange={(e) => {\n            const values = Array.from(e.target.selectedOptions, option => option.value);\n            handleInputChange('scan_types', values);\n          }}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg h-32\"\n        >\n          {scans.map((scan: any) => (\n            <option key={scan.s_id} value={scan.s_id}>\n              {scan.s_name}\n            </option>\n          ))}\n        </select>\n        <p className=\"text-sm text-gray-500 mt-1\">Hold Ctrl/Cmd to select multiple scans</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Amount</label>\n          <input\n            type=\"number\"\n            value={formData.amount}\n            onChange={(e) => handleInputChange('amount', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Estimated Time</label>\n          <input\n            type=\"text\"\n            value={formData.est_time}\n            readOnly\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50\"\n            placeholder=\"Auto calculated\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderStep3 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white border rounded-lg p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Invoice Summary</h3>\n        <div className=\"space-y-4\">\n          <div className=\"flex justify-between\">\n            <span>Patient Name:</span>\n            <span className=\"font-medium\">{formData.pre} {formData.firstname}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span>Age:</span>\n            <span>{formData.age} {formData.age_type}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span>Gender:</span>\n            <span>{formData.gender}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span>Address:</span>\n            <span>{formData.address}</span>\n          </div>\n          <hr />\n          <div className=\"flex justify-between font-semibold\">\n            <span>Total Amount:</span>\n            <span>₹{formData.amount}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Layout>\n      <div className=\"space-y-6\">\n        <div className=\"bg-white rounded-xl shadow-lg p-6\">\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-2xl font-bold text-gray-900\">Patient Registration Back Entry - {role}</h1>\n            {lastPatient && (\n              <div className=\"text-sm text-gray-600\">\n                <span className=\"font-medium\">Last Entry:</span> {lastPatient.cro} - {lastPatient.patient_name}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-xl p-6\">\n          {renderStepTabs()}\n          \n          <div className=\"min-h-96\">\n            {currentStep === 1 && renderStep1()}\n            {currentStep === 2 && renderStep2()}\n            {currentStep === 3 && renderStep3()}\n          </div>\n\n          <div className=\"flex justify-between items-center mt-8 pt-6 border-t\">\n            <div className=\"flex space-x-2\">\n              {currentStep > 1 && (\n                <button\n                  onClick={() => setCurrentStep(currentStep - 1)}\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50\"\n                >\n                  Previous\n                </button>\n              )}\n            </div>\n            \n            <div className=\"flex space-x-2\">\n              {currentStep < 3 ? (\n                <button\n                  onClick={() => setCurrentStep(currentStep + 1)}\n                  className=\"px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600\"\n                >\n                  Next\n                </button>\n              ) : (\n                <div className=\"flex space-x-2\">\n                  <FormButton\n                    onClick={submitForm}\n                    disabled={loading}\n                  >\n                    <Save className=\"h-4 w-4 mr-2\" />\n                    {loading ? 'Saving...' : 'Save'}\n                  </FormButton>\n                  <FormButton\n                    onClick={() => {\n                      submitForm();\n                      // Add print logic here\n                    }}\n                    disabled={loading}\n                    className=\"bg-green-500 hover:bg-green-600\"\n                  >\n                    <Printer className=\"h-4 w-4 mr-2\" />\n                    Save & Print\n                  </FormButton>\n                  <button\n                    onClick={() => setCurrentStep(1)}\n                    className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50\"\n                  >\n                    <X className=\"h-4 w-4 mr-2\" />\n                    Exit\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          isVisible={toast.isVisible}\n          onClose={hideToast}\n        />\n      </div>\n    </Layout>\n  );\n}"],"names":[],"mappings":"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"}