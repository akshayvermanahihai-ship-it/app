{"version":3,"sources":["turbopack:///[project]/src/app/console/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Users, Clock, Activity, CheckCircle } from 'lucide-react';\n\ninterface DashboardStats {\n  todayPatients: number;\n  completedToday: number;\n  pendingQueue: number;\n  totalProcessed: number;\n}\n\nexport default function ConsoleDashboard() {\n  const [stats, setStats] = useState<DashboardStats>({\n    todayPatients: 0,\n    completedToday: 0,\n    pendingQueue: 0,\n    totalProcessed: 0\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchStats();\n  }, []);\n\n  const fetchStats = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/console/stats');\n      if (response.ok) {\n        const data = await response.json();\n        setStats(data);\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('Console stats API error:', errorData);\n        console.log('Full stats API error response:', errorData);\n        console.log('Response status:', response.status);\n        console.log('Response headers:', response.headers);\n      }\n    } catch (error) {\n      console.error('Error fetching console stats:', error);\n      console.log('Fetch error details:', {\n        message: error instanceof Error ? error.message : 'Unknown error',\n        stack: error instanceof Error ? error.stack : 'No stack trace'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const statCards = [\n    {\n      title: 'Today\\'s Patients',\n      value: stats.todayPatients,\n      icon: Users,\n      color: 'bg-sky-500',\n      bgColor: 'bg-sky-50',\n      textColor: 'text-sky-600'\n    },\n    {\n      title: 'Completed Today',\n      value: stats.completedToday,\n      icon: CheckCircle,\n      color: 'bg-sky-400',\n      bgColor: 'bg-sky-50',\n      textColor: 'text-sky-600'\n    },\n    {\n      title: 'Pending Queue',\n      value: stats.pendingQueue,\n      icon: Clock,\n      color: 'bg-sky-600',\n      bgColor: 'bg-sky-50',\n      textColor: 'text-sky-600'\n    },\n    {\n      title: 'Total Processed',\n      value: stats.totalProcessed,\n      icon: Activity,\n      color: 'bg-sky-700',\n      bgColor: 'bg-sky-50',\n      textColor: 'text-sky-600'\n    }\n  ];\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-sky-500 to-sky-600 text-white p-6 rounded-xl shadow-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold mb-2\">Console Dashboard</h1>\n            <p className=\"text-sky-100\">Welcome to Console Management System</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {statCards.map((card, index) => {\n          const IconComponent = card.icon;\n          return (\n            <a\n              key={index}\n              href=\"/console/daily-report\"\n              className={`${card.bgColor} p-6 rounded-xl shadow-lg border border-gray-100 hover:shadow-xl transition-all duration-200 cursor-pointer transform hover:scale-105`}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600 mb-1\">{card.title}</p>\n                  <p className={`text-3xl font-bold ${card.textColor}`}>\n                    {loading ? '...' : (card.value || 0).toLocaleString()}\n                  </p>\n                </div>\n                <div className={`${card.color} p-3 rounded-lg`}>\n                  <IconComponent className=\"h-6 w-6 text-white\" />\n                </div>\n              </div>\n            </a>\n          );\n        })}\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"bg-white rounded-xl shadow-lg border border-gray-100 p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Quick Actions</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <a\n            href=\"/console\"\n            className=\"flex items-center space-x-3 p-4 bg-sky-50 rounded-lg hover:bg-sky-100 transition-colors\"\n          >\n            <Users className=\"h-8 w-8 text-sky-600\" />\n            <div>\n              <h3 className=\"font-medium text-gray-900\">Patient Queue</h3>\n              <p className=\"text-sm text-gray-600\">Manage patient queue</p>\n            </div>\n          </a>\n          \n          <a\n            href=\"/console/daily-report\"\n            className=\"flex items-center space-x-3 p-4 bg-sky-50 rounded-lg hover:bg-sky-100 transition-colors\"\n          >\n            <Activity className=\"h-8 w-8 text-sky-600\" />\n            <div>\n              <h3 className=\"font-medium text-gray-900\">Daily Report</h3>\n              <p className=\"text-sm text-gray-600\">View daily activities</p>\n            </div>\n          </a>\n          \n          <div className=\"flex items-center space-x-3 p-4 bg-gray-50 rounded-lg\">\n            <Clock className=\"h-8 w-8 text-gray-600\" />\n            <div>\n              <h3 className=\"font-medium text-gray-900\">Current Time</h3>\n              <p className=\"text-sm text-gray-600\">\n                {new Date().toLocaleTimeString('en-IN', { timeZone: 'Asia/Calcutta' })}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}